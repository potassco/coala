%walker encoding

<fluent> at(X,Y) <where> node(X,Y).
<fluent> blocked(X,Y) <where> node(X,Y).

<inertial> at(X,Y) <where> node(X,Y).
<default> -blocked(X,Y) <where> node(X,Y).

<action> move(up).
%<action> move(down).
%%<action> move(left).
%<action> move(right).

at(X,Y), -at(X,Y1) <after> move(up),    at(X,Y1) <where> node(X,Y), node(X,Y1), Y = Y1 + 1.
%at(X,Y), -at(X,Y1) <after> move(down),  at(X,Y1) <where> node(X,Y), node(X,Y1), Y1 = Y + 1.
%at(X,Y), -at(X1,Y) <after> move(right), at(X1,Y) <where> node(X,Y), node(X1,Y), X = X1 + 1.
%at(X,Y), -at(X1,Y) <after> move(left),  at(X1,Y) <where> node(X,Y), node(X1,Y), X1 = X + 1.

%%<nonexecutable> move(left)  <if> at(X, Y), wall(X1, Y) <where> node(X,Y), node(X1,Y), X = X1 + 1.
%<nonexecutable> move(right) <if> at(X, Y), wall(X1, Y) <where> node(X,Y), node(X1,Y), X1 = X + 1.
<nonexecutable> move(up)    <if> at(X, Y), wall(X, Y1) <where> node(X,Y), node(X,Y1), Y1 = Y + 1.
%<nonexecutable> move(down)  <if> at(X, Y), wall(X, Y1) <where> node(X,Y), node(X,Y1), Y = Y1 + 1.

%blocked(X1,Y) <if> at(X, Y), wall(X1, Y) <where> node(X,Y), node(X1,Y), X = X1 + 1.
%blocked(X1,Y) <if> at(X, Y), wall(X1, Y) <where> node(X,Y), node(X1,Y), X1 = X + 1.
blocked(X,Y1) <if> at(X, Y), wall(X, Y1) <where> node(X,Y), node(X,Y1), Y1 = Y + 1.
%blocked(X,Y1) <if> at(X, Y), wall(X, Y1) <where> node(X,Y), node(X,Y1), Y = Y1 + 1.

<impossible> at(X,Y) <where> wall(X,Y).
<impossible> at(X,Y) <where> obstacle(X,Y).
<impossible> at(X,Y), at(X1, Y) <where> node(X,Y), node(X1,Y), X1 != X.
<impossible> at(X,Y), at(X, Y1) <where> node(X,Y), node(X, Y1), Y1 != Y.

<initially> at(X,Y) <where> init(at(X,Y)).
<initially> -at(X,Y) <where> not init(at(X,Y)), node(X,Y).
