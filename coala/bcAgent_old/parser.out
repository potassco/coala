Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> <empty>
Rule 2     program -> program rule DOT
Rule 3     program -> program ESCAPE_ASP
Rule 4     program -> program ROLE_BEGIN role ROLE_END
Rule 5     role -> <empty>
Rule 6     role -> role rule DOT
Rule 7     role -> role ESCAPE_ASP
Rule 8     rule -> fact
Rule 9     rule -> law
Rule 10    rule -> query
Rule 11    fact -> pred_fact
Rule 12    fact -> act_fact
Rule 13    fact -> flu_fact
Rule 14    law -> static_law
Rule 15    law -> dynamic_law
Rule 16    law -> inertial_law
Rule 17    law -> default_law
Rule 18    law -> imposs_law
Rule 19    law -> nonexe_law
Rule 20    law -> visible_law
Rule 21    visible_law -> VISIBLE formula if_part where_part
Rule 22    query -> init_rule
Rule 23    query -> goal_query
Rule 24    pred_fact -> formula where_part
Rule 25    act_fact -> ACT fluent_formula where_part
Rule 26    flu_fact -> FLU fluent_formula where_part
Rule 27    flu_fact -> DFLU fluent_formula where_part
Rule 28    static_law -> formula IF formula ifcons_part where_part
Rule 29    static_law -> formula IFCONS formula where_part
Rule 30    dynamic_law -> formula after_part ifcons_part where_part
Rule 31    dynamic_law -> formula CAUSES formula where_part
Rule 32    dynamic_law -> formula CAUSES formula IF formula where_part
Rule 33    inertial_law -> INERTIAL fluent_formula where_part
Rule 34    default_law -> DEFAULT formula where_part
Rule 35    default_law -> DEFAULT formula IF formula where_part
Rule 36    default_law -> DEFAULT formula AFTER formula where_part
Rule 37    imposs_law -> IMPOSSIBLE formula ifcons_part where_part
Rule 38    nonexe_law -> NONEXE formula if_part ifcons_part where_part
Rule 39    init_rule -> INIT formula where_part
Rule 40    goal_query -> GOAL formula where_part
Rule 41    if_part -> <empty>
Rule 42    if_part -> IF formula
Rule 43    after_part -> AFTER formula
Rule 44    ifcons_part -> <empty>
Rule 45    ifcons_part -> IFCONS formula
Rule 46    where_part -> <empty>
Rule 47    where_part -> WHERE bindings
Rule 48    bindings -> binding
Rule 49    bindings -> bindings COMMA binding
Rule 50    binding -> ACT fluent
Rule 51    binding -> FLU fluent equalpart
Rule 52    binding -> NOT asp_term
Rule 53    binding -> asp_term
Rule 54    formula -> tfa
Rule 55    formula -> formula COMMA tfa
Rule 56    tfa -> atom
Rule 57    tfa -> TRUE
Rule 58    tfa -> FALSE
Rule 59    atom -> fluent equalpart
Rule 60    atom -> NOT fluent equalpart
Rule 61    atom -> MINUS fluent equalpart
Rule 62    fluent_formula -> fluent equalpart
Rule 63    fluent_formula -> fluent_formula COMMA fluent equalpart
Rule 64    equalpart -> <empty>
Rule 65    equalpart -> EQ fluent
Rule 66    fluent -> IDENTIFIER
Rule 67    fluent -> var_term
Rule 68    fluent -> IDENTIFIER LBRAC term_list RBRAC
Rule 69    term_list -> term
Rule 70    term_list -> term COMMA term_list
Rule 71    term -> var_term
Rule 72    term -> IDENTIFIER
Rule 73    term -> NUMBER
Rule 74    term -> MINUS NUMBER
Rule 75    term -> IDENTIFIER LBRAC term_list RBRAC
Rule 76    var_term -> VARIABLE
Rule 77    asp_term -> asp_operation
Rule 78    asp_term -> asp_operation asp_eqoperator asp_operation
Rule 79    asp_operation -> term
Rule 80    asp_operation -> asp_operation asp_operator term
Rule 81    asp_eqoperator -> EQQ
Rule 82    asp_eqoperator -> EQ
Rule 83    asp_eqoperator -> NEQ
Rule 84    asp_eqoperator -> LT
Rule 85    asp_eqoperator -> GT
Rule 86    asp_eqoperator -> LE
Rule 87    asp_eqoperator -> GE
Rule 88    asp_operator -> PLUS
Rule 89    asp_operator -> MINUS
Rule 90    asp_operator -> TIMES
Rule 91    asp_operator -> DIV

Terminals, with rules where they appear

ACT                  : 25 50
AFTER                : 36 43
CAUSES               : 31 32
COMMA                : 49 55 63 70
DEFAULT              : 34 35 36
DFLU                 : 27
DIV                  : 91
DOT                  : 2 6
EQ                   : 65 82
EQQ                  : 81
ESCAPE_ASP           : 3 7
FALSE                : 58
FLU                  : 26 51
GE                   : 87
GOAL                 : 40
GT                   : 85
IDENTIFIER           : 66 68 72 75
IF                   : 28 32 35 42
IFCONS               : 29 45
IMPOSSIBLE           : 37
INERTIAL             : 33
INIT                 : 39
LBRAC                : 68 75
LE                   : 86
LT                   : 84
MINUS                : 61 74 89
NEQ                  : 83
NONEXE               : 38
NOT                  : 52 60
NUMBER               : 73 74
PLUS                 : 88
RBRAC                : 68 75
ROLE_BEGIN           : 4
ROLE_END             : 4
TIMES                : 90
TRUE                 : 57
VARIABLE             : 76
VISIBLE              : 21
WHERE                : 47
error                : 

Nonterminals, with rules where they appear

act_fact             : 12
after_part           : 30
asp_eqoperator       : 78
asp_operation        : 77 78 78 80
asp_operator         : 80
asp_term             : 52 53
atom                 : 56
binding              : 48 49
bindings             : 47 49
default_law          : 17
dynamic_law          : 15
equalpart            : 51 59 60 61 62 63
fact                 : 8
flu_fact             : 13
fluent               : 50 51 59 60 61 62 63 65
fluent_formula       : 25 26 27 33 63
formula              : 21 24 28 28 29 29 30 31 31 32 32 32 34 35 35 36 36 37 38 39 40 42 43 45 55
goal_query           : 23
if_part              : 21 38
ifcons_part          : 28 30 37 38
imposs_law           : 18
inertial_law         : 16
init_rule            : 22
law                  : 9
nonexe_law           : 19
pred_fact            : 11
program              : 2 3 4 0
query                : 10
role                 : 4 6 7
rule                 : 2 6
static_law           : 14
term                 : 69 70 79 80
term_list            : 68 70 75
tfa                  : 54 55
var_term             : 67 71
visible_law          : 20
where_part           : 21 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> .
    (2) program -> . program rule DOT
    (3) program -> . program ESCAPE_ASP
    (4) program -> . program ROLE_BEGIN role ROLE_END

    ESCAPE_ASP      reduce using rule 1 (program -> .)
    ROLE_BEGIN      reduce using rule 1 (program -> .)
    ACT             reduce using rule 1 (program -> .)
    FLU             reduce using rule 1 (program -> .)
    DFLU            reduce using rule 1 (program -> .)
    INERTIAL        reduce using rule 1 (program -> .)
    DEFAULT         reduce using rule 1 (program -> .)
    IMPOSSIBLE      reduce using rule 1 (program -> .)
    NONEXE          reduce using rule 1 (program -> .)
    VISIBLE         reduce using rule 1 (program -> .)
    INIT            reduce using rule 1 (program -> .)
    GOAL            reduce using rule 1 (program -> .)
    TRUE            reduce using rule 1 (program -> .)
    FALSE           reduce using rule 1 (program -> .)
    NOT             reduce using rule 1 (program -> .)
    MINUS           reduce using rule 1 (program -> .)
    IDENTIFIER      reduce using rule 1 (program -> .)
    VARIABLE        reduce using rule 1 (program -> .)
    $end            reduce using rule 1 (program -> .)

    program                        shift and go to state 1

state 1

    (0) S' -> program .
    (2) program -> program . rule DOT
    (3) program -> program . ESCAPE_ASP
    (4) program -> program . ROLE_BEGIN role ROLE_END
    (8) rule -> . fact
    (9) rule -> . law
    (10) rule -> . query
    (11) fact -> . pred_fact
    (12) fact -> . act_fact
    (13) fact -> . flu_fact
    (14) law -> . static_law
    (15) law -> . dynamic_law
    (16) law -> . inertial_law
    (17) law -> . default_law
    (18) law -> . imposs_law
    (19) law -> . nonexe_law
    (20) law -> . visible_law
    (22) query -> . init_rule
    (23) query -> . goal_query
    (24) pred_fact -> . formula where_part
    (25) act_fact -> . ACT fluent_formula where_part
    (26) flu_fact -> . FLU fluent_formula where_part
    (27) flu_fact -> . DFLU fluent_formula where_part
    (28) static_law -> . formula IF formula ifcons_part where_part
    (29) static_law -> . formula IFCONS formula where_part
    (30) dynamic_law -> . formula after_part ifcons_part where_part
    (31) dynamic_law -> . formula CAUSES formula where_part
    (32) dynamic_law -> . formula CAUSES formula IF formula where_part
    (33) inertial_law -> . INERTIAL fluent_formula where_part
    (34) default_law -> . DEFAULT formula where_part
    (35) default_law -> . DEFAULT formula IF formula where_part
    (36) default_law -> . DEFAULT formula AFTER formula where_part
    (37) imposs_law -> . IMPOSSIBLE formula ifcons_part where_part
    (38) nonexe_law -> . NONEXE formula if_part ifcons_part where_part
    (21) visible_law -> . VISIBLE formula if_part where_part
    (39) init_rule -> . INIT formula where_part
    (40) goal_query -> . GOAL formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    ESCAPE_ASP      shift and go to state 6
    ROLE_BEGIN      shift and go to state 37
    ACT             shift and go to state 9
    FLU             shift and go to state 30
    DFLU            shift and go to state 35
    INERTIAL        shift and go to state 38
    DEFAULT         shift and go to state 3
    IMPOSSIBLE      shift and go to state 28
    NONEXE          shift and go to state 20
    VISIBLE         shift and go to state 26
    INIT            shift and go to state 17
    GOAL            shift and go to state 32
    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    imposs_law                     shift and go to state 2
    act_fact                       shift and go to state 4
    flu_fact                       shift and go to state 5
    dynamic_law                    shift and go to state 40
    query                          shift and go to state 10
    law                            shift and go to state 12
    inertial_law                   shift and go to state 13
    default_law                    shift and go to state 16
    formula                        shift and go to state 18
    nonexe_law                     shift and go to state 21
    visible_law                    shift and go to state 22
    goal_query                     shift and go to state 23
    tfa                            shift and go to state 24
    static_law                     shift and go to state 25
    atom                           shift and go to state 27
    pred_fact                      shift and go to state 29
    var_term                       shift and go to state 33
    init_rule                      shift and go to state 34
    rule                           shift and go to state 8
    fluent                         shift and go to state 36
    fact                           shift and go to state 39

state 2

    (18) law -> imposs_law .

    DOT             reduce using rule 18 (law -> imposs_law .)


state 3

    (34) default_law -> DEFAULT . formula where_part
    (35) default_law -> DEFAULT . formula IF formula where_part
    (36) default_law -> DEFAULT . formula AFTER formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 41

state 4

    (12) fact -> act_fact .

    DOT             reduce using rule 12 (fact -> act_fact .)


state 5

    (13) fact -> flu_fact .

    DOT             reduce using rule 13 (fact -> flu_fact .)


state 6

    (3) program -> program ESCAPE_ASP .

    ESCAPE_ASP      reduce using rule 3 (program -> program ESCAPE_ASP .)
    ROLE_BEGIN      reduce using rule 3 (program -> program ESCAPE_ASP .)
    ACT             reduce using rule 3 (program -> program ESCAPE_ASP .)
    FLU             reduce using rule 3 (program -> program ESCAPE_ASP .)
    DFLU            reduce using rule 3 (program -> program ESCAPE_ASP .)
    INERTIAL        reduce using rule 3 (program -> program ESCAPE_ASP .)
    DEFAULT         reduce using rule 3 (program -> program ESCAPE_ASP .)
    IMPOSSIBLE      reduce using rule 3 (program -> program ESCAPE_ASP .)
    NONEXE          reduce using rule 3 (program -> program ESCAPE_ASP .)
    VISIBLE         reduce using rule 3 (program -> program ESCAPE_ASP .)
    INIT            reduce using rule 3 (program -> program ESCAPE_ASP .)
    GOAL            reduce using rule 3 (program -> program ESCAPE_ASP .)
    TRUE            reduce using rule 3 (program -> program ESCAPE_ASP .)
    FALSE           reduce using rule 3 (program -> program ESCAPE_ASP .)
    NOT             reduce using rule 3 (program -> program ESCAPE_ASP .)
    MINUS           reduce using rule 3 (program -> program ESCAPE_ASP .)
    IDENTIFIER      reduce using rule 3 (program -> program ESCAPE_ASP .)
    VARIABLE        reduce using rule 3 (program -> program ESCAPE_ASP .)
    $end            reduce using rule 3 (program -> program ESCAPE_ASP .)


state 7

    (76) var_term -> VARIABLE .

    EQ              reduce using rule 76 (var_term -> VARIABLE .)
    IF              reduce using rule 76 (var_term -> VARIABLE .)
    IFCONS          reduce using rule 76 (var_term -> VARIABLE .)
    CAUSES          reduce using rule 76 (var_term -> VARIABLE .)
    COMMA           reduce using rule 76 (var_term -> VARIABLE .)
    WHERE           reduce using rule 76 (var_term -> VARIABLE .)
    AFTER           reduce using rule 76 (var_term -> VARIABLE .)
    DOT             reduce using rule 76 (var_term -> VARIABLE .)
    EQQ             reduce using rule 76 (var_term -> VARIABLE .)
    NEQ             reduce using rule 76 (var_term -> VARIABLE .)
    LT              reduce using rule 76 (var_term -> VARIABLE .)
    GT              reduce using rule 76 (var_term -> VARIABLE .)
    LE              reduce using rule 76 (var_term -> VARIABLE .)
    GE              reduce using rule 76 (var_term -> VARIABLE .)
    PLUS            reduce using rule 76 (var_term -> VARIABLE .)
    MINUS           reduce using rule 76 (var_term -> VARIABLE .)
    TIMES           reduce using rule 76 (var_term -> VARIABLE .)
    DIV             reduce using rule 76 (var_term -> VARIABLE .)
    RBRAC           reduce using rule 76 (var_term -> VARIABLE .)


state 8

    (2) program -> program rule . DOT

    DOT             shift and go to state 42


state 9

    (25) act_fact -> ACT . fluent_formula where_part
    (62) fluent_formula -> . fluent equalpart
    (63) fluent_formula -> . fluent_formula COMMA fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    fluent                         shift and go to state 43
    fluent_formula                 shift and go to state 44

state 10

    (10) rule -> query .

    DOT             reduce using rule 10 (rule -> query .)


state 11

    (60) atom -> NOT . fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 45
    var_term                       shift and go to state 33

state 12

    (9) rule -> law .

    DOT             reduce using rule 9 (rule -> law .)


state 13

    (16) law -> inertial_law .

    DOT             reduce using rule 16 (law -> inertial_law .)


state 14

    (57) tfa -> TRUE .

    IF              reduce using rule 57 (tfa -> TRUE .)
    IFCONS          reduce using rule 57 (tfa -> TRUE .)
    CAUSES          reduce using rule 57 (tfa -> TRUE .)
    COMMA           reduce using rule 57 (tfa -> TRUE .)
    WHERE           reduce using rule 57 (tfa -> TRUE .)
    AFTER           reduce using rule 57 (tfa -> TRUE .)
    DOT             reduce using rule 57 (tfa -> TRUE .)


state 15

    (61) atom -> MINUS . fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 46
    var_term                       shift and go to state 33

state 16

    (17) law -> default_law .

    DOT             reduce using rule 17 (law -> default_law .)


state 17

    (39) init_rule -> INIT . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 47

state 18

    (24) pred_fact -> formula . where_part
    (28) static_law -> formula . IF formula ifcons_part where_part
    (29) static_law -> formula . IFCONS formula where_part
    (30) dynamic_law -> formula . after_part ifcons_part where_part
    (31) dynamic_law -> formula . CAUSES formula where_part
    (32) dynamic_law -> formula . CAUSES formula IF formula where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings
    (43) after_part -> . AFTER formula

    IF              shift and go to state 55
    IFCONS          shift and go to state 51
    CAUSES          shift and go to state 54
    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48
    AFTER           shift and go to state 50

    where_part                     shift and go to state 49
    after_part                     shift and go to state 53

state 19

    (66) fluent -> IDENTIFIER .
    (68) fluent -> IDENTIFIER . LBRAC term_list RBRAC

    EQ              reduce using rule 66 (fluent -> IDENTIFIER .)
    COMMA           reduce using rule 66 (fluent -> IDENTIFIER .)
    IFCONS          reduce using rule 66 (fluent -> IDENTIFIER .)
    WHERE           reduce using rule 66 (fluent -> IDENTIFIER .)
    DOT             reduce using rule 66 (fluent -> IDENTIFIER .)
    IF              reduce using rule 66 (fluent -> IDENTIFIER .)
    AFTER           reduce using rule 66 (fluent -> IDENTIFIER .)
    CAUSES          reduce using rule 66 (fluent -> IDENTIFIER .)
    LBRAC           shift and go to state 56


state 20

    (38) nonexe_law -> NONEXE . formula if_part ifcons_part where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 57

state 21

    (19) law -> nonexe_law .

    DOT             reduce using rule 19 (law -> nonexe_law .)


state 22

    (20) law -> visible_law .

    DOT             reduce using rule 20 (law -> visible_law .)


state 23

    (23) query -> goal_query .

    DOT             reduce using rule 23 (query -> goal_query .)


state 24

    (54) formula -> tfa .

    COMMA           reduce using rule 54 (formula -> tfa .)
    IF              reduce using rule 54 (formula -> tfa .)
    IFCONS          reduce using rule 54 (formula -> tfa .)
    WHERE           reduce using rule 54 (formula -> tfa .)
    DOT             reduce using rule 54 (formula -> tfa .)
    AFTER           reduce using rule 54 (formula -> tfa .)
    CAUSES          reduce using rule 54 (formula -> tfa .)


state 25

    (14) law -> static_law .

    DOT             reduce using rule 14 (law -> static_law .)


state 26

    (21) visible_law -> VISIBLE . formula if_part where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 58

state 27

    (56) tfa -> atom .

    IF              reduce using rule 56 (tfa -> atom .)
    IFCONS          reduce using rule 56 (tfa -> atom .)
    CAUSES          reduce using rule 56 (tfa -> atom .)
    COMMA           reduce using rule 56 (tfa -> atom .)
    WHERE           reduce using rule 56 (tfa -> atom .)
    AFTER           reduce using rule 56 (tfa -> atom .)
    DOT             reduce using rule 56 (tfa -> atom .)


state 28

    (37) imposs_law -> IMPOSSIBLE . formula ifcons_part where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 59

state 29

    (11) fact -> pred_fact .

    DOT             reduce using rule 11 (fact -> pred_fact .)


state 30

    (26) flu_fact -> FLU . fluent_formula where_part
    (62) fluent_formula -> . fluent equalpart
    (63) fluent_formula -> . fluent_formula COMMA fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    fluent                         shift and go to state 43
    fluent_formula                 shift and go to state 60

state 31

    (58) tfa -> FALSE .

    IF              reduce using rule 58 (tfa -> FALSE .)
    IFCONS          reduce using rule 58 (tfa -> FALSE .)
    CAUSES          reduce using rule 58 (tfa -> FALSE .)
    COMMA           reduce using rule 58 (tfa -> FALSE .)
    WHERE           reduce using rule 58 (tfa -> FALSE .)
    AFTER           reduce using rule 58 (tfa -> FALSE .)
    DOT             reduce using rule 58 (tfa -> FALSE .)


state 32

    (40) goal_query -> GOAL . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 61

state 33

    (67) fluent -> var_term .

    EQ              reduce using rule 67 (fluent -> var_term .)
    COMMA           reduce using rule 67 (fluent -> var_term .)
    IFCONS          reduce using rule 67 (fluent -> var_term .)
    WHERE           reduce using rule 67 (fluent -> var_term .)
    DOT             reduce using rule 67 (fluent -> var_term .)
    IF              reduce using rule 67 (fluent -> var_term .)
    AFTER           reduce using rule 67 (fluent -> var_term .)
    CAUSES          reduce using rule 67 (fluent -> var_term .)


state 34

    (22) query -> init_rule .

    DOT             reduce using rule 22 (query -> init_rule .)


state 35

    (27) flu_fact -> DFLU . fluent_formula where_part
    (62) fluent_formula -> . fluent equalpart
    (63) fluent_formula -> . fluent_formula COMMA fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    fluent                         shift and go to state 43
    fluent_formula                 shift and go to state 62

state 36

    (59) atom -> fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    IF              reduce using rule 64 (equalpart -> .)
    IFCONS          reduce using rule 64 (equalpart -> .)
    CAUSES          reduce using rule 64 (equalpart -> .)
    COMMA           reduce using rule 64 (equalpart -> .)
    WHERE           reduce using rule 64 (equalpart -> .)
    AFTER           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 64

state 37

    (4) program -> program ROLE_BEGIN . role ROLE_END
    (5) role -> .
    (6) role -> . role rule DOT
    (7) role -> . role ESCAPE_ASP

    ROLE_END        reduce using rule 5 (role -> .)
    ESCAPE_ASP      reduce using rule 5 (role -> .)
    ACT             reduce using rule 5 (role -> .)
    FLU             reduce using rule 5 (role -> .)
    DFLU            reduce using rule 5 (role -> .)
    INERTIAL        reduce using rule 5 (role -> .)
    DEFAULT         reduce using rule 5 (role -> .)
    IMPOSSIBLE      reduce using rule 5 (role -> .)
    NONEXE          reduce using rule 5 (role -> .)
    VISIBLE         reduce using rule 5 (role -> .)
    INIT            reduce using rule 5 (role -> .)
    GOAL            reduce using rule 5 (role -> .)
    TRUE            reduce using rule 5 (role -> .)
    FALSE           reduce using rule 5 (role -> .)
    NOT             reduce using rule 5 (role -> .)
    MINUS           reduce using rule 5 (role -> .)
    IDENTIFIER      reduce using rule 5 (role -> .)
    VARIABLE        reduce using rule 5 (role -> .)

    role                           shift and go to state 65

state 38

    (33) inertial_law -> INERTIAL . fluent_formula where_part
    (62) fluent_formula -> . fluent equalpart
    (63) fluent_formula -> . fluent_formula COMMA fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    fluent                         shift and go to state 43
    fluent_formula                 shift and go to state 66

state 39

    (8) rule -> fact .

    DOT             reduce using rule 8 (rule -> fact .)


state 40

    (15) law -> dynamic_law .

    DOT             reduce using rule 15 (law -> dynamic_law .)


state 41

    (34) default_law -> DEFAULT formula . where_part
    (35) default_law -> DEFAULT formula . IF formula where_part
    (36) default_law -> DEFAULT formula . AFTER formula where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    IF              shift and go to state 69
    AFTER           shift and go to state 68
    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 67

state 42

    (2) program -> program rule DOT .

    ESCAPE_ASP      reduce using rule 2 (program -> program rule DOT .)
    ROLE_BEGIN      reduce using rule 2 (program -> program rule DOT .)
    ACT             reduce using rule 2 (program -> program rule DOT .)
    FLU             reduce using rule 2 (program -> program rule DOT .)
    DFLU            reduce using rule 2 (program -> program rule DOT .)
    INERTIAL        reduce using rule 2 (program -> program rule DOT .)
    DEFAULT         reduce using rule 2 (program -> program rule DOT .)
    IMPOSSIBLE      reduce using rule 2 (program -> program rule DOT .)
    NONEXE          reduce using rule 2 (program -> program rule DOT .)
    VISIBLE         reduce using rule 2 (program -> program rule DOT .)
    INIT            reduce using rule 2 (program -> program rule DOT .)
    GOAL            reduce using rule 2 (program -> program rule DOT .)
    TRUE            reduce using rule 2 (program -> program rule DOT .)
    FALSE           reduce using rule 2 (program -> program rule DOT .)
    NOT             reduce using rule 2 (program -> program rule DOT .)
    MINUS           reduce using rule 2 (program -> program rule DOT .)
    IDENTIFIER      reduce using rule 2 (program -> program rule DOT .)
    VARIABLE        reduce using rule 2 (program -> program rule DOT .)
    $end            reduce using rule 2 (program -> program rule DOT .)


state 43

    (62) fluent_formula -> fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    COMMA           reduce using rule 64 (equalpart -> .)
    WHERE           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 70

state 44

    (25) act_fact -> ACT fluent_formula . where_part
    (63) fluent_formula -> fluent_formula . COMMA fluent equalpart
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 72
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 71

state 45

    (60) atom -> NOT fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    IF              reduce using rule 64 (equalpart -> .)
    IFCONS          reduce using rule 64 (equalpart -> .)
    CAUSES          reduce using rule 64 (equalpart -> .)
    COMMA           reduce using rule 64 (equalpart -> .)
    WHERE           reduce using rule 64 (equalpart -> .)
    AFTER           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 73

state 46

    (61) atom -> MINUS fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    IF              reduce using rule 64 (equalpart -> .)
    IFCONS          reduce using rule 64 (equalpart -> .)
    CAUSES          reduce using rule 64 (equalpart -> .)
    COMMA           reduce using rule 64 (equalpart -> .)
    WHERE           reduce using rule 64 (equalpart -> .)
    AFTER           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 74

state 47

    (39) init_rule -> INIT formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 75

state 48

    (47) where_part -> WHERE . bindings
    (48) bindings -> . binding
    (49) bindings -> . bindings COMMA binding
    (50) binding -> . ACT fluent
    (51) binding -> . FLU fluent equalpart
    (52) binding -> . NOT asp_term
    (53) binding -> . asp_term
    (77) asp_term -> . asp_operation
    (78) asp_term -> . asp_operation asp_eqoperator asp_operation
    (79) asp_operation -> . term
    (80) asp_operation -> . asp_operation asp_operator term
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    ACT             shift and go to state 76
    FLU             shift and go to state 77
    NOT             shift and go to state 87
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    term                           shift and go to state 85
    asp_operation                  shift and go to state 81
    var_term                       shift and go to state 86
    binding                        shift and go to state 84
    bindings                       shift and go to state 79
    asp_term                       shift and go to state 82

state 49

    (24) pred_fact -> formula where_part .

    DOT             reduce using rule 24 (pred_fact -> formula where_part .)


state 50

    (43) after_part -> AFTER . formula
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 88

state 51

    (29) static_law -> formula IFCONS . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 89

state 52

    (55) formula -> formula COMMA . tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 90
    fluent                         shift and go to state 36
    atom                           shift and go to state 27

state 53

    (30) dynamic_law -> formula after_part . ifcons_part where_part
    (44) ifcons_part -> .
    (45) ifcons_part -> . IFCONS formula

    WHERE           reduce using rule 44 (ifcons_part -> .)
    DOT             reduce using rule 44 (ifcons_part -> .)
    IFCONS          shift and go to state 91

    ifcons_part                    shift and go to state 92

state 54

    (31) dynamic_law -> formula CAUSES . formula where_part
    (32) dynamic_law -> formula CAUSES . formula IF formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 93

state 55

    (28) static_law -> formula IF . formula ifcons_part where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 94

state 56

    (68) fluent -> IDENTIFIER LBRAC . term_list RBRAC
    (69) term_list -> . term
    (70) term_list -> . term COMMA term_list
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 86
    term                           shift and go to state 95
    term_list                      shift and go to state 96

state 57

    (38) nonexe_law -> NONEXE formula . if_part ifcons_part where_part
    (55) formula -> formula . COMMA tfa
    (41) if_part -> .
    (42) if_part -> . IF formula

    COMMA           shift and go to state 52
    IFCONS          reduce using rule 41 (if_part -> .)
    WHERE           reduce using rule 41 (if_part -> .)
    DOT             reduce using rule 41 (if_part -> .)
    IF              shift and go to state 98

    if_part                        shift and go to state 97

state 58

    (21) visible_law -> VISIBLE formula . if_part where_part
    (55) formula -> formula . COMMA tfa
    (41) if_part -> .
    (42) if_part -> . IF formula

    COMMA           shift and go to state 52
    WHERE           reduce using rule 41 (if_part -> .)
    DOT             reduce using rule 41 (if_part -> .)
    IF              shift and go to state 98

    if_part                        shift and go to state 99

state 59

    (37) imposs_law -> IMPOSSIBLE formula . ifcons_part where_part
    (55) formula -> formula . COMMA tfa
    (44) ifcons_part -> .
    (45) ifcons_part -> . IFCONS formula

    COMMA           shift and go to state 52
    WHERE           reduce using rule 44 (ifcons_part -> .)
    DOT             reduce using rule 44 (ifcons_part -> .)
    IFCONS          shift and go to state 91

    ifcons_part                    shift and go to state 100

state 60

    (26) flu_fact -> FLU fluent_formula . where_part
    (63) fluent_formula -> fluent_formula . COMMA fluent equalpart
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 72
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 101

state 61

    (40) goal_query -> GOAL formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 102

state 62

    (27) flu_fact -> DFLU fluent_formula . where_part
    (63) fluent_formula -> fluent_formula . COMMA fluent equalpart
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 72
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 103

state 63

    (65) equalpart -> EQ . fluent
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 104
    var_term                       shift and go to state 33

state 64

    (59) atom -> fluent equalpart .

    COMMA           reduce using rule 59 (atom -> fluent equalpart .)
    WHERE           reduce using rule 59 (atom -> fluent equalpart .)
    DOT             reduce using rule 59 (atom -> fluent equalpart .)
    IF              reduce using rule 59 (atom -> fluent equalpart .)
    AFTER           reduce using rule 59 (atom -> fluent equalpart .)
    IFCONS          reduce using rule 59 (atom -> fluent equalpart .)
    CAUSES          reduce using rule 59 (atom -> fluent equalpart .)


state 65

    (4) program -> program ROLE_BEGIN role . ROLE_END
    (6) role -> role . rule DOT
    (7) role -> role . ESCAPE_ASP
    (8) rule -> . fact
    (9) rule -> . law
    (10) rule -> . query
    (11) fact -> . pred_fact
    (12) fact -> . act_fact
    (13) fact -> . flu_fact
    (14) law -> . static_law
    (15) law -> . dynamic_law
    (16) law -> . inertial_law
    (17) law -> . default_law
    (18) law -> . imposs_law
    (19) law -> . nonexe_law
    (20) law -> . visible_law
    (22) query -> . init_rule
    (23) query -> . goal_query
    (24) pred_fact -> . formula where_part
    (25) act_fact -> . ACT fluent_formula where_part
    (26) flu_fact -> . FLU fluent_formula where_part
    (27) flu_fact -> . DFLU fluent_formula where_part
    (28) static_law -> . formula IF formula ifcons_part where_part
    (29) static_law -> . formula IFCONS formula where_part
    (30) dynamic_law -> . formula after_part ifcons_part where_part
    (31) dynamic_law -> . formula CAUSES formula where_part
    (32) dynamic_law -> . formula CAUSES formula IF formula where_part
    (33) inertial_law -> . INERTIAL fluent_formula where_part
    (34) default_law -> . DEFAULT formula where_part
    (35) default_law -> . DEFAULT formula IF formula where_part
    (36) default_law -> . DEFAULT formula AFTER formula where_part
    (37) imposs_law -> . IMPOSSIBLE formula ifcons_part where_part
    (38) nonexe_law -> . NONEXE formula if_part ifcons_part where_part
    (21) visible_law -> . VISIBLE formula if_part where_part
    (39) init_rule -> . INIT formula where_part
    (40) goal_query -> . GOAL formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    ROLE_END        shift and go to state 106
    ESCAPE_ASP      shift and go to state 105
    ACT             shift and go to state 9
    FLU             shift and go to state 30
    DFLU            shift and go to state 35
    INERTIAL        shift and go to state 38
    DEFAULT         shift and go to state 3
    IMPOSSIBLE      shift and go to state 28
    NONEXE          shift and go to state 20
    VISIBLE         shift and go to state 26
    INIT            shift and go to state 17
    GOAL            shift and go to state 32
    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    imposs_law                     shift and go to state 2
    act_fact                       shift and go to state 4
    flu_fact                       shift and go to state 5
    dynamic_law                    shift and go to state 40
    query                          shift and go to state 10
    law                            shift and go to state 12
    inertial_law                   shift and go to state 13
    default_law                    shift and go to state 16
    formula                        shift and go to state 18
    nonexe_law                     shift and go to state 21
    visible_law                    shift and go to state 22
    goal_query                     shift and go to state 23
    tfa                            shift and go to state 24
    static_law                     shift and go to state 25
    atom                           shift and go to state 27
    pred_fact                      shift and go to state 29
    var_term                       shift and go to state 33
    init_rule                      shift and go to state 34
    rule                           shift and go to state 107
    fluent                         shift and go to state 36
    fact                           shift and go to state 39

state 66

    (33) inertial_law -> INERTIAL fluent_formula . where_part
    (63) fluent_formula -> fluent_formula . COMMA fluent equalpart
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 72
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 108

state 67

    (34) default_law -> DEFAULT formula where_part .

    DOT             reduce using rule 34 (default_law -> DEFAULT formula where_part .)


state 68

    (36) default_law -> DEFAULT formula AFTER . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 109

state 69

    (35) default_law -> DEFAULT formula IF . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 110

state 70

    (62) fluent_formula -> fluent equalpart .

    COMMA           reduce using rule 62 (fluent_formula -> fluent equalpart .)
    WHERE           reduce using rule 62 (fluent_formula -> fluent equalpart .)
    DOT             reduce using rule 62 (fluent_formula -> fluent equalpart .)


state 71

    (25) act_fact -> ACT fluent_formula where_part .

    DOT             reduce using rule 25 (act_fact -> ACT fluent_formula where_part .)


state 72

    (63) fluent_formula -> fluent_formula COMMA . fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 111
    var_term                       shift and go to state 33

state 73

    (60) atom -> NOT fluent equalpart .

    COMMA           reduce using rule 60 (atom -> NOT fluent equalpart .)
    WHERE           reduce using rule 60 (atom -> NOT fluent equalpart .)
    DOT             reduce using rule 60 (atom -> NOT fluent equalpart .)
    IF              reduce using rule 60 (atom -> NOT fluent equalpart .)
    AFTER           reduce using rule 60 (atom -> NOT fluent equalpart .)
    IFCONS          reduce using rule 60 (atom -> NOT fluent equalpart .)
    CAUSES          reduce using rule 60 (atom -> NOT fluent equalpart .)


state 74

    (61) atom -> MINUS fluent equalpart .

    COMMA           reduce using rule 61 (atom -> MINUS fluent equalpart .)
    WHERE           reduce using rule 61 (atom -> MINUS fluent equalpart .)
    DOT             reduce using rule 61 (atom -> MINUS fluent equalpart .)
    IF              reduce using rule 61 (atom -> MINUS fluent equalpart .)
    AFTER           reduce using rule 61 (atom -> MINUS fluent equalpart .)
    IFCONS          reduce using rule 61 (atom -> MINUS fluent equalpart .)
    CAUSES          reduce using rule 61 (atom -> MINUS fluent equalpart .)


state 75

    (39) init_rule -> INIT formula where_part .

    DOT             reduce using rule 39 (init_rule -> INIT formula where_part .)


state 76

    (50) binding -> ACT . fluent
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 112
    var_term                       shift and go to state 33

state 77

    (51) binding -> FLU . fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    fluent                         shift and go to state 113
    var_term                       shift and go to state 33

state 78

    (73) term -> NUMBER .

    COMMA           reduce using rule 73 (term -> NUMBER .)
    RBRAC           reduce using rule 73 (term -> NUMBER .)
    EQQ             reduce using rule 73 (term -> NUMBER .)
    EQ              reduce using rule 73 (term -> NUMBER .)
    NEQ             reduce using rule 73 (term -> NUMBER .)
    LT              reduce using rule 73 (term -> NUMBER .)
    GT              reduce using rule 73 (term -> NUMBER .)
    LE              reduce using rule 73 (term -> NUMBER .)
    GE              reduce using rule 73 (term -> NUMBER .)
    PLUS            reduce using rule 73 (term -> NUMBER .)
    MINUS           reduce using rule 73 (term -> NUMBER .)
    TIMES           reduce using rule 73 (term -> NUMBER .)
    DIV             reduce using rule 73 (term -> NUMBER .)
    DOT             reduce using rule 73 (term -> NUMBER .)


state 79

    (47) where_part -> WHERE bindings .
    (49) bindings -> bindings . COMMA binding

    DOT             reduce using rule 47 (where_part -> WHERE bindings .)
    COMMA           shift and go to state 114


state 80

    (74) term -> MINUS . NUMBER

    NUMBER          shift and go to state 115


state 81

    (77) asp_term -> asp_operation .
    (78) asp_term -> asp_operation . asp_eqoperator asp_operation
    (80) asp_operation -> asp_operation . asp_operator term
    (81) asp_eqoperator -> . EQQ
    (82) asp_eqoperator -> . EQ
    (83) asp_eqoperator -> . NEQ
    (84) asp_eqoperator -> . LT
    (85) asp_eqoperator -> . GT
    (86) asp_eqoperator -> . LE
    (87) asp_eqoperator -> . GE
    (88) asp_operator -> . PLUS
    (89) asp_operator -> . MINUS
    (90) asp_operator -> . TIMES
    (91) asp_operator -> . DIV

    COMMA           reduce using rule 77 (asp_term -> asp_operation .)
    DOT             reduce using rule 77 (asp_term -> asp_operation .)
    EQQ             shift and go to state 117
    EQ              shift and go to state 126
    NEQ             shift and go to state 128
    LT              shift and go to state 121
    GT              shift and go to state 116
    LE              shift and go to state 122
    GE              shift and go to state 119
    PLUS            shift and go to state 123
    MINUS           shift and go to state 127
    TIMES           shift and go to state 120
    DIV             shift and go to state 125

    asp_eqoperator                 shift and go to state 124
    asp_operator                   shift and go to state 118

state 82

    (53) binding -> asp_term .

    COMMA           reduce using rule 53 (binding -> asp_term .)
    DOT             reduce using rule 53 (binding -> asp_term .)


state 83

    (72) term -> IDENTIFIER .
    (75) term -> IDENTIFIER . LBRAC term_list RBRAC

    COMMA           reduce using rule 72 (term -> IDENTIFIER .)
    RBRAC           reduce using rule 72 (term -> IDENTIFIER .)
    EQQ             reduce using rule 72 (term -> IDENTIFIER .)
    EQ              reduce using rule 72 (term -> IDENTIFIER .)
    NEQ             reduce using rule 72 (term -> IDENTIFIER .)
    LT              reduce using rule 72 (term -> IDENTIFIER .)
    GT              reduce using rule 72 (term -> IDENTIFIER .)
    LE              reduce using rule 72 (term -> IDENTIFIER .)
    GE              reduce using rule 72 (term -> IDENTIFIER .)
    PLUS            reduce using rule 72 (term -> IDENTIFIER .)
    MINUS           reduce using rule 72 (term -> IDENTIFIER .)
    TIMES           reduce using rule 72 (term -> IDENTIFIER .)
    DIV             reduce using rule 72 (term -> IDENTIFIER .)
    DOT             reduce using rule 72 (term -> IDENTIFIER .)
    LBRAC           shift and go to state 129


state 84

    (48) bindings -> binding .

    COMMA           reduce using rule 48 (bindings -> binding .)
    DOT             reduce using rule 48 (bindings -> binding .)


state 85

    (79) asp_operation -> term .

    EQQ             reduce using rule 79 (asp_operation -> term .)
    EQ              reduce using rule 79 (asp_operation -> term .)
    NEQ             reduce using rule 79 (asp_operation -> term .)
    LT              reduce using rule 79 (asp_operation -> term .)
    GT              reduce using rule 79 (asp_operation -> term .)
    LE              reduce using rule 79 (asp_operation -> term .)
    GE              reduce using rule 79 (asp_operation -> term .)
    PLUS            reduce using rule 79 (asp_operation -> term .)
    MINUS           reduce using rule 79 (asp_operation -> term .)
    TIMES           reduce using rule 79 (asp_operation -> term .)
    DIV             reduce using rule 79 (asp_operation -> term .)
    COMMA           reduce using rule 79 (asp_operation -> term .)
    DOT             reduce using rule 79 (asp_operation -> term .)


state 86

    (71) term -> var_term .

    COMMA           reduce using rule 71 (term -> var_term .)
    RBRAC           reduce using rule 71 (term -> var_term .)
    EQQ             reduce using rule 71 (term -> var_term .)
    EQ              reduce using rule 71 (term -> var_term .)
    NEQ             reduce using rule 71 (term -> var_term .)
    LT              reduce using rule 71 (term -> var_term .)
    GT              reduce using rule 71 (term -> var_term .)
    LE              reduce using rule 71 (term -> var_term .)
    GE              reduce using rule 71 (term -> var_term .)
    PLUS            reduce using rule 71 (term -> var_term .)
    MINUS           reduce using rule 71 (term -> var_term .)
    TIMES           reduce using rule 71 (term -> var_term .)
    DIV             reduce using rule 71 (term -> var_term .)
    DOT             reduce using rule 71 (term -> var_term .)


state 87

    (52) binding -> NOT . asp_term
    (77) asp_term -> . asp_operation
    (78) asp_term -> . asp_operation asp_eqoperator asp_operation
    (79) asp_operation -> . term
    (80) asp_operation -> . asp_operation asp_operator term
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    term                           shift and go to state 85
    asp_operation                  shift and go to state 81
    var_term                       shift and go to state 86
    asp_term                       shift and go to state 130

state 88

    (43) after_part -> AFTER formula .
    (55) formula -> formula . COMMA tfa

    IFCONS          reduce using rule 43 (after_part -> AFTER formula .)
    WHERE           reduce using rule 43 (after_part -> AFTER formula .)
    DOT             reduce using rule 43 (after_part -> AFTER formula .)
    COMMA           shift and go to state 52


state 89

    (29) static_law -> formula IFCONS formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 131

state 90

    (55) formula -> formula COMMA tfa .

    COMMA           reduce using rule 55 (formula -> formula COMMA tfa .)
    IF              reduce using rule 55 (formula -> formula COMMA tfa .)
    IFCONS          reduce using rule 55 (formula -> formula COMMA tfa .)
    WHERE           reduce using rule 55 (formula -> formula COMMA tfa .)
    DOT             reduce using rule 55 (formula -> formula COMMA tfa .)
    AFTER           reduce using rule 55 (formula -> formula COMMA tfa .)
    CAUSES          reduce using rule 55 (formula -> formula COMMA tfa .)


state 91

    (45) ifcons_part -> IFCONS . formula
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 132

state 92

    (30) dynamic_law -> formula after_part ifcons_part . where_part
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 133

state 93

    (31) dynamic_law -> formula CAUSES formula . where_part
    (32) dynamic_law -> formula CAUSES formula . IF formula where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    IF              shift and go to state 135
    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 134

state 94

    (28) static_law -> formula IF formula . ifcons_part where_part
    (55) formula -> formula . COMMA tfa
    (44) ifcons_part -> .
    (45) ifcons_part -> . IFCONS formula

    COMMA           shift and go to state 52
    WHERE           reduce using rule 44 (ifcons_part -> .)
    DOT             reduce using rule 44 (ifcons_part -> .)
    IFCONS          shift and go to state 91

    ifcons_part                    shift and go to state 136

state 95

    (69) term_list -> term .
    (70) term_list -> term . COMMA term_list

    RBRAC           reduce using rule 69 (term_list -> term .)
    COMMA           shift and go to state 137


state 96

    (68) fluent -> IDENTIFIER LBRAC term_list . RBRAC

    RBRAC           shift and go to state 138


state 97

    (38) nonexe_law -> NONEXE formula if_part . ifcons_part where_part
    (44) ifcons_part -> .
    (45) ifcons_part -> . IFCONS formula

    WHERE           reduce using rule 44 (ifcons_part -> .)
    DOT             reduce using rule 44 (ifcons_part -> .)
    IFCONS          shift and go to state 91

    ifcons_part                    shift and go to state 139

state 98

    (42) if_part -> IF . formula
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 140

state 99

    (21) visible_law -> VISIBLE formula if_part . where_part
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 141

state 100

    (37) imposs_law -> IMPOSSIBLE formula ifcons_part . where_part
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 142

state 101

    (26) flu_fact -> FLU fluent_formula where_part .

    DOT             reduce using rule 26 (flu_fact -> FLU fluent_formula where_part .)


state 102

    (40) goal_query -> GOAL formula where_part .

    DOT             reduce using rule 40 (goal_query -> GOAL formula where_part .)


state 103

    (27) flu_fact -> DFLU fluent_formula where_part .

    DOT             reduce using rule 27 (flu_fact -> DFLU fluent_formula where_part .)


state 104

    (65) equalpart -> EQ fluent .

    COMMA           reduce using rule 65 (equalpart -> EQ fluent .)
    DOT             reduce using rule 65 (equalpart -> EQ fluent .)
    IF              reduce using rule 65 (equalpart -> EQ fluent .)
    IFCONS          reduce using rule 65 (equalpart -> EQ fluent .)
    CAUSES          reduce using rule 65 (equalpart -> EQ fluent .)
    WHERE           reduce using rule 65 (equalpart -> EQ fluent .)
    AFTER           reduce using rule 65 (equalpart -> EQ fluent .)


state 105

    (7) role -> role ESCAPE_ASP .

    ROLE_END        reduce using rule 7 (role -> role ESCAPE_ASP .)
    ESCAPE_ASP      reduce using rule 7 (role -> role ESCAPE_ASP .)
    ACT             reduce using rule 7 (role -> role ESCAPE_ASP .)
    FLU             reduce using rule 7 (role -> role ESCAPE_ASP .)
    DFLU            reduce using rule 7 (role -> role ESCAPE_ASP .)
    INERTIAL        reduce using rule 7 (role -> role ESCAPE_ASP .)
    DEFAULT         reduce using rule 7 (role -> role ESCAPE_ASP .)
    IMPOSSIBLE      reduce using rule 7 (role -> role ESCAPE_ASP .)
    NONEXE          reduce using rule 7 (role -> role ESCAPE_ASP .)
    VISIBLE         reduce using rule 7 (role -> role ESCAPE_ASP .)
    INIT            reduce using rule 7 (role -> role ESCAPE_ASP .)
    GOAL            reduce using rule 7 (role -> role ESCAPE_ASP .)
    TRUE            reduce using rule 7 (role -> role ESCAPE_ASP .)
    FALSE           reduce using rule 7 (role -> role ESCAPE_ASP .)
    NOT             reduce using rule 7 (role -> role ESCAPE_ASP .)
    MINUS           reduce using rule 7 (role -> role ESCAPE_ASP .)
    IDENTIFIER      reduce using rule 7 (role -> role ESCAPE_ASP .)
    VARIABLE        reduce using rule 7 (role -> role ESCAPE_ASP .)


state 106

    (4) program -> program ROLE_BEGIN role ROLE_END .

    ESCAPE_ASP      reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    ROLE_BEGIN      reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    ACT             reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    FLU             reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    DFLU            reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    INERTIAL        reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    DEFAULT         reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    IMPOSSIBLE      reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    NONEXE          reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    VISIBLE         reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    INIT            reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    GOAL            reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    TRUE            reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    FALSE           reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    NOT             reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    MINUS           reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    IDENTIFIER      reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    VARIABLE        reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)
    $end            reduce using rule 4 (program -> program ROLE_BEGIN role ROLE_END .)


state 107

    (6) role -> role rule . DOT

    DOT             shift and go to state 143


state 108

    (33) inertial_law -> INERTIAL fluent_formula where_part .

    DOT             reduce using rule 33 (inertial_law -> INERTIAL fluent_formula where_part .)


state 109

    (36) default_law -> DEFAULT formula AFTER formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 144

state 110

    (35) default_law -> DEFAULT formula IF formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 145

state 111

    (63) fluent_formula -> fluent_formula COMMA fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    COMMA           reduce using rule 64 (equalpart -> .)
    WHERE           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 146

state 112

    (50) binding -> ACT fluent .

    COMMA           reduce using rule 50 (binding -> ACT fluent .)
    DOT             reduce using rule 50 (binding -> ACT fluent .)


state 113

    (51) binding -> FLU fluent . equalpart
    (64) equalpart -> .
    (65) equalpart -> . EQ fluent

    COMMA           reduce using rule 64 (equalpart -> .)
    DOT             reduce using rule 64 (equalpart -> .)
    EQ              shift and go to state 63

    equalpart                      shift and go to state 147

state 114

    (49) bindings -> bindings COMMA . binding
    (50) binding -> . ACT fluent
    (51) binding -> . FLU fluent equalpart
    (52) binding -> . NOT asp_term
    (53) binding -> . asp_term
    (77) asp_term -> . asp_operation
    (78) asp_term -> . asp_operation asp_eqoperator asp_operation
    (79) asp_operation -> . term
    (80) asp_operation -> . asp_operation asp_operator term
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    ACT             shift and go to state 76
    FLU             shift and go to state 77
    NOT             shift and go to state 87
    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    term                           shift and go to state 85
    asp_operation                  shift and go to state 81
    var_term                       shift and go to state 86
    binding                        shift and go to state 148
    asp_term                       shift and go to state 82

state 115

    (74) term -> MINUS NUMBER .

    COMMA           reduce using rule 74 (term -> MINUS NUMBER .)
    RBRAC           reduce using rule 74 (term -> MINUS NUMBER .)
    EQQ             reduce using rule 74 (term -> MINUS NUMBER .)
    EQ              reduce using rule 74 (term -> MINUS NUMBER .)
    NEQ             reduce using rule 74 (term -> MINUS NUMBER .)
    LT              reduce using rule 74 (term -> MINUS NUMBER .)
    GT              reduce using rule 74 (term -> MINUS NUMBER .)
    LE              reduce using rule 74 (term -> MINUS NUMBER .)
    GE              reduce using rule 74 (term -> MINUS NUMBER .)
    PLUS            reduce using rule 74 (term -> MINUS NUMBER .)
    MINUS           reduce using rule 74 (term -> MINUS NUMBER .)
    TIMES           reduce using rule 74 (term -> MINUS NUMBER .)
    DIV             reduce using rule 74 (term -> MINUS NUMBER .)
    DOT             reduce using rule 74 (term -> MINUS NUMBER .)


state 116

    (85) asp_eqoperator -> GT .

    IDENTIFIER      reduce using rule 85 (asp_eqoperator -> GT .)
    NUMBER          reduce using rule 85 (asp_eqoperator -> GT .)
    MINUS           reduce using rule 85 (asp_eqoperator -> GT .)
    VARIABLE        reduce using rule 85 (asp_eqoperator -> GT .)


state 117

    (81) asp_eqoperator -> EQQ .

    IDENTIFIER      reduce using rule 81 (asp_eqoperator -> EQQ .)
    NUMBER          reduce using rule 81 (asp_eqoperator -> EQQ .)
    MINUS           reduce using rule 81 (asp_eqoperator -> EQQ .)
    VARIABLE        reduce using rule 81 (asp_eqoperator -> EQQ .)


state 118

    (80) asp_operation -> asp_operation asp_operator . term
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 86
    term                           shift and go to state 149

state 119

    (87) asp_eqoperator -> GE .

    IDENTIFIER      reduce using rule 87 (asp_eqoperator -> GE .)
    NUMBER          reduce using rule 87 (asp_eqoperator -> GE .)
    MINUS           reduce using rule 87 (asp_eqoperator -> GE .)
    VARIABLE        reduce using rule 87 (asp_eqoperator -> GE .)


state 120

    (90) asp_operator -> TIMES .

    IDENTIFIER      reduce using rule 90 (asp_operator -> TIMES .)
    NUMBER          reduce using rule 90 (asp_operator -> TIMES .)
    MINUS           reduce using rule 90 (asp_operator -> TIMES .)
    VARIABLE        reduce using rule 90 (asp_operator -> TIMES .)


state 121

    (84) asp_eqoperator -> LT .

    IDENTIFIER      reduce using rule 84 (asp_eqoperator -> LT .)
    NUMBER          reduce using rule 84 (asp_eqoperator -> LT .)
    MINUS           reduce using rule 84 (asp_eqoperator -> LT .)
    VARIABLE        reduce using rule 84 (asp_eqoperator -> LT .)


state 122

    (86) asp_eqoperator -> LE .

    IDENTIFIER      reduce using rule 86 (asp_eqoperator -> LE .)
    NUMBER          reduce using rule 86 (asp_eqoperator -> LE .)
    MINUS           reduce using rule 86 (asp_eqoperator -> LE .)
    VARIABLE        reduce using rule 86 (asp_eqoperator -> LE .)


state 123

    (88) asp_operator -> PLUS .

    IDENTIFIER      reduce using rule 88 (asp_operator -> PLUS .)
    NUMBER          reduce using rule 88 (asp_operator -> PLUS .)
    MINUS           reduce using rule 88 (asp_operator -> PLUS .)
    VARIABLE        reduce using rule 88 (asp_operator -> PLUS .)


state 124

    (78) asp_term -> asp_operation asp_eqoperator . asp_operation
    (79) asp_operation -> . term
    (80) asp_operation -> . asp_operation asp_operator term
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    term                           shift and go to state 85
    asp_operation                  shift and go to state 150
    var_term                       shift and go to state 86

state 125

    (91) asp_operator -> DIV .

    IDENTIFIER      reduce using rule 91 (asp_operator -> DIV .)
    NUMBER          reduce using rule 91 (asp_operator -> DIV .)
    MINUS           reduce using rule 91 (asp_operator -> DIV .)
    VARIABLE        reduce using rule 91 (asp_operator -> DIV .)


state 126

    (82) asp_eqoperator -> EQ .

    IDENTIFIER      reduce using rule 82 (asp_eqoperator -> EQ .)
    NUMBER          reduce using rule 82 (asp_eqoperator -> EQ .)
    MINUS           reduce using rule 82 (asp_eqoperator -> EQ .)
    VARIABLE        reduce using rule 82 (asp_eqoperator -> EQ .)


state 127

    (89) asp_operator -> MINUS .

    IDENTIFIER      reduce using rule 89 (asp_operator -> MINUS .)
    NUMBER          reduce using rule 89 (asp_operator -> MINUS .)
    MINUS           reduce using rule 89 (asp_operator -> MINUS .)
    VARIABLE        reduce using rule 89 (asp_operator -> MINUS .)


state 128

    (83) asp_eqoperator -> NEQ .

    IDENTIFIER      reduce using rule 83 (asp_eqoperator -> NEQ .)
    NUMBER          reduce using rule 83 (asp_eqoperator -> NEQ .)
    MINUS           reduce using rule 83 (asp_eqoperator -> NEQ .)
    VARIABLE        reduce using rule 83 (asp_eqoperator -> NEQ .)


state 129

    (75) term -> IDENTIFIER LBRAC . term_list RBRAC
    (69) term_list -> . term
    (70) term_list -> . term COMMA term_list
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 86
    term                           shift and go to state 95
    term_list                      shift and go to state 151

state 130

    (52) binding -> NOT asp_term .

    COMMA           reduce using rule 52 (binding -> NOT asp_term .)
    DOT             reduce using rule 52 (binding -> NOT asp_term .)


state 131

    (29) static_law -> formula IFCONS formula where_part .

    DOT             reduce using rule 29 (static_law -> formula IFCONS formula where_part .)


state 132

    (45) ifcons_part -> IFCONS formula .
    (55) formula -> formula . COMMA tfa

    WHERE           reduce using rule 45 (ifcons_part -> IFCONS formula .)
    DOT             reduce using rule 45 (ifcons_part -> IFCONS formula .)
    COMMA           shift and go to state 52


state 133

    (30) dynamic_law -> formula after_part ifcons_part where_part .

    DOT             reduce using rule 30 (dynamic_law -> formula after_part ifcons_part where_part .)


state 134

    (31) dynamic_law -> formula CAUSES formula where_part .

    DOT             reduce using rule 31 (dynamic_law -> formula CAUSES formula where_part .)


state 135

    (32) dynamic_law -> formula CAUSES formula IF . formula where_part
    (54) formula -> . tfa
    (55) formula -> . formula COMMA tfa
    (56) tfa -> . atom
    (57) tfa -> . TRUE
    (58) tfa -> . FALSE
    (59) atom -> . fluent equalpart
    (60) atom -> . NOT fluent equalpart
    (61) atom -> . MINUS fluent equalpart
    (66) fluent -> . IDENTIFIER
    (67) fluent -> . var_term
    (68) fluent -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 31
    NOT             shift and go to state 11
    MINUS           shift and go to state 15
    IDENTIFIER      shift and go to state 19
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 33
    tfa                            shift and go to state 24
    fluent                         shift and go to state 36
    atom                           shift and go to state 27
    formula                        shift and go to state 152

state 136

    (28) static_law -> formula IF formula ifcons_part . where_part
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 153

state 137

    (70) term_list -> term COMMA . term_list
    (69) term_list -> . term
    (70) term_list -> . term COMMA term_list
    (71) term -> . var_term
    (72) term -> . IDENTIFIER
    (73) term -> . NUMBER
    (74) term -> . MINUS NUMBER
    (75) term -> . IDENTIFIER LBRAC term_list RBRAC
    (76) var_term -> . VARIABLE

    IDENTIFIER      shift and go to state 83
    NUMBER          shift and go to state 78
    MINUS           shift and go to state 80
    VARIABLE        shift and go to state 7

    var_term                       shift and go to state 86
    term                           shift and go to state 95
    term_list                      shift and go to state 154

state 138

    (68) fluent -> IDENTIFIER LBRAC term_list RBRAC .

    EQ              reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    COMMA           reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    IFCONS          reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    WHERE           reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    DOT             reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    IF              reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    AFTER           reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)
    CAUSES          reduce using rule 68 (fluent -> IDENTIFIER LBRAC term_list RBRAC .)


state 139

    (38) nonexe_law -> NONEXE formula if_part ifcons_part . where_part
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 155

state 140

    (42) if_part -> IF formula .
    (55) formula -> formula . COMMA tfa

    IFCONS          reduce using rule 42 (if_part -> IF formula .)
    WHERE           reduce using rule 42 (if_part -> IF formula .)
    DOT             reduce using rule 42 (if_part -> IF formula .)
    COMMA           shift and go to state 52


state 141

    (21) visible_law -> VISIBLE formula if_part where_part .

    DOT             reduce using rule 21 (visible_law -> VISIBLE formula if_part where_part .)


state 142

    (37) imposs_law -> IMPOSSIBLE formula ifcons_part where_part .

    DOT             reduce using rule 37 (imposs_law -> IMPOSSIBLE formula ifcons_part where_part .)


state 143

    (6) role -> role rule DOT .

    ROLE_END        reduce using rule 6 (role -> role rule DOT .)
    ESCAPE_ASP      reduce using rule 6 (role -> role rule DOT .)
    ACT             reduce using rule 6 (role -> role rule DOT .)
    FLU             reduce using rule 6 (role -> role rule DOT .)
    DFLU            reduce using rule 6 (role -> role rule DOT .)
    INERTIAL        reduce using rule 6 (role -> role rule DOT .)
    DEFAULT         reduce using rule 6 (role -> role rule DOT .)
    IMPOSSIBLE      reduce using rule 6 (role -> role rule DOT .)
    NONEXE          reduce using rule 6 (role -> role rule DOT .)
    VISIBLE         reduce using rule 6 (role -> role rule DOT .)
    INIT            reduce using rule 6 (role -> role rule DOT .)
    GOAL            reduce using rule 6 (role -> role rule DOT .)
    TRUE            reduce using rule 6 (role -> role rule DOT .)
    FALSE           reduce using rule 6 (role -> role rule DOT .)
    NOT             reduce using rule 6 (role -> role rule DOT .)
    MINUS           reduce using rule 6 (role -> role rule DOT .)
    IDENTIFIER      reduce using rule 6 (role -> role rule DOT .)
    VARIABLE        reduce using rule 6 (role -> role rule DOT .)


state 144

    (36) default_law -> DEFAULT formula AFTER formula where_part .

    DOT             reduce using rule 36 (default_law -> DEFAULT formula AFTER formula where_part .)


state 145

    (35) default_law -> DEFAULT formula IF formula where_part .

    DOT             reduce using rule 35 (default_law -> DEFAULT formula IF formula where_part .)


state 146

    (63) fluent_formula -> fluent_formula COMMA fluent equalpart .

    COMMA           reduce using rule 63 (fluent_formula -> fluent_formula COMMA fluent equalpart .)
    WHERE           reduce using rule 63 (fluent_formula -> fluent_formula COMMA fluent equalpart .)
    DOT             reduce using rule 63 (fluent_formula -> fluent_formula COMMA fluent equalpart .)


state 147

    (51) binding -> FLU fluent equalpart .

    COMMA           reduce using rule 51 (binding -> FLU fluent equalpart .)
    DOT             reduce using rule 51 (binding -> FLU fluent equalpart .)


state 148

    (49) bindings -> bindings COMMA binding .

    COMMA           reduce using rule 49 (bindings -> bindings COMMA binding .)
    DOT             reduce using rule 49 (bindings -> bindings COMMA binding .)


state 149

    (80) asp_operation -> asp_operation asp_operator term .

    EQQ             reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    EQ              reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    NEQ             reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    LT              reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    GT              reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    LE              reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    GE              reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    PLUS            reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    MINUS           reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    TIMES           reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    DIV             reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    COMMA           reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)
    DOT             reduce using rule 80 (asp_operation -> asp_operation asp_operator term .)


state 150

    (78) asp_term -> asp_operation asp_eqoperator asp_operation .
    (80) asp_operation -> asp_operation . asp_operator term
    (88) asp_operator -> . PLUS
    (89) asp_operator -> . MINUS
    (90) asp_operator -> . TIMES
    (91) asp_operator -> . DIV

    COMMA           reduce using rule 78 (asp_term -> asp_operation asp_eqoperator asp_operation .)
    DOT             reduce using rule 78 (asp_term -> asp_operation asp_eqoperator asp_operation .)
    PLUS            shift and go to state 123
    MINUS           shift and go to state 127
    TIMES           shift and go to state 120
    DIV             shift and go to state 125

    asp_operator                   shift and go to state 118

state 151

    (75) term -> IDENTIFIER LBRAC term_list . RBRAC

    RBRAC           shift and go to state 156


state 152

    (32) dynamic_law -> formula CAUSES formula IF formula . where_part
    (55) formula -> formula . COMMA tfa
    (46) where_part -> .
    (47) where_part -> . WHERE bindings

    COMMA           shift and go to state 52
    DOT             reduce using rule 46 (where_part -> .)
    WHERE           shift and go to state 48

    where_part                     shift and go to state 157

state 153

    (28) static_law -> formula IF formula ifcons_part where_part .

    DOT             reduce using rule 28 (static_law -> formula IF formula ifcons_part where_part .)


state 154

    (70) term_list -> term COMMA term_list .

    RBRAC           reduce using rule 70 (term_list -> term COMMA term_list .)


state 155

    (38) nonexe_law -> NONEXE formula if_part ifcons_part where_part .

    DOT             reduce using rule 38 (nonexe_law -> NONEXE formula if_part ifcons_part where_part .)


state 156

    (75) term -> IDENTIFIER LBRAC term_list RBRAC .

    COMMA           reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    RBRAC           reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    EQQ             reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    EQ              reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    NEQ             reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    LT              reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    GT              reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    LE              reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    GE              reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    PLUS            reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    MINUS           reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    TIMES           reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    DIV             reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)
    DOT             reduce using rule 75 (term -> IDENTIFIER LBRAC term_list RBRAC .)


state 157

    (32) dynamic_law -> formula CAUSES formula IF formula where_part .

    DOT             reduce using rule 32 (dynamic_law -> formula CAUSES formula IF formula where_part .)

