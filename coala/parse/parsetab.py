
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B2FF6DACA07A866738B1488BDD99D0F7'
    
_lr_action_items = {'RBRAC':([1,2,7,9,16,19,25,30,36,40,41,45,76,86,91,92,105,113,114,116,117,130,131,134,135,137,138,167,178,184,185,],[-111,-109,-79,-80,-106,-89,-87,-85,-102,-81,-90,-84,-86,-88,135,-77,-105,-111,-103,-104,-110,167,-71,-78,-112,-108,-107,-82,189,-83,-72,]),'DEFAULT':([0,8,23,47,50,56,78,101,144,146,173,],[4,-4,4,-6,-1,-3,-2,4,-8,-5,-7,]),'FLU':([0,8,23,27,47,50,56,78,79,101,144,146,160,173,],[39,-4,39,89,-6,-1,-3,-2,120,39,-8,-5,120,-7,]),'NUMBER':([0,4,8,20,22,23,26,28,37,42,47,50,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,87,90,94,95,101,102,103,107,108,109,111,126,133,144,146,154,160,165,168,173,174,175,179,],[30,30,-4,76,30,30,30,30,30,30,-6,-1,30,-3,-96,-92,-101,-98,-99,-100,-95,-97,30,30,-93,30,-94,30,-2,30,30,30,30,30,30,76,30,30,30,30,30,30,30,30,30,30,30,-8,-5,30,30,30,30,-7,30,30,30,]),'ESCAPE_ASP':([0,8,23,47,50,56,78,101,144,146,173,],[8,-4,8,-6,-1,-3,-2,144,-8,-5,-7,]),'IFCONS':([1,2,7,9,16,19,24,25,30,33,36,40,41,45,48,49,60,75,76,83,86,88,92,96,105,113,114,115,116,117,124,129,132,134,135,137,138,147,149,150,167,170,184,187,188,],[-111,-109,-79,-80,-106,-89,82,-87,-85,-73,-102,-81,-90,-84,-76,-63,-74,-75,-86,126,-88,-45,-77,126,-105,-111,-103,-91,-104,-110,-47,126,126,-78,-112,-108,-107,-61,-65,-64,-82,-46,-83,-62,-66,]),'DDOT':([1,7,9,19,25,30,33,40,41,45,75,76,86,92,134,147,148,155,167,184,],[54,-79,-80,-89,-87,-85,-77,-81,-90,-84,-78,-86,-88,-77,-78,-77,174,179,-82,-83,]),'IF':([1,2,7,9,16,19,24,25,30,33,36,40,41,45,48,49,55,57,59,60,75,76,86,88,92,93,105,113,114,115,116,117,128,134,135,137,138,147,149,150,155,156,157,167,184,187,188,189,190,191,],[-111,-109,-79,-80,-106,-89,85,-87,-85,-73,-102,-81,-90,-84,-76,-63,108,-57,-67,-74,-75,-86,-88,133,-77,133,-105,-111,-103,-91,-104,-110,165,-78,-112,-108,-107,-61,-65,-64,-58,-69,-68,-82,-83,-62,-66,-59,-60,-70,]),'ACT':([0,8,23,47,50,56,78,79,101,144,146,160,173,],[12,-4,12,-6,-1,-3,-2,119,12,-8,-5,119,-7,]),'DIV':([1,2,7,9,16,19,25,30,33,36,40,41,45,75,76,86,92,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,-106,-89,-87,-85,-77,94,-81,-90,-84,-78,-86,-88,-77,-111,94,94,-110,-78,-112,-108,-107,-82,-83,]),'TRUE':([0,4,8,10,12,14,20,22,23,26,28,35,37,39,42,43,46,47,50,51,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,87,89,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,144,146,154,160,165,168,173,174,175,179,180,],[19,19,-4,-30,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,-1,19,19,-3,-96,-92,-101,-98,-99,-100,-95,-97,19,19,-93,19,-94,19,-2,19,19,19,19,19,19,-31,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-8,-5,19,19,19,19,-7,19,19,19,19,]),'MINUS':([0,1,2,4,7,8,9,15,16,19,22,23,25,26,28,30,33,36,37,40,41,42,45,47,50,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,84,85,86,87,91,92,94,95,101,102,103,105,107,108,109,111,113,114,115,116,117,126,133,134,135,137,138,144,146,154,160,165,167,168,173,174,175,179,184,],[20,-111,-109,20,-79,-4,-80,72,-106,-89,20,20,-87,20,90,-85,-77,-102,20,-81,-90,20,-84,-6,-1,90,-3,-96,-92,-101,-98,-99,-100,-95,-97,90,90,-93,90,-94,90,-78,-86,-2,20,20,20,20,20,-88,90,72,-77,90,90,20,90,20,-105,20,20,90,90,-111,-103,72,-104,-110,20,20,-78,-112,-108,-107,-8,-5,90,20,20,-82,90,-7,90,20,90,-83,]),'DEF':([0,8,23,47,50,56,78,101,144,146,173,],[27,-4,27,-6,-1,-3,-2,27,-8,-5,-7,]),'NEQ':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,73,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'LE':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,68,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'GE':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,64,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'POWER':([1,2,7,9,16,19,25,30,33,40,41,45,75,76,86,92,113,117,134,135,137,138,167,184,],[-111,-109,-79,-80,74,-89,-87,-85,-77,-81,-90,-84,-78,-86,-88,-77,-111,-110,-78,-112,74,74,-82,-83,]),'DFLU':([0,8,23,47,50,56,78,101,144,146,173,],[10,-4,10,-6,-1,-3,-2,10,-8,-5,-7,]),'WHERE':([1,2,7,9,16,19,24,25,30,33,36,40,41,45,48,49,55,57,58,59,60,75,76,77,83,86,88,92,93,96,97,98,99,100,104,105,113,114,115,116,117,124,125,127,128,129,132,134,135,136,137,138,139,147,149,150,152,153,155,156,157,162,166,167,169,170,182,184,187,188,189,190,191,],[-111,-109,-79,-80,-106,-89,79,-87,-85,-73,-102,-81,-90,-84,-76,-63,79,-57,79,-67,-74,-75,-86,79,-48,-88,-45,-77,-45,-48,79,79,79,79,79,-105,-111,-103,-91,-104,-110,-47,79,79,79,-48,-48,-78,-112,79,-108,-107,79,-61,-65,-64,79,79,-58,-69,-68,-49,79,-82,79,-46,79,-83,-62,-66,-59,-60,-70,]),'LT':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,67,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'VISIBLE':([0,8,23,47,50,56,78,101,144,146,173,],[35,-4,35,-6,-1,-3,-2,35,-8,-5,-7,]),'INIT':([0,8,23,47,50,56,78,101,144,146,173,],[22,-4,22,-6,-1,-3,-2,22,-8,-5,-7,]),'COLON':([1,2,7,9,16,19,25,30,33,36,40,41,45,48,49,57,59,60,75,76,86,92,105,113,114,115,116,117,134,135,137,138,155,167,184,189,190,],[-111,-109,-79,-80,-106,-89,-87,-85,-73,-102,-81,-90,-84,-76,102,-57,111,-74,-75,-86,-88,-77,-105,-111,-103,-91,-104,-110,-78,-112,-108,-107,-58,-82,-83,-59,-60,]),'CAUSES':([1,2,7,9,16,19,24,25,30,33,36,40,41,45,48,49,60,75,76,86,92,105,113,114,115,116,117,134,135,137,138,147,149,150,167,184,187,188,],[-111,-109,-79,-80,-106,-89,84,-87,-85,-73,-102,-81,-90,-84,-76,-63,-74,-75,-86,-88,-77,-105,-111,-103,-91,-104,-110,-78,-112,-108,-107,-61,-65,-64,-82,-83,-62,-66,]),'PLUS':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,91,92,105,113,114,115,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,69,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,69,-77,-105,-111,-103,69,-104,-110,-78,-112,-108,-107,-82,-83,]),'IDENTIFIER':([0,4,8,10,12,14,20,22,23,26,28,35,37,39,42,43,46,47,50,51,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,87,89,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,144,146,154,160,165,168,173,174,175,179,180,],[25,25,-4,-30,25,25,25,25,25,25,25,25,25,25,25,25,25,-6,-1,25,25,-3,-96,-92,-101,-98,-99,-100,-95,-97,25,25,-93,25,-94,25,-2,25,25,25,25,25,25,-31,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-8,-5,25,25,25,25,-7,25,25,25,25,]),'NONEXE':([0,8,23,47,50,56,78,101,144,146,173,],[26,-4,26,-6,-1,-3,-2,26,-8,-5,-7,]),'$end':([8,23,50,56,78,146,],[-4,0,-1,-3,-2,-5,]),'APOS':([25,167,],[86,184,]),'GT':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,61,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'EQQ':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,62,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'TIMES':([1,2,7,9,16,19,25,30,33,36,40,41,45,75,76,86,92,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,-106,-89,-87,-85,-77,95,-81,-90,-84,-78,-86,-88,-77,-111,95,95,-110,-78,-112,-108,-107,-82,-83,]),'ROLE_BEGIN':([0,8,23,50,56,78,146,],[47,-4,47,-1,-3,-2,-5,]),'DOT':([1,2,3,5,6,7,9,11,13,16,17,18,19,21,24,25,29,30,31,32,33,34,36,38,40,41,44,45,48,49,52,53,55,57,58,59,60,75,76,77,80,83,86,88,92,93,96,97,98,99,100,104,105,106,110,113,114,115,116,117,118,121,122,123,124,125,127,128,129,132,134,135,136,137,138,139,140,141,142,143,145,147,149,150,151,152,153,155,156,157,158,159,161,162,163,164,166,167,169,170,171,172,176,177,181,182,183,184,186,187,188,189,190,191,192,],[-111,-109,-19,-13,-14,-79,-80,56,-11,-106,-10,-17,-89,-18,-50,-87,-20,-85,-21,-24,-73,-15,-102,-12,-81,-90,-23,-84,-76,-63,-9,-16,-50,-57,-50,-67,-74,-75,-86,-50,-25,-48,-88,-45,-77,-45,-48,-50,-50,-50,-50,-50,-105,-38,-26,-111,-103,-91,-104,-110,-43,-51,-52,-56,-47,-50,-50,-50,-48,-48,-78,-112,-50,-108,-107,-50,-27,-44,-28,-29,173,-61,-65,-64,-37,-50,-50,-58,-69,-68,-54,-55,-33,-49,-34,-35,-50,-82,-50,-46,-22,-41,-40,-39,-53,-50,-32,-83,-42,-62,-66,-59,-60,-70,-36,]),'VARIABLE':([0,4,8,10,12,14,20,22,23,26,28,35,37,39,42,43,46,47,50,51,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,87,89,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,144,146,154,160,165,168,173,174,175,179,180,],[45,45,-4,-30,45,45,45,45,45,45,45,45,45,45,45,45,45,-6,-1,45,45,-3,-96,-92,-101,-98,-99,-100,-95,-97,45,45,-93,45,-94,45,-2,45,45,45,45,45,45,-31,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-8,-5,45,45,45,45,-7,45,45,45,45,]),'IMPOSSIBLE':([0,8,23,47,50,56,78,101,144,146,173,],[37,-4,37,-6,-1,-3,-2,37,-8,-5,-7,]),'EQ':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,57,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,71,-106,-89,-87,-85,-77,-102,-81,-90,-84,109,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'GOAL':([0,8,23,47,50,56,78,101,144,146,173,],[42,-4,42,-6,-1,-3,-2,42,-8,-5,-7,]),'FALSE':([0,4,8,10,12,14,20,22,23,26,28,35,37,39,42,43,46,47,50,51,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,87,89,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,144,146,154,160,165,168,173,174,175,179,180,],[41,41,-4,-30,41,41,41,41,41,41,41,41,41,41,41,41,41,-6,-1,41,41,-3,-96,-92,-101,-98,-99,-100,-95,-97,41,41,-93,41,-94,41,-2,41,41,41,41,41,41,-31,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-8,-5,41,41,41,41,-7,41,41,41,41,]),'LBRAC':([0,4,8,22,23,25,26,28,37,42,47,50,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,82,84,85,94,95,101,103,107,108,109,126,133,144,146,160,165,173,175,],[28,28,-4,28,28,87,28,28,28,28,-6,-1,-3,-96,-92,-101,-98,-99,-100,-95,-97,28,28,-93,28,-94,28,-2,28,28,28,28,28,28,28,28,28,28,28,154,28,28,-8,-5,28,28,-7,28,]),'INT':([0,8,23,47,50,56,78,101,144,146,173,],[43,-4,43,-6,-1,-3,-2,43,-8,-5,-7,]),'INERTIAL':([0,8,23,47,50,56,78,101,144,146,173,],[51,-4,51,-6,-1,-3,-2,51,-8,-5,-7,]),'AFTER':([1,2,7,9,16,19,24,25,30,33,36,40,41,45,48,49,55,60,75,76,86,92,105,113,114,115,116,117,134,135,137,138,147,149,150,167,184,187,188,],[-111,-109,-79,-80,-106,-89,81,-87,-85,-73,-102,-81,-90,-84,-76,-63,107,-74,-75,-86,-88,-77,-105,-111,-103,-91,-104,-110,-78,-112,-108,-107,-61,-65,-64,-82,-83,-62,-66,]),'MINUSEQ':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,63,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'ROLE_END':([47,101,144,173,],[-6,146,-8,-7,]),'ASSIGN':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,65,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'PLUSEQ':([1,2,7,9,15,16,19,25,30,33,36,40,41,45,75,76,86,92,105,113,114,116,117,134,135,137,138,167,184,],[-111,-109,-79,-80,66,-106,-89,-87,-85,-77,-102,-81,-90,-84,-78,-86,-88,-77,-105,-111,-103,-104,-110,-78,-112,-108,-107,-82,-83,]),'NOT':([0,4,8,22,23,26,37,42,47,50,56,78,79,81,82,84,85,101,103,107,108,126,133,144,146,160,165,173,175,],[14,14,-4,14,14,14,14,14,-6,-1,-3,-2,14,14,14,14,14,14,14,14,14,14,14,-8,-5,14,14,-7,14,]),'COMMA':([1,2,7,9,16,19,25,30,33,36,40,41,45,48,49,57,59,60,75,76,86,92,105,113,114,115,116,117,121,122,123,131,134,135,137,138,147,149,155,156,158,159,167,181,184,187,189,190,],[-111,-109,-79,-80,-106,-89,-87,-85,-73,-102,-81,-90,-84,-76,103,-57,112,-74,-75,-86,-88,-77,-105,-111,-103,-91,-104,-110,160,-52,-56,168,-78,-112,-108,-107,-61,175,-58,180,-54,-55,-82,-53,-83,-62,-59,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term_numeric':([0,4,22,23,26,28,37,42,54,69,70,72,74,79,81,82,84,85,87,94,95,101,102,103,107,108,109,111,126,133,154,160,165,168,174,175,179,],[1,1,1,1,1,1,1,1,105,113,1,113,113,1,1,1,1,1,131,113,113,1,148,1,1,1,155,148,1,1,131,1,1,131,187,1,190,]),'asp_brac_operation':([0,4,22,23,26,28,37,42,69,70,72,74,79,81,82,84,85,94,95,101,103,107,108,126,133,160,165,175,],[2,2,2,2,2,2,2,2,2,2,2,117,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'imposs_law':([0,23,101,],[3,3,3,]),'binding':([79,160,],[122,181,]),'act_fact':([0,23,101,],[5,5,5,]),'flu_fact':([0,23,101,],[6,6,6,]),'number':([0,4,22,23,26,28,37,42,54,69,70,72,74,79,81,82,84,85,87,94,95,101,102,103,107,108,109,111,126,133,154,160,165,168,174,175,179,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_part':([88,93,],[132,136,]),'fluent_formula':([12,35,39,43,46,51,112,180,],[58,93,97,99,100,104,157,191,]),'dynamic_law':([0,23,101,],[53,53,53,]),'asp_eqoperator':([15,],[70,]),'asp_pow_operation':([0,4,22,23,26,28,37,42,69,70,72,79,81,82,84,85,94,95,101,103,107,108,126,133,160,165,175,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,137,138,16,16,16,16,16,16,16,16,16,]),'query':([0,23,101,],[13,13,13,]),'term_equalpart':([12,35,39,43,46,51,112,120,180,],[59,59,59,59,59,59,59,159,59,]),'after_part':([24,],[83,]),'asp_term':([0,4,22,23,26,37,42,79,81,82,84,85,101,103,107,108,126,133,160,165,175,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'binding_or_range':([102,111,],[149,156,]),'law':([0,23,101,],[17,17,17,]),'inertial_law':([0,23,101,],[18,18,18,]),'default_law':([0,23,101,],[21,21,21,]),'program':([0,],[23,]),'role':([47,],[101,]),'formula':([0,4,22,23,26,37,42,81,82,84,85,101,103,107,108,126,133,165,175,],[24,55,77,24,88,96,98,124,125,128,129,24,150,152,153,162,170,182,188,]),'nonexe_law':([0,23,101,],[29,29,29,]),'visible_law':([0,23,101,],[31,31,31,]),'goal_query':([0,23,101,],[32,32,32,]),'static_law':([0,23,101,],[34,34,34,]),'asp_mult_operation':([0,4,22,23,26,28,37,42,69,70,72,79,81,82,84,85,101,103,107,108,126,133,160,165,175,],[36,36,36,36,36,36,36,36,114,36,116,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'variable':([0,4,12,14,20,22,23,26,28,35,37,39,42,43,46,51,54,69,70,72,74,79,81,82,84,85,87,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,154,160,165,168,174,175,179,180,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'bindings':([79,],[121,]),'pred_fact':([0,23,101,],[38,38,38,]),'term_number_list':([87,154,168,],[130,178,185,]),'term':([0,4,12,14,20,22,23,26,28,35,37,39,42,43,46,51,54,69,70,72,74,79,81,82,84,85,87,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,154,160,165,168,174,175,179,180,],[33,33,57,60,75,33,33,33,92,57,33,57,33,57,57,57,92,92,92,92,92,33,33,33,33,33,92,134,92,92,33,147,33,33,33,92,147,57,158,57,33,33,92,33,33,92,92,33,92,57,]),'identifier':([0,4,12,14,20,22,23,26,28,35,37,39,42,43,46,51,54,69,70,72,74,79,81,82,84,85,87,90,94,95,101,102,103,107,108,109,111,112,119,120,126,133,154,160,165,168,174,175,179,180,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'where_part':([24,55,58,77,97,98,99,100,104,125,127,128,136,139,152,153,166,169,182,],[80,106,110,118,140,141,142,143,151,161,163,164,171,172,176,177,183,186,192,]),'init_rule':([0,23,101,],[44,44,44,]),'asp_operation':([0,4,22,23,26,28,37,42,70,79,81,82,84,85,101,103,107,108,126,133,160,165,175,],[15,15,15,15,15,91,15,15,115,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'rule':([0,23,101,],[11,11,145,]),'defined_fluent':([0,23,101,],[46,46,46,]),'term_boolean':([0,4,22,23,26,37,42,79,81,82,84,85,101,103,107,108,126,133,160,165,175,],[49,49,49,49,49,49,49,123,49,49,49,49,49,49,49,49,49,49,123,49,49,]),'program_part':([0,23,],[50,78,]),'fact':([0,23,101,],[52,52,52,]),'ifcons_part':([83,96,129,132,],[127,139,166,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_part','program',1,'p_program','parser.py',52),
  ('program -> program program_part','program',2,'p_program','parser.py',53),
  ('program_part -> rule DOT','program_part',2,'p_program_part','parser.py',57),
  ('program_part -> ESCAPE_ASP','program_part',1,'p_program_part','parser.py',58),
  ('program_part -> ROLE_BEGIN role ROLE_END','program_part',3,'p_program_part','parser.py',59),
  ('role -> <empty>','role',0,'p_role','parser.py',88),
  ('role -> role rule DOT','role',3,'p_role','parser.py',89),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',90),
  ('rule -> fact','rule',1,'p_rule','parser.py',117),
  ('rule -> law','rule',1,'p_rule','parser.py',118),
  ('rule -> query','rule',1,'p_rule','parser.py',119),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',123),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',124),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',125),
  ('law -> static_law','law',1,'p_law','parser.py',129),
  ('law -> dynamic_law','law',1,'p_law','parser.py',130),
  ('law -> inertial_law','law',1,'p_law','parser.py',131),
  ('law -> default_law','law',1,'p_law','parser.py',132),
  ('law -> imposs_law','law',1,'p_law','parser.py',133),
  ('law -> nonexe_law','law',1,'p_law','parser.py',134),
  ('law -> visible_law','law',1,'p_law','parser.py',135),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',139),
  ('query -> init_rule','query',1,'p_query','parser.py',145),
  ('query -> goal_query','query',1,'p_query','parser.py',146),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',150),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',156),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',161),
  ('flu_fact -> INT fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',162),
  ('flu_fact -> defined_fluent fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',163),
  ('defined_fluent -> DFLU','defined_fluent',1,'p_defined_fluent','parser.py',224),
  ('defined_fluent -> DEF FLU','defined_fluent',2,'p_defined_fluent','parser.py',225),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',229),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',230),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',242),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',243),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',244),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',260),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',265),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',266),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',267),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',281),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',295),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',311),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',317),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',325),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',326),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',334),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',339),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',340),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',347),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',348),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',353),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',354),
  ('binding -> ACT term','binding',2,'p_binding','parser.py',362),
  ('binding -> FLU term_equalpart','binding',2,'p_binding','parser.py',363),
  ('binding -> term_boolean','binding',1,'p_binding','parser.py',364),
  ('term_equalpart -> term','term_equalpart',1,'p_term_equalpart','parser.py',378),
  ('term_equalpart -> term EQ term_numeric','term_equalpart',3,'p_term_equalpart','parser.py',379),
  ('term_equalpart -> term EQ LBRAC term_number_list RBRAC','term_equalpart',5,'p_term_equalpart','parser.py',380),
  ('term_equalpart -> term EQ term_numeric DDOT term_numeric','term_equalpart',5,'p_term_equalpart','parser.py',381),
  ('binding_or_range -> term','binding_or_range',1,'p_binding_or_range','parser.py',403),
  ('binding_or_range -> term_numeric DDOT term_numeric','binding_or_range',3,'p_binding_or_range','parser.py',404),
  ('formula -> term_boolean','formula',1,'p_formula','parser.py',411),
  ('formula -> term_boolean COMMA formula','formula',3,'p_formula','parser.py',412),
  ('formula -> term_boolean COLON binding_or_range','formula',3,'p_formula','parser.py',413),
  ('formula -> term_boolean COLON binding_or_range COMMA formula','formula',5,'p_formula','parser.py',414),
  ('fluent_formula -> term_equalpart','fluent_formula',1,'p_fluent_formula','parser.py',446),
  ('fluent_formula -> term_equalpart COMMA fluent_formula','fluent_formula',3,'p_fluent_formula','parser.py',447),
  ('fluent_formula -> term_equalpart COLON binding_or_range','fluent_formula',3,'p_fluent_formula','parser.py',448),
  ('fluent_formula -> term_equalpart COLON binding_or_range COMMA fluent_formula','fluent_formula',5,'p_fluent_formula','parser.py',449),
  ('term_number_list -> term_numeric','term_number_list',1,'p_term_number_list','parser.py',466),
  ('term_number_list -> term_numeric COMMA term_number_list','term_number_list',3,'p_term_number_list','parser.py',467),
  ('term_boolean -> term','term_boolean',1,'p_term_boolean','parser.py',475),
  ('term_boolean -> NOT term','term_boolean',2,'p_term_boolean','parser.py',476),
  ('term_boolean -> MINUS term','term_boolean',2,'p_term_boolean','parser.py',477),
  ('term_boolean -> asp_term','term_boolean',1,'p_term_boolean','parser.py',478),
  ('term_numeric -> term','term_numeric',1,'p_term_numeric','parser.py',487),
  ('term_numeric -> MINUS term','term_numeric',2,'p_term_numeric','parser.py',488),
  ('term_numeric -> number','term_numeric',1,'p_term_numeric','parser.py',489),
  ('term -> variable','term',1,'p_term','parser.py',496),
  ('term -> identifier','term',1,'p_term','parser.py',497),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC','term',4,'p_term','parser.py',498),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC APOS','term',5,'p_term','parser.py',499),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',508),
  ('number -> NUMBER','number',1,'p_number','parser.py',512),
  ('number -> MINUS NUMBER','number',2,'p_number','parser.py',513),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',519),
  ('identifier -> IDENTIFIER APOS','identifier',2,'p_identifier','parser.py',520),
  ('identifier -> TRUE','identifier',1,'p_identifier','parser.py',521),
  ('identifier -> FALSE','identifier',1,'p_identifier','parser.py',522),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',539),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',550),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',551),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',552),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',553),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',554),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',555),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',556),
  ('asp_eqoperator -> ASSIGN','asp_eqoperator',1,'p_asp_eqoperator','parser.py',557),
  ('asp_eqoperator -> PLUSEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',558),
  ('asp_eqoperator -> MINUSEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',559),
  ('asp_operation -> asp_mult_operation','asp_operation',1,'p_asp_operation','parser.py',563),
  ('asp_operation -> asp_operation PLUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',564),
  ('asp_operation -> asp_operation MINUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',565),
  ('asp_operation -> term_numeric DDOT term_numeric','asp_operation',3,'p_asp_operation','parser.py',566),
  ('asp_mult_operation -> asp_pow_operation','asp_mult_operation',1,'p_asp_mult_operation','parser.py',573),
  ('asp_mult_operation -> asp_mult_operation TIMES asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',574),
  ('asp_mult_operation -> asp_mult_operation DIV asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',575),
  ('asp_pow_operation -> asp_brac_operation','asp_pow_operation',1,'p_asp_pow_operation','parser.py',582),
  ('asp_pow_operation -> asp_pow_operation POWER asp_brac_operation','asp_pow_operation',3,'p_asp_pow_operation','parser.py',583),
  ('asp_brac_operation -> term_numeric','asp_brac_operation',1,'p_asp_brac_operation','parser.py',590),
  ('asp_brac_operation -> LBRAC asp_operation RBRAC','asp_brac_operation',3,'p_asp_brac_operation','parser.py',591),
]
