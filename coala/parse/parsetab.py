
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'BFD6405E819F831DE073A715DE657E82'
    
_lr_action_items = {'RBRAC':([2,7,9,18,23,25,28,34,38,44,67,79,80,100,102,115,116,119,120,121,124,125,153,168,174,181,],[-102,-75,-76,-100,-82,-97,-80,-94,-77,-79,-81,120,-73,-95,-96,153,-65,-101,-103,-74,-99,-98,-78,178,-66,-64,]),'DEFAULT':([0,1,8,45,52,91,134,135,163,],[-1,4,-3,-5,-2,4,-7,-4,-6,]),'FLU':([0,1,8,45,52,69,91,134,135,146,163,],[-1,37,-3,-5,-2,104,37,-7,-4,104,-6,]),'NUMBER':([0,1,4,8,19,21,24,26,35,40,45,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,111,118,129,134,135,142,146,151,154,163,169,176,177,],[-1,28,28,-3,67,28,28,28,28,28,-5,-2,-91,-87,-93,-90,-92,28,28,-88,28,-89,28,28,28,28,28,28,28,67,28,28,28,28,28,28,28,28,28,28,28,-7,-4,28,28,28,28,-6,28,28,28,]),'ESCAPE_ASP':([0,1,8,45,52,91,134,135,163,],[-1,8,-3,-5,-2,134,-7,-4,-6,]),'IFCONS':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,55,66,67,73,77,80,86,100,101,102,109,114,117,119,120,121,122,124,125,137,153,156,],[-102,-75,-76,-71,-100,72,-82,-97,-80,-67,-94,-77,-72,-79,-70,-58,-68,-69,-81,111,-44,-73,111,-95,-86,-96,-46,111,111,-101,-103,-74,-85,-99,-98,-59,-78,-45,]),'COLON':([7,9,23,28,38,44,53,67,80,87,90,97,121,143,153,166,178,183,],[-75,-76,-82,-80,-77,-79,-56,-81,-73,129,129,-60,-74,-57,-78,-61,-62,-63,]),'DDOT':([7,9,23,28,38,44,67,80,121,153,160,],[-75,-76,-82,-80,-77,-79,-81,-73,-74,-78,176,]),'IF':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,53,55,66,67,77,80,83,97,100,101,102,113,119,120,121,122,124,125,137,143,153,166,178,183,],[-102,-75,-76,-71,-100,75,-82,-97,-80,-67,-94,-77,-72,-79,-70,-58,96,-56,-68,-69,-81,118,-73,118,-60,-95,-86,-96,151,-101,-103,-74,-85,-99,-98,-59,-57,-78,-61,-62,-63,]),'ACT':([0,1,8,45,52,69,91,134,135,146,163,],[-1,11,-3,-5,-2,105,11,-7,-4,105,-6,]),'DIV':([2,7,9,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,-100,-82,-97,-80,-73,84,-77,-79,-74,-81,-73,84,84,-101,-103,-74,-99,-98,-78,]),'TRUE':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,91,92,95,96,111,118,134,135,146,151,163,],[-1,17,17,-3,17,17,17,17,-5,-2,17,17,17,17,17,17,17,17,17,17,17,-7,-4,17,17,-6,]),'MINUS':([0,1,2,4,7,8,9,14,18,21,23,24,25,26,28,31,34,35,38,40,44,45,52,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,74,75,76,78,79,80,82,84,85,91,92,95,96,98,100,101,102,111,118,119,120,121,122,124,125,129,134,135,142,146,151,153,154,163,169,176,177,],[-1,19,-102,19,-75,-3,-76,64,-100,19,-82,19,-97,81,-80,-73,-94,19,-77,19,-79,-5,-2,-91,-87,-93,-90,-92,81,81,-88,81,-89,-74,-81,19,19,19,19,19,81,81,64,-73,81,81,81,19,19,19,19,81,-95,64,-96,19,19,-101,-103,-74,64,-99,-98,81,-7,-4,81,19,19,-78,81,-6,81,81,81,]),'DOT':([2,3,5,6,7,9,10,12,15,16,17,18,20,22,23,25,27,28,29,30,31,32,34,36,38,39,42,44,46,47,49,50,51,53,54,55,66,67,68,70,73,77,80,83,86,87,88,89,90,93,94,97,99,100,101,102,103,106,107,108,109,110,112,113,114,117,119,120,121,122,123,124,125,126,127,128,130,131,132,133,136,137,138,139,140,143,144,145,147,148,149,150,152,153,155,156,157,158,159,161,162,164,165,166,170,171,172,173,175,178,179,180,183,],[-102,-18,-12,-13,-75,-76,52,-10,-9,-16,-71,-100,-17,-49,-82,-97,-19,-80,-20,-23,-67,-14,-94,-11,-77,-72,-22,-79,-70,-58,-8,-15,-49,-56,-49,-68,-69,-81,-49,-24,-47,-44,-73,-44,-47,-49,-49,-49,-49,-49,-37,-60,-25,-95,-86,-96,-42,-50,-51,-55,-46,-49,-49,-49,-47,-47,-101,-103,-74,-85,-49,-99,-98,-49,-49,-26,-43,-30,-49,-27,163,-59,-36,-49,-49,-57,-56,-53,-32,-48,-33,-34,-49,-78,-49,-45,-21,-40,-28,-84,-29,-39,-38,-61,-54,-52,-49,-31,-41,-62,-35,-83,-63,]),'NEQ':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,65,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'LE':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,60,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'POWER':([2,7,9,18,23,25,28,31,38,44,66,67,80,119,120,121,124,125,153,],[-102,-75,-76,-100,-82,78,-80,-73,-77,-79,-74,-81,-73,-101,-103,-74,78,78,-78,]),'DFLU':([0,1,8,45,52,91,134,135,163,],[-1,43,-3,-5,-2,43,-7,-4,-6,]),'EQ':([2,7,9,14,18,23,25,28,31,34,38,44,53,66,67,80,100,102,119,120,121,124,125,144,153,],[-102,-75,-76,63,-100,-82,-97,-80,-73,-94,-77,-79,98,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,169,-78,]),'LT':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,59,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'VISIBLE':([0,1,8,45,52,91,134,135,163,],[-1,33,-3,-5,-2,33,-7,-4,-6,]),'INIT':([0,1,8,45,52,91,134,135,163,],[-1,21,-3,-5,-2,21,-7,-4,-6,]),'PLUS':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,79,80,100,101,102,119,120,121,122,124,125,153,],[-102,-75,-76,61,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,61,-73,-95,61,-96,-101,-103,-74,61,-99,-98,-78,]),'CAUSES':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,55,66,67,80,100,101,102,119,120,121,122,124,125,137,153,],[-102,-75,-76,-71,-100,74,-82,-97,-80,-67,-94,-77,-72,-79,-70,-58,-68,-69,-81,-73,-95,-86,-96,-101,-103,-74,-85,-99,-98,-59,-78,]),'COMMA':([2,7,9,17,18,23,25,28,31,34,38,39,44,46,47,53,55,66,67,80,97,100,101,102,106,107,108,116,119,120,121,122,124,125,143,144,145,153,167,170,171,178,],[-102,-75,-76,-71,-100,-82,-97,-80,-67,-94,-77,-72,-79,-70,92,-56,-68,-69,-81,-73,141,-95,-86,-96,146,-51,-55,154,-101,-103,-74,-85,-99,-98,-57,-56,-53,-78,177,-54,-52,182,]),'IDENTIFIER':([0,1,4,8,11,13,19,21,24,26,33,35,37,40,41,43,45,48,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,104,105,111,118,129,134,135,141,142,146,151,154,163,169,176,177,182,],[-1,23,23,-3,23,23,23,23,23,23,23,23,23,23,23,23,-5,23,-2,-91,-87,-93,-90,-92,23,23,-88,23,-89,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-7,-4,23,23,23,23,23,-6,23,23,23,23,]),'NONEXE':([0,1,8,45,52,91,134,135,163,],[-1,24,-3,-5,-2,24,-7,-4,-6,]),'$end':([0,1,8,52,135,],[-1,0,-3,-2,-4,]),'GT':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,56,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'EQQ':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,57,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'TIMES':([2,7,9,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,-100,-82,-97,-80,-73,85,-77,-79,-74,-81,-73,85,85,-101,-103,-74,-99,-98,-78,]),'ROLE_BEGIN':([0,1,8,52,135,],[-1,45,-3,-2,-4,]),'GE':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,100,102,119,120,121,124,125,153,],[-102,-75,-76,58,-100,-82,-97,-80,-73,-94,-77,-79,-74,-81,-73,-95,-96,-101,-103,-74,-99,-98,-78,]),'VARIABLE':([0,1,4,8,11,13,19,21,24,26,33,35,37,40,41,43,45,48,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,104,105,111,118,129,134,135,141,142,146,151,154,163,169,176,177,182,],[-1,44,44,-3,44,44,44,44,44,44,44,44,44,44,44,44,-5,44,-2,-91,-87,-93,-90,-92,44,44,-88,44,-89,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-7,-4,44,44,44,44,44,-6,44,44,44,44,]),'IMPOSSIBLE':([0,1,8,45,52,91,134,135,163,],[-1,35,-3,-5,-2,35,-7,-4,-6,]),'WHERE':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,53,54,55,66,67,68,73,77,80,83,86,87,88,89,90,93,97,100,101,102,109,110,112,113,114,117,119,120,121,122,123,124,125,126,127,132,137,139,140,143,148,152,153,155,156,161,166,172,178,180,183,],[-102,-75,-76,-71,-100,69,-82,-97,-80,-67,-94,-77,-72,-79,-70,-58,69,-56,69,-68,-69,-81,69,-47,-44,-73,-44,-47,69,69,69,69,69,-60,-95,-86,-96,-46,69,69,69,-47,-47,-101,-103,-74,-85,69,-99,-98,69,69,69,-59,69,69,-57,-48,69,-78,69,-45,-84,-61,69,-62,-83,-63,]),'GOAL':([0,1,8,45,52,91,134,135,163,],[-1,40,-3,-5,-2,40,-7,-4,-6,]),'FALSE':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,91,92,95,96,111,118,134,135,146,151,163,],[-1,39,39,-3,39,39,39,39,-5,-2,39,39,39,39,39,39,39,39,39,39,39,-7,-4,39,39,-6,]),'LBRAC':([0,1,4,8,21,23,24,26,35,40,45,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,78,82,84,85,91,92,95,96,98,111,118,134,135,146,151,163,],[-1,26,26,-3,26,76,26,26,26,26,-5,-2,-91,-87,-93,-90,-92,26,26,-88,26,-89,26,26,26,26,26,26,26,26,26,26,26,26,26,142,26,26,-7,-4,26,26,-6,]),'INT':([0,1,8,45,52,91,129,134,135,163,],[-1,41,-3,-5,-2,41,161,-7,-4,-6,]),'INERTIAL':([0,1,8,45,52,91,134,135,163,],[-1,48,-3,-5,-2,48,-7,-4,-6,]),'AFTER':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,55,66,67,80,100,101,102,119,120,121,122,124,125,137,153,],[-102,-75,-76,-71,-100,71,-82,-97,-80,-67,-94,-77,-72,-79,-70,-58,95,-68,-69,-81,-73,-95,-86,-96,-101,-103,-74,-85,-99,-98,-59,-78,]),'ROLE_END':([45,91,134,163,],[-5,135,-7,-6,]),'ASSIGN':([9,23,31,38,44,153,],[-76,-82,82,-77,-79,-78,]),'NOT':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,91,92,95,96,111,118,134,135,146,151,163,],[-1,13,13,-3,13,13,13,13,-5,-2,13,13,13,13,13,13,13,13,13,13,13,-7,-4,13,13,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term_numeric':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,76,78,82,84,85,91,92,95,96,98,111,118,129,142,146,151,154,169,176,177,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,116,2,2,2,2,2,2,2,2,143,2,2,160,167,2,2,116,143,180,116,]),'asp_brac_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,78,82,84,85,91,92,95,96,111,118,146,151,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,119,18,18,18,18,18,18,18,18,18,18,18,]),'imposs_law':([1,91,],[3,3,]),'act_fact':([1,91,],[5,5,]),'flu_fact':([1,91,],[6,6,]),'number':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,76,78,82,84,85,91,92,95,96,98,111,118,129,142,146,151,154,169,176,177,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'term_number_list_two':([142,],[168,]),'if_part':([77,83,],[117,123,]),'fluent_formula':([11,33,37,41,43,48,141,182,],[54,83,87,89,90,93,166,183,]),'dynamic_law':([1,91,],[50,50,]),'asp_eqoperator':([14,],[62,]),'asp_pow_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,82,84,85,91,92,95,96,111,118,146,151,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,124,125,25,25,25,25,25,25,25,25,]),'query':([1,91,],[12,12,]),'binding':([69,146,],[107,171,]),'after_part':([22,],[73,]),'asp_term':([1,4,21,24,35,40,69,71,72,74,75,91,92,95,96,111,118,146,151,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'law':([1,91,],[15,15,]),'inertial_law':([1,91,],[16,16,]),'default_law':([1,91,],[20,20,]),'program':([0,],[1,]),'role':([45,],[91,]),'formula':([1,4,21,24,35,40,71,72,74,75,91,92,95,96,111,118,151,],[22,51,68,77,86,88,109,110,113,114,22,137,139,140,148,156,172,]),'int_domain':([87,90,],[127,132,]),'nonexe_law':([1,91,],[27,27,]),'visible_law':([1,91,],[29,29,]),'goal_query':([1,91,],[30,30,]),'static_law':([1,91,],[32,32,]),'asp_mult_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,82,91,92,95,96,111,118,146,151,],[34,34,34,34,34,34,34,100,34,102,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'variable':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,104,105,111,118,129,141,142,146,151,154,169,176,177,182,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'bindings':([69,],[106,]),'pred_fact':([1,91,],[36,36,]),'term_number_list':([76,154,177,],[115,174,181,]),'term':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,104,105,111,118,129,141,142,146,151,154,169,176,177,182,],[31,31,53,55,66,31,31,80,53,31,53,31,53,53,53,80,80,80,31,31,31,31,31,80,80,121,80,80,80,31,31,31,31,80,144,145,31,31,80,53,80,31,31,80,80,80,80,53,]),'identifier':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,84,85,91,92,95,96,98,104,105,111,118,129,141,142,146,151,154,169,176,177,182,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'where_part':([22,51,54,68,87,88,89,90,93,110,112,113,123,126,127,132,139,140,152,155,172,],[70,94,99,103,128,130,131,133,138,147,149,150,157,158,159,162,164,165,173,175,179,]),'init_rule':([1,91,],[42,42,]),'asp_operation':([1,4,21,24,26,35,40,62,69,71,72,74,75,82,91,92,95,96,111,118,146,151,],[14,14,14,14,79,14,14,101,14,14,14,14,14,122,14,14,14,14,14,14,14,14,]),'rule':([1,91,],[10,136,]),'equalpart':([53,144,],[97,170,]),'term_boolean':([1,4,21,24,35,40,69,71,72,74,75,91,92,95,96,111,118,146,151,],[47,47,47,47,47,47,108,47,47,47,47,47,47,47,47,47,47,108,47,]),'fact':([1,91,],[49,49,]),'ifcons_part':([73,86,114,117,],[112,126,152,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser.py',51),
  ('program -> program rule DOT','program',3,'p_program','parser.py',52),
  ('program -> program ESCAPE_ASP','program',2,'p_program','parser.py',53),
  ('program -> program ROLE_BEGIN role ROLE_END','program',4,'p_program','parser.py',54),
  ('role -> <empty>','role',0,'p_role','parser.py',79),
  ('role -> role rule DOT','role',3,'p_role','parser.py',80),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',81),
  ('rule -> fact','rule',1,'p_rule','parser.py',108),
  ('rule -> law','rule',1,'p_rule','parser.py',109),
  ('rule -> query','rule',1,'p_rule','parser.py',110),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',114),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',115),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',116),
  ('law -> static_law','law',1,'p_law','parser.py',121),
  ('law -> dynamic_law','law',1,'p_law','parser.py',122),
  ('law -> inertial_law','law',1,'p_law','parser.py',123),
  ('law -> default_law','law',1,'p_law','parser.py',124),
  ('law -> imposs_law','law',1,'p_law','parser.py',125),
  ('law -> nonexe_law','law',1,'p_law','parser.py',126),
  ('law -> visible_law','law',1,'p_law','parser.py',127),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',131),
  ('query -> init_rule','query',1,'p_query','parser.py',139),
  ('query -> goal_query','query',1,'p_query','parser.py',140),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',144),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',150),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',160),
  ('flu_fact -> DFLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',161),
  ('flu_fact -> FLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',162),
  ('flu_fact -> DFLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',163),
  ('flu_fact -> INT fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',164),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',224),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',225),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',237),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',238),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',239),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',258),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',263),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',264),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',265),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',276),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',290),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',306),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',312),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',320),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',321),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',329),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',335),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',336),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',344),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',345),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',350),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',351),
  ('binding -> ACT term','binding',2,'p_binding','parser.py',359),
  ('binding -> FLU term equalpart','binding',3,'p_binding','parser.py',360),
  ('binding -> term_boolean','binding',1,'p_binding','parser.py',361),
  ('equalpart -> <empty>','equalpart',0,'p_equalpart','parser.py',375),
  ('equalpart -> EQ term_numeric','equalpart',2,'p_equalpart','parser.py',376),
  ('formula -> term_boolean','formula',1,'p_formula','parser.py',385),
  ('formula -> term_boolean COMMA formula','formula',3,'p_formula','parser.py',386),
  ('fluent_formula -> term equalpart','fluent_formula',2,'p_fluent_formula','parser.py',415),
  ('fluent_formula -> term equalpart COMMA fluent_formula','fluent_formula',4,'p_fluent_formula','parser.py',416),
  ('fluent_formula -> term EQ LBRAC term_number_list_two RBRAC','fluent_formula',5,'p_fluent_formula','parser.py',417),
  ('fluent_formula -> term EQ LBRAC term_number_list_two RBRAC COMMA fluent_formula','fluent_formula',7,'p_fluent_formula','parser.py',418),
  ('term_number_list_two -> term_numeric COMMA term_number_list','term_number_list_two',3,'p_term_number_list_two','parser.py',438),
  ('term_number_list -> term_numeric','term_number_list',1,'p_term_number_list','parser.py',443),
  ('term_number_list -> term_numeric COMMA term_number_list','term_number_list',3,'p_term_number_list','parser.py',444),
  ('term_boolean -> term','term_boolean',1,'p_term_boolean','parser.py',452),
  ('term_boolean -> NOT term','term_boolean',2,'p_term_boolean','parser.py',453),
  ('term_boolean -> MINUS term','term_boolean',2,'p_term_boolean','parser.py',454),
  ('term_boolean -> asp_term','term_boolean',1,'p_term_boolean','parser.py',455),
  ('term_boolean -> TRUE','term_boolean',1,'p_term_boolean','parser.py',456),
  ('term_boolean -> FALSE','term_boolean',1,'p_term_boolean','parser.py',457),
  ('term_numeric -> term','term_numeric',1,'p_term_numeric','parser.py',486),
  ('term_numeric -> MINUS term','term_numeric',2,'p_term_numeric','parser.py',487),
  ('term_numeric -> number','term_numeric',1,'p_term_numeric','parser.py',488),
  ('term -> variable','term',1,'p_term','parser.py',495),
  ('term -> identifier','term',1,'p_term','parser.py',496),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC','term',4,'p_term','parser.py',497),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',504),
  ('number -> NUMBER','number',1,'p_number','parser.py',508),
  ('number -> MINUS NUMBER','number',2,'p_number','parser.py',509),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',515),
  ('int_domain -> COLON term_numeric DDOT term_numeric','int_domain',4,'p_int_domain','parser.py',519),
  ('int_domain -> COLON INT','int_domain',2,'p_int_domain','parser.py',520),
  ('asp_term -> term ASSIGN asp_operation','asp_term',3,'p_asp_term','parser.py',544),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',545),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',558),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',559),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',560),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',561),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',562),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',563),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',564),
  ('asp_operation -> asp_mult_operation','asp_operation',1,'p_asp_operation','parser.py',568),
  ('asp_operation -> asp_operation PLUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',569),
  ('asp_operation -> asp_operation MINUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',570),
  ('asp_mult_operation -> asp_pow_operation','asp_mult_operation',1,'p_asp_mult_operation','parser.py',577),
  ('asp_mult_operation -> asp_mult_operation TIMES asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',578),
  ('asp_mult_operation -> asp_mult_operation DIV asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',579),
  ('asp_pow_operation -> asp_brac_operation','asp_pow_operation',1,'p_asp_pow_operation','parser.py',586),
  ('asp_pow_operation -> asp_pow_operation POWER asp_brac_operation','asp_pow_operation',3,'p_asp_pow_operation','parser.py',587),
  ('asp_brac_operation -> term_numeric','asp_brac_operation',1,'p_asp_brac_operation','parser.py',594),
  ('asp_brac_operation -> LBRAC asp_operation RBRAC','asp_brac_operation',3,'p_asp_brac_operation','parser.py',595),
]
