
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2291DAA0C174CFC922A1F7CC9D00D2E5'
    
_lr_action_items = {'RBRAC':([2,7,9,19,24,26,28,34,40,47,72,92,93,112,114,124,125,128,132,133,140,162,181,185,186,192,],[-102,-75,-76,-100,-82,-97,-80,-94,-77,-79,-81,140,-74,-95,-96,162,-65,-101,-99,-98,-103,-78,-66,190,191,-64,]),'DEFAULT':([0,1,8,48,57,98,145,146,174,],[-1,4,-3,-5,-2,4,-7,-4,-6,]),'FLU':([0,1,8,48,56,57,98,145,146,155,174,],[-1,39,-3,-5,106,-2,39,-7,-4,106,-6,]),'NUMBER':([0,1,4,8,12,18,20,22,25,33,35,39,42,43,45,48,50,56,57,60,61,62,63,64,65,66,67,68,69,74,75,77,78,79,81,83,84,86,87,94,98,99,102,103,104,111,120,127,138,139,144,145,146,155,160,163,171,173,174,183,189,],[-1,28,28,-3,28,28,72,28,28,28,28,28,28,28,28,-5,28,28,-2,-91,-87,-93,-90,-92,28,28,-88,28,-89,28,28,28,28,28,28,28,28,28,28,72,28,28,28,28,28,28,28,28,28,28,28,-7,-4,28,28,28,28,28,-6,28,28,]),'ESCAPE_ASP':([0,1,8,48,57,98,145,146,174,],[-1,8,-3,-5,-2,145,-7,-4,-6,]),'IFCONS':([2,7,9,14,19,23,24,26,28,31,34,37,40,41,46,47,49,54,71,72,76,80,82,88,89,93,112,113,114,116,118,123,126,128,129,130,132,133,135,140,149,162,165,],[-102,-75,-76,-68,-100,75,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-60,-60,-58,-81,120,-46,-71,120,-58,-74,-95,-86,-96,-73,-48,120,120,-101,-59,-85,-99,-98,-72,-103,-61,-78,-47,]),'DDOT':([7,9,24,28,40,47,72,93,162,169,],[-75,-76,-82,-80,-77,-79,-81,-74,-78,183,]),'IF':([2,7,9,14,19,23,24,26,28,31,34,37,40,41,46,47,49,53,54,59,71,72,80,82,85,89,93,112,113,114,116,122,128,129,130,132,133,135,140,148,149,162,],[-102,-75,-76,-68,-100,78,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-60,103,-60,-62,-58,-81,127,-71,127,-58,-74,-95,-86,-96,-73,160,-101,-59,-85,-99,-98,-72,-103,-63,-61,-78,]),'ACT':([0,1,8,48,56,57,98,145,146,155,174,],[-1,12,-3,-5,105,-2,12,-7,-4,105,-6,]),'DIV':([2,7,9,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,-100,-82,-97,-80,-74,86,-77,-79,-81,-74,-74,-74,86,86,-101,-99,-98,-103,-78,]),'TRUE':([0,1,4,8,12,18,22,25,33,35,39,43,45,48,50,56,57,74,75,77,78,98,99,102,103,104,111,120,127,145,146,155,160,174,],[-1,37,37,-3,37,37,37,37,37,37,37,37,37,-5,37,37,-2,37,37,37,37,37,37,37,37,37,37,37,37,-7,-4,37,37,-6,]),'MINUS':([0,1,2,4,7,8,9,12,15,18,19,22,24,25,26,28,31,33,34,35,39,40,42,43,45,47,48,50,56,57,60,61,62,63,64,65,66,67,68,69,72,74,75,77,78,79,81,83,84,86,87,91,92,93,97,98,99,102,103,104,111,112,113,114,120,127,128,130,132,133,138,139,140,144,145,146,155,160,162,163,171,173,174,183,189,],[-1,20,-102,20,-75,-3,-76,20,68,20,-100,20,-82,20,-97,-80,-74,20,-94,20,20,-77,94,20,20,-79,-5,20,20,-2,-91,-87,-93,-90,-92,94,94,-88,94,-89,-81,20,20,20,20,94,94,94,94,94,94,-74,68,-74,-74,20,20,20,20,20,20,-95,68,-96,20,20,-101,68,-99,-98,94,94,-103,94,-7,-4,20,20,-78,94,94,94,-6,94,94,]),'CAUSES':([2,7,9,14,19,23,24,26,28,31,34,37,40,41,46,47,49,71,72,82,89,93,112,113,114,116,128,129,130,132,133,135,140,149,162,],[-102,-75,-76,-68,-100,77,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-60,-58,-81,-71,-58,-74,-95,-86,-96,-73,-101,-59,-85,-99,-98,-72,-103,-61,-78,]),'NEQ':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,69,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'LE':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,64,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'POWER':([2,7,9,19,24,26,28,31,40,47,72,91,93,97,128,132,133,140,162,],[-102,-75,-76,-100,-82,81,-80,-74,-77,-79,-81,-74,-74,-74,-101,81,81,-103,-78,]),'DFLU':([0,1,8,48,57,98,145,146,174,],[-1,45,-3,-5,-2,45,-7,-4,-6,]),'EQ':([2,7,9,15,19,24,26,28,31,34,40,47,71,72,89,91,93,97,112,114,128,132,133,140,154,162,],[-102,-75,-76,67,-100,-82,-97,-80,83,-94,-77,-79,83,-81,83,139,-74,144,-95,-96,-101,-99,-98,-103,83,-78,]),'LT':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,63,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'VISIBLE':([0,1,8,48,57,98,145,146,174,],[-1,33,-3,-5,-2,33,-7,-4,-6,]),'INIT':([0,1,8,48,57,98,145,146,174,],[-1,22,-3,-5,-2,22,-7,-4,-6,]),'COLON':([2,7,9,14,19,24,26,28,31,34,37,40,41,46,47,59,71,72,82,89,90,91,93,96,97,112,113,114,116,128,129,130,132,133,135,140,148,162,],[-102,-75,-76,-68,-100,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-62,-58,-81,-71,-58,138,-58,-74,138,-58,-95,-86,-96,-73,-101,-59,-85,-99,-98,-72,-103,-63,-78,]),'DOT':([2,3,5,6,7,9,10,11,13,14,16,17,19,21,24,26,27,28,29,30,31,32,34,36,37,40,41,44,46,47,49,51,52,53,54,55,58,59,70,71,72,73,76,80,82,85,88,89,90,91,93,95,96,97,100,101,107,108,109,110,112,113,114,115,116,117,118,119,121,122,123,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,147,148,149,150,151,152,153,154,156,157,158,159,161,162,164,165,166,167,168,170,172,175,176,177,178,179,180,182,187,188,190,191,193,194,],[-102,-18,-12,-13,-75,-76,-51,57,-10,-68,-9,-16,-100,-17,-82,-97,-19,-80,-20,-23,-58,-14,-94,-11,-69,-77,-70,-22,-67,-79,-62,-8,-15,-51,-60,-24,-51,-62,-51,-58,-81,-51,-49,-46,-71,-46,-49,-58,-51,-58,-74,-51,-51,-58,-51,-39,-52,-53,-57,-25,-95,-86,-96,-45,-73,-44,-48,-51,-51,-51,-49,-49,-101,-59,-85,-51,-99,-98,-51,-72,-51,-26,-103,-32,-51,-27,174,-63,-61,-38,-51,-51,-55,-58,-34,-50,-35,-36,-51,-78,-51,-47,-21,-42,-28,-84,-29,-41,-40,-56,-54,-51,-33,-43,-37,-83,-51,-51,-30,-31,]),'PLUS':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,92,93,97,112,113,114,128,130,132,133,140,162,],[-102,-75,-76,65,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,65,-74,-74,-95,65,-96,-101,65,-99,-98,-103,-78,]),'IDENTIFIER':([0,1,4,8,12,18,20,22,25,33,35,38,39,42,43,45,48,50,56,57,60,61,62,63,64,65,66,67,68,69,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,105,106,111,120,127,138,139,144,145,146,155,160,163,171,173,174,183,189,],[-1,24,24,-3,24,24,24,24,24,24,24,24,24,24,24,24,-5,24,24,-2,-91,-87,-93,-90,-92,24,24,-88,24,-89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-7,-4,24,24,24,24,24,-6,24,24,]),'NONEXE':([0,1,8,48,57,98,145,146,174,],[-1,25,-3,-5,-2,25,-7,-4,-6,]),'$end':([0,1,8,57,146,],[-1,0,-3,-2,-4,]),'GT':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,60,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'EQQ':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,61,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'TIMES':([2,7,9,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,-100,-82,-97,-80,-74,87,-77,-79,-81,-74,-74,-74,87,87,-101,-99,-98,-103,-78,]),'ROLE_BEGIN':([0,1,8,57,146,],[-1,48,-3,-2,-4,]),'GE':([2,7,9,15,19,24,26,28,31,34,40,47,72,91,93,97,112,114,128,132,133,140,162,],[-102,-75,-76,62,-100,-82,-97,-80,-74,-94,-77,-79,-81,-74,-74,-74,-95,-96,-101,-99,-98,-103,-78,]),'VARIABLE':([0,1,4,8,12,18,20,22,25,33,35,38,39,42,43,45,48,50,56,57,60,61,62,63,64,65,66,67,68,69,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,105,106,111,120,127,138,139,144,145,146,155,160,163,171,173,174,183,189,],[-1,47,47,-3,47,47,47,47,47,47,47,47,47,47,47,47,-5,47,47,-2,-91,-87,-93,-90,-92,47,47,-88,47,-89,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-7,-4,47,47,47,47,47,-6,47,47,]),'IMPOSSIBLE':([0,1,8,48,57,98,145,146,174,],[-1,35,-3,-5,-2,35,-7,-4,-6,]),'WHERE':([2,7,9,10,14,19,24,26,28,31,34,37,40,41,46,47,49,53,54,58,59,70,71,72,73,76,80,82,85,88,89,90,91,93,95,96,97,100,112,113,114,116,118,119,121,122,123,126,128,129,130,131,132,133,134,135,136,140,142,148,149,151,152,157,161,162,164,165,170,179,188,190,191,],[-102,-75,-76,56,-68,-100,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-62,56,-60,56,-62,56,-58,-81,56,-49,-46,-71,-46,-49,-58,56,-58,-74,56,56,-58,56,-95,-86,-96,-73,-48,56,56,56,-49,-49,-101,-59,-85,56,-99,-98,56,-72,56,-103,56,-63,-61,56,56,-50,56,-78,56,-47,-84,56,-83,56,56,]),'GOAL':([0,1,8,48,57,98,145,146,174,],[-1,18,-3,-5,-2,18,-7,-4,-6,]),'FALSE':([0,1,4,8,12,18,22,25,33,35,39,43,45,48,50,56,57,74,75,77,78,98,99,102,103,104,111,120,127,145,146,155,160,174,],[-1,41,41,-3,41,41,41,41,41,41,41,41,41,-5,41,41,-2,41,41,41,41,41,41,41,41,41,41,41,41,-7,-4,41,41,-6,]),'LBRAC':([0,1,4,8,12,18,22,24,25,33,35,39,42,43,45,48,50,56,57,60,61,62,63,64,65,66,67,68,69,74,75,77,78,81,84,86,87,98,99,102,103,104,111,120,127,139,144,145,146,155,160,174,],[-1,42,42,-3,42,42,42,79,42,42,42,42,42,42,42,-5,42,42,-2,-91,-87,-93,-90,-92,42,42,-88,42,-89,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,171,173,-7,-4,42,42,-6,]),'INT':([0,1,8,48,57,98,138,145,146,174,],[-1,43,-3,-5,-2,43,170,-7,-4,-6,]),'INERTIAL':([0,1,8,48,57,98,145,146,174,],[-1,50,-3,-5,-2,50,-7,-4,-6,]),'AFTER':([2,7,9,14,19,23,24,26,28,31,34,37,40,41,46,47,49,53,54,71,72,82,89,93,112,113,114,116,128,129,130,132,133,135,140,149,162,],[-102,-75,-76,-68,-100,74,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,-60,102,-60,-58,-81,-71,-58,-74,-95,-86,-96,-73,-101,-59,-85,-99,-98,-72,-103,-61,-78,]),'ROLE_END':([48,98,145,174,],[-5,146,-7,-6,]),'ASSIGN':([9,24,31,40,47,91,97,162,],[-76,-82,84,-77,-79,84,84,-78,]),'NOT':([0,1,4,8,12,18,22,25,33,35,39,43,45,48,50,56,57,74,75,77,78,98,99,102,103,104,111,120,127,145,146,155,160,174,],[-1,38,38,-3,38,38,38,38,38,38,38,38,38,-5,38,38,-2,38,38,38,38,38,38,38,38,38,38,38,38,-7,-4,38,38,-6,]),'COMMA':([2,7,9,14,19,24,26,28,31,34,37,40,41,46,47,49,54,59,71,72,82,89,91,93,97,107,108,109,112,113,114,116,125,128,129,130,132,133,135,140,153,154,162,177,178,184,],[-102,-75,-76,-68,-100,-82,-97,-80,-58,-94,-69,-77,-70,-67,-79,99,104,111,-58,-81,-71,-58,-58,-74,-58,155,-53,-57,-95,-86,-96,-73,163,-101,-59,-85,-99,-98,-72,-103,-55,-58,-78,-56,-54,189,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term_numeric':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,65,66,68,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,111,120,127,138,139,144,155,160,163,171,173,183,189,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,125,2,129,2,2,2,2,2,2,2,2,2,2,2,169,129,129,2,2,125,184,184,188,125,]),'asp_brac_operation':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,65,66,68,74,75,77,78,81,84,86,87,98,99,102,103,104,111,120,127,155,160,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,128,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'imposs_law':([1,98,],[3,3,]),'act_fact':([1,98,],[5,5,]),'flu_fact':([1,98,],[6,6,]),'number':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,65,66,68,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,111,120,127,138,139,144,155,160,163,171,173,183,189,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'term_number_list_two':([171,173,],[185,186,]),'if_part':([80,85,],[126,131,]),'fluent_formula':([1,12,33,39,43,45,50,98,99,111,],[10,58,85,90,95,96,100,10,148,148,]),'dynamic_law':([1,98,],[52,52,]),'asp_eqoperator':([15,],[66,]),'asp_pow_operation':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,65,66,68,74,75,77,78,84,86,87,98,99,102,103,104,111,120,127,155,160,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,132,133,26,26,26,26,26,26,26,26,26,26,]),'query':([1,98,],[13,13,]),'binding':([56,155,],[108,178,]),'after_part':([23,],[76,]),'asp_term':([1,4,12,18,22,25,33,35,39,43,45,50,56,74,75,77,78,98,99,102,103,104,111,120,127,155,160,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'pred_fact':([1,98,],[36,36,]),'inertial_law':([1,98,],[17,17,]),'default_law':([1,98,],[21,21,]),'program':([0,],[1,]),'role':([48,],[98,]),'formula':([1,4,18,22,25,35,74,75,77,78,98,99,102,103,104,120,127,160,],[23,53,70,73,80,88,118,119,122,123,23,149,151,152,149,157,165,179,]),'int_domain':([90,96,],[136,142,]),'nonexe_law':([1,98,],[27,27,]),'visible_law':([1,98,],[29,29,]),'goal_query':([1,98,],[30,30,]),'static_law':([1,98,],[32,32,]),'asp_mult_operation':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,65,66,68,74,75,77,78,84,98,99,102,103,104,111,120,127,155,160,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,112,34,114,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'variable':([1,4,12,18,20,22,25,33,35,38,39,42,43,45,50,56,65,66,68,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,105,106,111,120,127,138,139,144,155,160,163,171,173,183,189,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'bindings':([56,],[107,]),'law':([1,98,],[16,16,]),'term_number_list':([79,163,189,],[124,181,192,]),'term':([1,4,12,18,20,22,25,33,35,38,39,42,43,45,50,56,65,66,68,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,105,106,111,120,127,138,139,144,155,160,163,171,173,183,189,],[31,31,31,31,71,31,31,31,31,89,91,93,31,97,31,31,93,93,93,31,31,31,31,93,93,93,93,93,93,31,31,31,31,31,153,154,31,31,31,93,93,93,31,31,93,93,93,93,93,]),'identifier':([1,4,12,18,20,22,25,33,35,38,39,42,43,45,50,56,65,66,68,74,75,77,78,79,81,83,84,86,87,98,99,102,103,104,105,106,111,120,127,138,139,144,155,160,163,171,173,183,189,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'where_part':([10,53,58,70,73,90,95,96,100,119,121,122,131,134,136,142,151,152,161,164,179,190,191,],[55,101,110,115,117,137,141,143,150,156,158,159,166,167,168,172,175,176,180,182,187,193,194,]),'init_rule':([1,98,],[44,44,]),'asp_operation':([1,4,12,18,22,25,33,35,39,42,43,45,50,56,66,74,75,77,78,84,98,99,102,103,104,111,120,127,155,160,],[15,15,15,15,15,15,15,15,15,92,15,15,15,15,113,15,15,15,15,130,15,15,15,15,15,15,15,15,15,15,]),'rule':([1,98,],[11,147,]),'equalpart':([31,71,89,91,97,154,],[82,116,135,82,82,177,]),'term_boolean':([1,4,12,18,22,25,33,35,39,43,45,50,56,74,75,77,78,98,99,102,103,104,111,120,127,155,160,],[49,54,59,54,54,54,59,54,59,59,59,59,109,54,54,54,54,49,49,54,54,54,59,54,54,109,54,]),'term_negated':([1,4,12,18,22,25,33,35,39,43,45,50,56,74,75,77,78,98,99,102,103,104,111,120,127,155,160,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'fact':([1,98,],[51,51,]),'ifcons_part':([76,88,123,126,],[121,134,161,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser.py',51),
  ('program -> program rule DOT','program',3,'p_program','parser.py',52),
  ('program -> program ESCAPE_ASP','program',2,'p_program','parser.py',53),
  ('program -> program ROLE_BEGIN role ROLE_END','program',4,'p_program','parser.py',54),
  ('role -> <empty>','role',0,'p_role','parser.py',79),
  ('role -> role rule DOT','role',3,'p_role','parser.py',80),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',81),
  ('rule -> fact','rule',1,'p_rule','parser.py',108),
  ('rule -> law','rule',1,'p_rule','parser.py',109),
  ('rule -> query','rule',1,'p_rule','parser.py',110),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',114),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',115),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',116),
  ('law -> static_law','law',1,'p_law','parser.py',121),
  ('law -> dynamic_law','law',1,'p_law','parser.py',122),
  ('law -> inertial_law','law',1,'p_law','parser.py',123),
  ('law -> default_law','law',1,'p_law','parser.py',124),
  ('law -> imposs_law','law',1,'p_law','parser.py',125),
  ('law -> nonexe_law','law',1,'p_law','parser.py',126),
  ('law -> visible_law','law',1,'p_law','parser.py',127),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',131),
  ('query -> init_rule','query',1,'p_query','parser.py',139),
  ('query -> goal_query','query',1,'p_query','parser.py',140),
  ('pred_fact -> fluent_formula where_part','pred_fact',2,'p_pred_fact','parser.py',144),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',150),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',160),
  ('flu_fact -> DFLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',161),
  ('flu_fact -> FLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',162),
  ('flu_fact -> DFLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',163),
  ('flu_fact -> FLU term EQ LBRAC term_number_list_two RBRAC where_part','flu_fact',7,'p_flu_fact','parser.py',164),
  ('flu_fact -> DFLU term EQ LBRAC term_number_list_two RBRAC where_part','flu_fact',7,'p_flu_fact','parser.py',165),
  ('flu_fact -> INT fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',166),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',192),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',193),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',205),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',206),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',207),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',226),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',231),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',232),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',233),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',244),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',258),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',274),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',280),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',288),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',289),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',297),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',303),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',304),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',312),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',313),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',318),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',319),
  ('binding -> ACT term','binding',2,'p_binding','parser.py',327),
  ('binding -> FLU term equalpart','binding',3,'p_binding','parser.py',328),
  ('binding -> term_boolean','binding',1,'p_binding','parser.py',329),
  ('equalpart -> <empty>','equalpart',0,'p_equalpart','parser.py',343),
  ('equalpart -> EQ term_numeric','equalpart',2,'p_equalpart','parser.py',344),
  ('formula -> term_boolean','formula',1,'p_formula','parser.py',353),
  ('formula -> term_boolean COMMA formula','formula',3,'p_formula','parser.py',354),
  ('fluent_formula -> term_boolean','fluent_formula',1,'p_fluent_formula','parser.py',368),
  ('fluent_formula -> term_boolean COMMA fluent_formula','fluent_formula',3,'p_fluent_formula','parser.py',369),
  ('term_number_list_two -> term_numeric COMMA term_number_list','term_number_list_two',3,'p_term_number_list_two','parser.py',399),
  ('term_number_list -> term_numeric','term_number_list',1,'p_term_number_list','parser.py',404),
  ('term_number_list -> term_numeric COMMA term_number_list','term_number_list',3,'p_term_number_list','parser.py',405),
  ('term_boolean -> term_negated','term_boolean',1,'p_term_boolean','parser.py',413),
  ('term_boolean -> asp_term','term_boolean',1,'p_term_boolean','parser.py',414),
  ('term_boolean -> TRUE','term_boolean',1,'p_term_boolean','parser.py',415),
  ('term_boolean -> FALSE','term_boolean',1,'p_term_boolean','parser.py',416),
  ('term_negated -> term equalpart','term_negated',2,'p_term_negated','parser.py',422),
  ('term_negated -> NOT term equalpart','term_negated',3,'p_term_negated','parser.py',423),
  ('term_negated -> MINUS term equalpart','term_negated',3,'p_term_negated','parser.py',424),
  ('term_numeric -> term','term_numeric',1,'p_term_numeric','parser.py',433),
  ('term_numeric -> number','term_numeric',1,'p_term_numeric','parser.py',434),
  ('term -> variable','term',1,'p_term','parser.py',438),
  ('term -> identifier','term',1,'p_term','parser.py',439),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC','term',4,'p_term','parser.py',440),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',447),
  ('number -> NUMBER','number',1,'p_number','parser.py',451),
  ('number -> MINUS NUMBER','number',2,'p_number','parser.py',452),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',458),
  ('int_domain -> COLON term_numeric DDOT term_numeric','int_domain',4,'p_int_domain','parser.py',462),
  ('int_domain -> COLON INT','int_domain',2,'p_int_domain','parser.py',463),
  ('asp_term -> term ASSIGN asp_operation','asp_term',3,'p_asp_term','parser.py',487),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',488),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',501),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',502),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',503),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',504),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',505),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',506),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',507),
  ('asp_operation -> asp_mult_operation','asp_operation',1,'p_asp_operation','parser.py',511),
  ('asp_operation -> asp_operation PLUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',512),
  ('asp_operation -> asp_operation MINUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',513),
  ('asp_mult_operation -> asp_pow_operation','asp_mult_operation',1,'p_asp_mult_operation','parser.py',520),
  ('asp_mult_operation -> asp_mult_operation TIMES asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',521),
  ('asp_mult_operation -> asp_mult_operation DIV asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',522),
  ('asp_pow_operation -> asp_brac_operation','asp_pow_operation',1,'p_asp_pow_operation','parser.py',529),
  ('asp_pow_operation -> asp_pow_operation POWER asp_brac_operation','asp_pow_operation',3,'p_asp_pow_operation','parser.py',530),
  ('asp_brac_operation -> term_numeric','asp_brac_operation',1,'p_asp_brac_operation','parser.py',537),
  ('asp_brac_operation -> LBRAC asp_operation RBRAC','asp_brac_operation',3,'p_asp_brac_operation','parser.py',538),
]
