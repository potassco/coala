
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F15AF9A1717982FDD816533E1CCEB9E0'
    
_lr_action_items = {'RBRAC':([1,2,7,9,17,20,26,31,37,41,42,46,77,87,92,93,105,113,114,116,117,130,131,134,135,137,138,165,176,181,182,189,],[-108,-106,-75,-76,-103,-85,-83,-81,-99,-77,-86,-80,-82,-84,135,-73,-102,-108,-100,-101,-107,165,-67,-74,-109,-105,-104,-78,186,-79,-68,190,]),'DEFAULT':([0,8,24,48,51,57,79,102,144,146,171,],[4,-4,4,-6,-1,-3,-2,4,-8,-5,-7,]),'FLU':([0,8,24,28,48,51,57,79,80,102,144,146,158,171,],[40,-4,40,90,-6,-1,-3,-2,119,40,-8,-5,119,-7,]),'NUMBER':([0,4,8,21,23,24,27,29,38,43,48,51,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,88,91,95,96,102,103,107,108,109,110,126,133,144,146,151,153,158,163,166,171,175,177,184,],[31,31,-4,77,31,31,31,31,31,31,-6,-1,31,-3,-93,-89,-98,-95,-96,-97,-92,-94,31,31,-90,31,-91,31,-2,31,31,31,31,31,31,77,31,31,31,31,31,31,31,31,31,31,-8,-5,31,31,31,31,31,-7,31,31,31,]),'ESCAPE_ASP':([0,8,24,48,51,57,79,102,144,146,171,],[8,-4,8,-6,-1,-3,-2,144,-8,-5,-7,]),'IFCONS':([1,2,7,9,15,17,20,25,26,31,34,37,41,42,46,49,50,61,76,77,84,87,89,93,97,105,113,114,115,116,117,124,129,132,134,135,137,138,147,165,168,181,],[-108,-106,-75,-76,-87,-103,-85,83,-83,-81,-69,-99,-77,-86,-80,-72,-63,-70,-71,-82,126,-84,-45,-73,126,-102,-108,-100,-88,-101,-107,-47,126,126,-74,-109,-105,-104,-64,-78,-46,-79,]),'COLON':([9,20,26,41,42,46,58,87,165,181,],[-76,-85,-83,-77,-86,-80,109,-84,-78,-79,]),'DDOT':([1,7,9,20,26,31,34,41,42,46,76,77,87,93,134,152,154,165,174,181,],[55,-75,-76,-85,-83,-81,-73,-77,-86,-80,-74,-82,-84,-73,-74,175,177,-78,184,-79,]),'IF':([1,2,7,9,15,17,20,25,26,31,34,37,41,42,46,49,50,56,58,60,61,76,77,87,89,93,94,105,113,114,115,116,117,128,134,135,137,138,147,154,155,165,181,185,186,187,190,],[-108,-106,-75,-76,-87,-103,-85,86,-83,-81,-69,-99,-77,-86,-80,-72,-63,108,-57,-65,-70,-71,-82,-84,133,-73,133,-102,-108,-100,-88,-101,-107,163,-74,-109,-105,-104,-64,-58,-66,-78,-79,-61,-59,-60,-62,]),'ACT':([0,8,24,48,51,57,79,80,102,144,146,158,171,],[12,-4,12,-6,-1,-3,-2,120,12,-8,-5,120,-7,]),'DIV':([1,2,7,9,17,20,26,31,34,37,41,42,46,76,77,87,93,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,-103,-85,-83,-81,-73,95,-77,-86,-80,-74,-82,-84,-73,-108,95,95,-107,-74,-109,-105,-104,-78,-79,]),'TRUE':([0,4,8,10,12,14,21,23,24,27,29,36,38,40,43,44,47,48,51,52,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,88,90,91,95,96,102,103,107,108,109,110,112,119,120,126,133,144,146,151,153,158,163,166,171,175,177,184,],[20,20,-4,-30,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,-1,20,20,-3,-93,-89,-98,-95,-96,-97,-92,-94,20,20,-90,20,-91,20,-2,20,20,20,20,20,20,-31,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-8,-5,20,20,20,20,20,-7,20,20,20,]),'MINUS':([0,1,2,4,7,8,9,16,17,20,23,24,26,27,29,31,34,37,38,41,42,43,46,48,51,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,85,86,87,88,92,93,95,96,102,103,105,107,108,109,110,113,114,115,116,117,126,133,134,135,137,138,144,146,151,153,158,163,165,166,171,175,177,181,184,],[21,-108,-106,21,-75,-4,-76,73,-103,-85,21,21,-83,21,91,-81,-73,-99,21,-77,-86,21,-80,-6,-1,91,-3,-93,-89,-98,-95,-96,-97,-92,-94,91,91,-90,91,-91,91,-74,-82,-2,21,21,21,21,21,-84,91,73,-73,91,91,21,21,-102,21,21,91,91,-108,-100,73,-101,-107,21,21,-74,-109,-105,-104,-8,-5,91,91,21,21,-78,91,-7,91,91,-79,91,]),'DEF':([0,8,24,48,51,57,79,102,144,146,171,],[28,-4,28,-6,-1,-3,-2,28,-8,-5,-7,]),'NEQ':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,74,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'LE':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,69,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'GE':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,65,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'POWER':([1,2,7,9,17,20,26,31,34,41,42,46,76,77,87,93,113,117,134,135,137,138,165,181,],[-108,-106,-75,-76,75,-85,-83,-81,-73,-77,-86,-80,-74,-82,-84,-73,-108,-107,-74,-109,75,75,-78,-79,]),'DFLU':([0,8,24,48,51,57,79,102,144,146,171,],[10,-4,10,-6,-1,-3,-2,10,-8,-5,-7,]),'WHERE':([1,2,7,9,15,17,20,25,26,31,34,37,41,42,46,49,50,56,58,59,60,61,76,77,78,84,87,89,93,94,97,98,99,100,101,104,105,113,114,115,116,117,124,125,127,128,129,132,134,135,136,137,138,139,147,149,150,154,155,160,164,165,167,168,179,181,185,186,187,190,],[-108,-106,-75,-76,-87,-103,-85,80,-83,-81,-69,-99,-77,-86,-80,-72,-63,80,-57,80,-65,-70,-71,-82,80,-48,-84,-45,-73,-45,-48,80,80,80,80,80,-102,-108,-100,-88,-101,-107,-47,80,80,80,-48,-48,-74,-109,80,-105,-104,80,-64,80,80,-58,-66,-49,80,-78,80,-46,80,-79,-61,-59,-60,-62,]),'LT':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,68,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'VISIBLE':([0,8,24,48,51,57,79,102,144,146,171,],[36,-4,36,-6,-1,-3,-2,36,-8,-5,-7,]),'INIT':([0,8,24,48,51,57,79,102,144,146,171,],[23,-4,23,-6,-1,-3,-2,23,-8,-5,-7,]),'PLUS':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,92,93,105,113,114,115,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,70,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,70,-73,-102,-108,-100,70,-101,-107,-74,-109,-105,-104,-78,-79,]),'CAUSES':([1,2,7,9,15,17,20,25,26,31,34,37,41,42,46,49,50,61,76,77,87,93,105,113,114,115,116,117,134,135,137,138,147,165,181,],[-108,-106,-75,-76,-87,-103,-85,85,-83,-81,-69,-99,-77,-86,-80,-72,-63,-70,-71,-82,-84,-73,-102,-108,-100,-88,-101,-107,-74,-109,-105,-104,-64,-78,-79,]),'COMMA':([1,2,7,9,15,17,20,26,31,34,37,41,42,46,49,50,58,60,61,76,77,87,93,105,113,114,115,116,117,121,122,123,131,134,135,137,138,154,156,157,165,178,181,185,186,187,190,],[-108,-106,-75,-76,-87,-103,-85,-83,-81,-69,-99,-77,-86,-80,-72,103,-57,112,-70,-71,-82,-84,-73,-102,-108,-100,-88,-101,-107,158,-52,-56,166,-74,-109,-105,-104,-58,-55,-54,-78,-53,-79,-61,-59,-60,-62,]),'IDENTIFIER':([0,4,8,10,12,14,21,23,24,27,29,36,38,40,43,44,47,48,51,52,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,88,90,91,95,96,102,103,107,108,109,110,112,119,120,126,133,144,146,151,153,158,163,166,171,175,177,184,],[26,26,-4,-30,26,26,26,26,26,26,26,26,26,26,26,26,26,-6,-1,26,26,-3,-93,-89,-98,-95,-96,-97,-92,-94,26,26,-90,26,-91,26,-2,26,26,26,26,26,26,-31,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-8,-5,26,26,26,26,26,-7,26,26,26,]),'NONEXE':([0,8,24,48,51,57,79,102,144,146,171,],[27,-4,27,-6,-1,-3,-2,27,-8,-5,-7,]),'$end':([8,24,51,57,79,146,],[-4,0,-1,-3,-2,-5,]),'APOS':([26,165,],[87,181,]),'GT':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,62,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'EQQ':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,63,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'TIMES':([1,2,7,9,17,20,26,31,34,37,41,42,46,76,77,87,93,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,-103,-85,-83,-81,-73,96,-77,-86,-80,-74,-82,-84,-73,-108,96,96,-107,-74,-109,-105,-104,-78,-79,]),'ROLE_BEGIN':([0,8,24,51,57,79,146,],[48,-4,48,-1,-3,-2,-5,]),'DOT':([1,2,3,5,6,7,9,11,13,15,17,18,19,20,22,25,26,30,31,32,33,34,35,37,39,41,42,45,46,49,50,53,54,56,58,59,60,61,76,77,78,81,84,87,89,93,94,97,98,99,100,101,104,105,106,111,113,114,115,116,117,118,121,122,123,124,125,127,128,129,132,134,135,136,137,138,139,140,141,142,143,145,147,148,149,150,154,155,156,157,159,160,161,162,164,165,167,168,169,170,172,173,178,179,180,181,183,185,186,187,188,190,],[-108,-106,-19,-13,-14,-75,-76,57,-11,-87,-103,-10,-17,-85,-18,-50,-83,-20,-81,-21,-24,-69,-15,-99,-12,-77,-86,-23,-80,-72,-63,-9,-16,-50,-57,-50,-65,-70,-71,-82,-50,-25,-48,-84,-45,-73,-45,-48,-50,-50,-50,-50,-50,-102,-38,-26,-108,-100,-88,-101,-107,-43,-51,-52,-56,-47,-50,-50,-50,-48,-48,-74,-109,-50,-105,-104,-50,-27,-44,-28,-29,171,-64,-37,-50,-50,-58,-66,-55,-54,-33,-49,-34,-35,-50,-78,-50,-46,-22,-41,-40,-39,-53,-50,-32,-79,-42,-61,-59,-60,-36,-62,]),'VARIABLE':([0,4,8,10,12,14,21,23,24,27,29,36,38,40,43,44,47,48,51,52,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,88,90,91,95,96,102,103,107,108,109,110,112,119,120,126,133,144,146,151,153,158,163,166,171,175,177,184,],[46,46,-4,-30,46,46,46,46,46,46,46,46,46,46,46,46,46,-6,-1,46,46,-3,-93,-89,-98,-95,-96,-97,-92,-94,46,46,-90,46,-91,46,-2,46,46,46,46,46,46,-31,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-8,-5,46,46,46,46,46,-7,46,46,46,]),'IMPOSSIBLE':([0,8,24,48,51,57,79,102,144,146,171,],[38,-4,38,-6,-1,-3,-2,38,-8,-5,-7,]),'EQ':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,58,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,72,-103,-85,-83,-81,-73,-99,-77,-86,-80,110,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'GOAL':([0,8,24,48,51,57,79,102,144,146,171,],[43,-4,43,-6,-1,-3,-2,43,-8,-5,-7,]),'FALSE':([0,4,8,10,12,14,21,23,24,27,29,36,38,40,43,44,47,48,51,52,55,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,88,90,91,95,96,102,103,107,108,109,110,112,119,120,126,133,144,146,151,153,158,163,166,171,175,177,184,],[42,42,-4,-30,42,42,42,42,42,42,42,42,42,42,42,42,42,-6,-1,42,42,-3,-93,-89,-98,-95,-96,-97,-92,-94,42,42,-90,42,-91,42,-2,42,42,42,42,42,42,-31,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-8,-5,42,42,42,42,42,-7,42,42,42,]),'LBRAC':([0,4,8,23,24,26,27,29,38,43,48,51,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,85,86,95,96,102,103,107,108,109,110,126,133,144,146,158,163,171,],[29,29,-4,29,29,88,29,29,29,29,-6,-1,-3,-93,-89,-98,-95,-96,-97,-92,-94,29,29,-90,29,-91,29,-2,29,29,29,29,29,29,29,29,29,29,29,151,153,29,29,-8,-5,29,29,-7,]),'INT':([0,8,24,48,51,57,79,102,144,146,171,],[44,-4,44,-6,-1,-3,-2,44,-8,-5,-7,]),'INERTIAL':([0,8,24,48,51,57,79,102,144,146,171,],[52,-4,52,-6,-1,-3,-2,52,-8,-5,-7,]),'AFTER':([1,2,7,9,15,17,20,25,26,31,34,37,41,42,46,49,50,56,61,76,77,87,93,105,113,114,115,116,117,134,135,137,138,147,165,181,],[-108,-106,-75,-76,-87,-103,-85,82,-83,-81,-69,-99,-77,-86,-80,-72,-63,107,-70,-71,-82,-84,-73,-102,-108,-100,-88,-101,-107,-74,-109,-105,-104,-64,-78,-79,]),'MINUSEQ':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,64,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'ROLE_END':([48,102,144,171,],[-6,146,-8,-7,]),'ASSIGN':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,66,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'PLUSEQ':([1,2,7,9,16,17,20,26,31,34,37,41,42,46,76,77,87,93,105,113,114,116,117,134,135,137,138,165,181,],[-108,-106,-75,-76,67,-103,-85,-83,-81,-73,-99,-77,-86,-80,-74,-82,-84,-73,-102,-108,-100,-101,-107,-74,-109,-105,-104,-78,-79,]),'NOT':([0,4,8,23,24,27,38,43,48,51,57,79,80,82,83,85,86,102,103,107,108,126,133,144,146,158,163,171,],[14,14,-4,14,14,14,14,14,-6,-1,-3,-2,14,14,14,14,14,14,14,14,14,14,14,-8,-5,14,14,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term_numeric':([0,4,23,24,27,29,38,43,55,70,71,73,75,80,82,83,85,86,88,95,96,102,103,107,108,109,110,126,133,151,153,158,163,166,175,177,184,],[1,1,1,1,1,1,1,1,105,113,1,113,113,1,1,1,1,1,131,113,113,1,1,1,1,152,154,1,1,174,131,1,1,131,185,187,189,]),'asp_brac_operation':([0,4,23,24,27,29,38,43,70,71,73,75,80,82,83,85,86,95,96,102,103,107,108,126,133,158,163,],[2,2,2,2,2,2,2,2,2,2,2,117,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'imposs_law':([0,24,102,],[3,3,3,]),'binding':([80,158,],[122,178,]),'act_fact':([0,24,102,],[5,5,5,]),'flu_fact':([0,24,102,],[6,6,6,]),'number':([0,4,23,24,27,29,38,43,55,70,71,73,75,80,82,83,85,86,88,95,96,102,103,107,108,109,110,126,133,151,153,158,163,166,175,177,184,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_part':([89,94,],[132,136,]),'fluent_formula':([12,36,40,44,47,52,112,],[59,94,98,100,101,104,155,]),'dynamic_law':([0,24,102,],[54,54,54,]),'asp_eqoperator':([16,],[71,]),'asp_pow_operation':([0,4,23,24,27,29,38,43,70,71,73,80,82,83,85,86,95,96,102,103,107,108,126,133,158,163,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,137,138,17,17,17,17,17,17,17,17,]),'query':([0,24,102,],[13,13,13,]),'term_equalpart':([12,36,40,44,47,52,112,119,],[60,60,60,60,60,60,60,156,]),'after_part':([25,],[84,]),'asp_term':([0,4,23,24,27,38,43,80,82,83,85,86,102,103,107,108,126,133,158,163,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'law':([0,24,102,],[18,18,18,]),'inertial_law':([0,24,102,],[19,19,19,]),'default_law':([0,24,102,],[22,22,22,]),'program':([0,],[24,]),'role':([48,],[102,]),'formula':([0,4,23,24,27,38,43,82,83,85,86,102,103,107,108,126,133,163,],[25,56,78,25,89,97,99,124,125,128,129,25,147,149,150,160,168,179,]),'nonexe_law':([0,24,102,],[30,30,30,]),'visible_law':([0,24,102,],[32,32,32,]),'goal_query':([0,24,102,],[33,33,33,]),'static_law':([0,24,102,],[35,35,35,]),'asp_mult_operation':([0,4,23,24,27,29,38,43,70,71,73,80,82,83,85,86,102,103,107,108,126,133,158,163,],[37,37,37,37,37,37,37,37,114,37,116,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'variable':([0,4,12,14,21,23,24,27,29,36,38,40,43,44,47,52,55,70,71,73,75,80,82,83,85,86,88,91,95,96,102,103,107,108,109,110,112,119,120,126,133,151,153,158,163,166,175,177,184,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asp_arith':([0,4,23,24,27,38,43,80,82,83,85,86,102,103,107,108,126,133,158,163,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'bindings':([80,],[121,]),'pred_fact':([0,24,102,],[39,39,39,]),'term_number_list':([88,153,166,],[130,176,182,]),'term':([0,4,12,14,21,23,24,27,29,36,38,40,43,44,47,52,55,70,71,73,75,80,82,83,85,86,88,91,95,96,102,103,107,108,109,110,112,119,120,126,133,151,153,158,163,166,175,177,184,],[34,34,58,61,76,34,34,34,93,58,34,58,34,58,58,58,93,93,93,93,93,34,34,34,34,34,93,134,93,93,34,34,34,34,93,93,58,58,157,34,34,93,93,34,34,93,93,93,93,]),'identifier':([0,4,12,14,21,23,24,27,29,36,38,40,43,44,47,52,55,70,71,73,75,80,82,83,85,86,88,91,95,96,102,103,107,108,109,110,112,119,120,126,133,151,153,158,163,166,175,177,184,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'where_part':([25,56,59,78,98,99,100,101,104,125,127,128,136,139,149,150,164,167,179,],[81,106,111,118,140,141,142,143,148,159,161,162,169,170,172,173,180,183,188,]),'init_rule':([0,24,102,],[45,45,45,]),'asp_operation':([0,4,23,24,27,29,38,43,71,80,82,83,85,86,102,103,107,108,126,133,158,163,],[16,16,16,16,16,92,16,16,115,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'rule':([0,24,102,],[11,11,145,]),'defined_fluent':([0,24,102,],[47,47,47,]),'term_boolean':([0,4,23,24,27,38,43,80,82,83,85,86,102,103,107,108,126,133,158,163,],[50,50,50,50,50,50,50,123,50,50,50,50,50,50,50,50,50,50,123,50,]),'program_part':([0,24,],[51,79,]),'fact':([0,24,102,],[53,53,53,]),'ifcons_part':([84,97,129,132,],[127,139,164,167,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_part','program',1,'p_program','parser.py',52),
  ('program -> program program_part','program',2,'p_program','parser.py',53),
  ('program_part -> rule DOT','program_part',2,'p_program_part','parser.py',57),
  ('program_part -> ESCAPE_ASP','program_part',1,'p_program_part','parser.py',58),
  ('program_part -> ROLE_BEGIN role ROLE_END','program_part',3,'p_program_part','parser.py',59),
  ('role -> <empty>','role',0,'p_role','parser.py',88),
  ('role -> role rule DOT','role',3,'p_role','parser.py',89),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',90),
  ('rule -> fact','rule',1,'p_rule','parser.py',117),
  ('rule -> law','rule',1,'p_rule','parser.py',118),
  ('rule -> query','rule',1,'p_rule','parser.py',119),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',123),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',124),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',125),
  ('law -> static_law','law',1,'p_law','parser.py',129),
  ('law -> dynamic_law','law',1,'p_law','parser.py',130),
  ('law -> inertial_law','law',1,'p_law','parser.py',131),
  ('law -> default_law','law',1,'p_law','parser.py',132),
  ('law -> imposs_law','law',1,'p_law','parser.py',133),
  ('law -> nonexe_law','law',1,'p_law','parser.py',134),
  ('law -> visible_law','law',1,'p_law','parser.py',135),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',139),
  ('query -> init_rule','query',1,'p_query','parser.py',145),
  ('query -> goal_query','query',1,'p_query','parser.py',146),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',150),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',156),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',161),
  ('flu_fact -> INT fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',162),
  ('flu_fact -> defined_fluent fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',163),
  ('defined_fluent -> DFLU','defined_fluent',1,'p_defined_fluent','parser.py',195),
  ('defined_fluent -> DEF FLU','defined_fluent',2,'p_defined_fluent','parser.py',196),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',200),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',201),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',213),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',214),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',215),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',231),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',236),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',237),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',238),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',252),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',266),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',282),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',288),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',296),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',297),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',305),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',310),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',311),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',318),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',319),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',324),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',325),
  ('binding -> ACT term','binding',2,'p_binding','parser.py',333),
  ('binding -> FLU term_equalpart','binding',2,'p_binding','parser.py',334),
  ('binding -> term_boolean','binding',1,'p_binding','parser.py',335),
  ('term_equalpart -> term','term_equalpart',1,'p_term_equalpart','parser.py',349),
  ('term_equalpart -> term EQ term_numeric','term_equalpart',3,'p_term_equalpart','parser.py',350),
  ('term_equalpart -> term EQ LBRAC term_number_list RBRAC','term_equalpart',5,'p_term_equalpart','parser.py',351),
  ('term_equalpart -> term EQ term_numeric DDOT term_numeric','term_equalpart',5,'p_term_equalpart','parser.py',352),
  ('term_equalpart -> term COLON term_numeric DDOT term_numeric','term_equalpart',5,'p_term_equalpart','parser.py',353),
  ('term_equalpart -> term COLON LBRAC term_numeric DDOT term_numeric RBRAC','term_equalpart',7,'p_term_equalpart','parser.py',354),
  ('formula -> term_boolean','formula',1,'p_formula','parser.py',370),
  ('formula -> term_boolean COMMA formula','formula',3,'p_formula','parser.py',371),
  ('fluent_formula -> term_equalpart','fluent_formula',1,'p_fluent_formula','parser.py',386),
  ('fluent_formula -> term_equalpart COMMA fluent_formula','fluent_formula',3,'p_fluent_formula','parser.py',387),
  ('term_number_list -> term_numeric','term_number_list',1,'p_term_number_list','parser.py',396),
  ('term_number_list -> term_numeric COMMA term_number_list','term_number_list',3,'p_term_number_list','parser.py',397),
  ('term_boolean -> term','term_boolean',1,'p_term_boolean','parser.py',405),
  ('term_boolean -> NOT term','term_boolean',2,'p_term_boolean','parser.py',406),
  ('term_boolean -> MINUS term','term_boolean',2,'p_term_boolean','parser.py',407),
  ('term_boolean -> asp_term','term_boolean',1,'p_term_boolean','parser.py',408),
  ('term_numeric -> term','term_numeric',1,'p_term_numeric','parser.py',417),
  ('term_numeric -> MINUS term','term_numeric',2,'p_term_numeric','parser.py',418),
  ('term_numeric -> number','term_numeric',1,'p_term_numeric','parser.py',419),
  ('term -> variable','term',1,'p_term','parser.py',426),
  ('term -> identifier','term',1,'p_term','parser.py',427),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC','term',4,'p_term','parser.py',428),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC APOS','term',5,'p_term','parser.py',429),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',438),
  ('number -> NUMBER','number',1,'p_number','parser.py',442),
  ('number -> MINUS NUMBER','number',2,'p_number','parser.py',443),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',449),
  ('identifier -> IDENTIFIER APOS','identifier',2,'p_identifier','parser.py',450),
  ('identifier -> TRUE','identifier',1,'p_identifier','parser.py',451),
  ('identifier -> FALSE','identifier',1,'p_identifier','parser.py',452),
  ('asp_term -> asp_arith','asp_term',1,'p_asp_term','parser.py',469),
  ('asp_arith -> asp_operation asp_eqoperator asp_operation','asp_arith',3,'p_asp_arith','parser.py',492),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',496),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',497),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',498),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',499),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',500),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',501),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',502),
  ('asp_eqoperator -> ASSIGN','asp_eqoperator',1,'p_asp_eqoperator','parser.py',503),
  ('asp_eqoperator -> PLUSEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',504),
  ('asp_eqoperator -> MINUSEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',505),
  ('asp_operation -> asp_mult_operation','asp_operation',1,'p_asp_operation','parser.py',509),
  ('asp_operation -> asp_operation PLUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',510),
  ('asp_operation -> asp_operation MINUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',511),
  ('asp_operation -> term_numeric DDOT term_numeric','asp_operation',3,'p_asp_operation','parser.py',512),
  ('asp_mult_operation -> asp_pow_operation','asp_mult_operation',1,'p_asp_mult_operation','parser.py',519),
  ('asp_mult_operation -> asp_mult_operation TIMES asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',520),
  ('asp_mult_operation -> asp_mult_operation DIV asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',521),
  ('asp_pow_operation -> asp_brac_operation','asp_pow_operation',1,'p_asp_pow_operation','parser.py',528),
  ('asp_pow_operation -> asp_pow_operation POWER asp_brac_operation','asp_pow_operation',3,'p_asp_pow_operation','parser.py',529),
  ('asp_brac_operation -> term_numeric','asp_brac_operation',1,'p_asp_brac_operation','parser.py',536),
  ('asp_brac_operation -> LBRAC asp_operation RBRAC','asp_brac_operation',3,'p_asp_brac_operation','parser.py',537),
]
