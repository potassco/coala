
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C7C285686CD6ACF2FA3F6CFCF4E7C504'
    
_lr_action_items = {'RBRAC':([2,7,9,18,23,25,28,34,38,44,67,79,80,102,104,117,118,121,122,123,128,129,157,172,178,185,],[-104,-75,-76,-102,-82,-99,-80,-96,-77,-79,-81,122,-73,-97,-98,157,-65,-103,-105,-74,-101,-100,-78,182,-66,-64,]),'DEFAULT':([0,1,8,45,52,93,138,139,167,],[-1,4,-3,-5,-2,4,-7,-4,-6,]),'FLU':([0,1,8,45,52,69,93,138,139,150,167,],[-1,37,-3,-5,-2,106,37,-7,-4,106,-6,]),'NUMBER':([0,1,4,8,19,21,24,26,35,40,45,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,113,120,133,138,139,146,150,155,158,167,173,180,181,],[-1,28,28,-3,67,28,28,28,28,28,-5,-2,-93,-89,-95,-92,-94,28,28,-90,28,-91,28,28,28,28,28,28,28,67,28,28,28,28,28,28,28,28,28,28,28,28,28,-7,-4,28,28,28,28,-6,28,28,28,]),'ESCAPE_ASP':([0,1,8,45,52,93,138,139,167,],[-1,8,-3,-5,-2,138,-7,-4,-6,]),'IFCONS':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,55,66,67,73,77,80,88,102,103,104,111,116,119,121,122,123,124,125,126,128,129,141,157,160,],[-104,-75,-76,-71,-102,72,-82,-99,-80,-67,-96,-77,-72,-79,-70,-58,-68,-69,-81,113,-44,-73,113,-97,-88,-98,-46,113,113,-103,-105,-74,-86,-87,-85,-101,-100,-59,-78,-45,]),'COLON':([7,9,23,28,38,44,53,67,80,89,92,99,123,147,157,170,182,187,],[-75,-76,-82,-80,-77,-79,-56,-81,-73,133,133,-60,-74,-57,-78,-61,-62,-63,]),'DDOT':([7,9,23,28,38,44,67,80,123,157,164,],[-75,-76,-82,-80,-77,-79,-81,-73,-74,-78,180,]),'IF':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,53,55,66,67,77,80,85,99,102,103,104,115,121,122,123,124,125,126,128,129,141,147,157,170,182,187,],[-104,-75,-76,-71,-102,75,-82,-99,-80,-67,-96,-77,-72,-79,-70,-58,98,-56,-68,-69,-81,120,-73,120,-60,-97,-88,-98,155,-103,-105,-74,-86,-87,-85,-101,-100,-59,-57,-78,-61,-62,-63,]),'ACT':([0,1,8,45,52,69,93,138,139,150,167,],[-1,11,-3,-5,-2,107,11,-7,-4,107,-6,]),'DIV':([2,7,9,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,-102,-82,-99,-80,-73,86,-77,-79,-74,-81,-73,86,86,-103,-105,-74,-101,-100,-78,]),'TRUE':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,93,94,97,98,113,120,138,139,150,155,167,],[-1,17,17,-3,17,17,17,17,-5,-2,17,17,17,17,17,17,17,17,17,17,17,-7,-4,17,17,-6,]),'MINUS':([0,1,2,4,7,8,9,14,18,21,23,24,25,26,28,31,34,35,38,40,44,45,52,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,74,75,76,78,79,80,82,83,84,86,87,93,94,97,98,100,102,103,104,113,120,121,122,123,124,125,126,128,129,133,138,139,146,150,155,157,158,167,173,180,181,],[-1,19,-104,19,-75,-3,-76,64,-102,19,-82,19,-99,81,-80,-73,-96,19,-77,19,-79,-5,-2,-93,-89,-95,-92,-94,81,81,-90,81,-91,-74,-81,19,19,19,19,19,81,81,64,-73,81,81,81,81,81,19,19,19,19,81,-97,64,-98,19,19,-103,-105,-74,64,64,64,-101,-100,81,-7,-4,81,19,19,-78,81,-6,81,81,81,]),'DOT':([2,3,5,6,7,9,10,12,15,16,17,18,20,22,23,25,27,28,29,30,31,32,34,36,38,39,42,44,46,47,49,50,51,53,54,55,66,67,68,70,73,77,80,85,88,89,90,91,92,95,96,99,101,102,103,104,105,108,109,110,111,112,114,115,116,119,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,140,141,142,143,144,147,148,149,151,152,153,154,156,157,159,160,161,162,163,165,166,168,169,170,174,175,176,177,179,182,183,184,187,],[-104,-18,-12,-13,-75,-76,52,-10,-9,-16,-71,-102,-17,-49,-82,-99,-19,-80,-20,-23,-67,-14,-96,-11,-77,-72,-22,-79,-70,-58,-8,-15,-49,-56,-49,-68,-69,-81,-49,-24,-47,-44,-73,-44,-47,-49,-49,-49,-49,-49,-37,-60,-25,-97,-88,-98,-42,-50,-51,-55,-46,-49,-49,-49,-47,-47,-103,-105,-74,-86,-87,-85,-49,-101,-100,-49,-49,-26,-43,-30,-49,-27,167,-59,-36,-49,-49,-57,-56,-53,-32,-48,-33,-34,-49,-78,-49,-45,-21,-40,-28,-84,-29,-39,-38,-61,-54,-52,-49,-31,-41,-62,-35,-83,-63,]),'NEQ':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,65,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'LE':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,60,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'POWER':([2,7,9,18,23,25,28,31,38,44,66,67,80,121,122,123,128,129,157,],[-104,-75,-76,-102,-82,78,-80,-73,-77,-79,-74,-81,-73,-103,-105,-74,78,78,-78,]),'DFLU':([0,1,8,45,52,93,138,139,167,],[-1,43,-3,-5,-2,43,-7,-4,-6,]),'EQ':([2,7,9,14,18,23,25,28,31,34,38,44,53,66,67,80,102,104,121,122,123,128,129,148,157,],[-104,-75,-76,63,-102,-82,-99,-80,-73,-96,-77,-79,100,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,173,-78,]),'LT':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,59,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'VISIBLE':([0,1,8,45,52,93,138,139,167,],[-1,33,-3,-5,-2,33,-7,-4,-6,]),'INIT':([0,1,8,45,52,93,138,139,167,],[-1,21,-3,-5,-2,21,-7,-4,-6,]),'PLUS':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,79,80,102,103,104,121,122,123,124,125,126,128,129,157,],[-104,-75,-76,61,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,61,-73,-97,61,-98,-103,-105,-74,61,61,61,-101,-100,-78,]),'CAUSES':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,55,66,67,80,102,103,104,121,122,123,124,125,126,128,129,141,157,],[-104,-75,-76,-71,-102,74,-82,-99,-80,-67,-96,-77,-72,-79,-70,-58,-68,-69,-81,-73,-97,-88,-98,-103,-105,-74,-86,-87,-85,-101,-100,-59,-78,]),'COMMA':([2,7,9,17,18,23,25,28,31,34,38,39,44,46,47,53,55,66,67,80,99,102,103,104,108,109,110,118,121,122,123,124,125,126,128,129,147,148,149,157,171,174,175,182,],[-104,-75,-76,-71,-102,-82,-99,-80,-67,-96,-77,-72,-79,-70,94,-56,-68,-69,-81,-73,145,-97,-88,-98,150,-51,-55,158,-103,-105,-74,-86,-87,-85,-101,-100,-57,-56,-53,-78,181,-54,-52,186,]),'IDENTIFIER':([0,1,4,8,11,13,19,21,24,26,33,35,37,40,41,43,45,48,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,106,107,113,120,133,138,139,145,146,150,155,158,167,173,180,181,186,],[-1,23,23,-3,23,23,23,23,23,23,23,23,23,23,23,23,-5,23,-2,-93,-89,-95,-92,-94,23,23,-90,23,-91,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-7,-4,23,23,23,23,23,-6,23,23,23,23,]),'NONEXE':([0,1,8,45,52,93,138,139,167,],[-1,24,-3,-5,-2,24,-7,-4,-6,]),'$end':([0,1,8,52,139,],[-1,0,-3,-2,-4,]),'GT':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,56,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'EQQ':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,57,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'TIMES':([2,7,9,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,-102,-82,-99,-80,-73,87,-77,-79,-74,-81,-73,87,87,-103,-105,-74,-101,-100,-78,]),'ROLE_BEGIN':([0,1,8,52,139,],[-1,45,-3,-2,-4,]),'GE':([2,7,9,14,18,23,25,28,31,34,38,44,66,67,80,102,104,121,122,123,128,129,157,],[-104,-75,-76,58,-102,-82,-99,-80,-73,-96,-77,-79,-74,-81,-73,-97,-98,-103,-105,-74,-101,-100,-78,]),'VARIABLE':([0,1,4,8,11,13,19,21,24,26,33,35,37,40,41,43,45,48,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,106,107,113,120,133,138,139,145,146,150,155,158,167,173,180,181,186,],[-1,44,44,-3,44,44,44,44,44,44,44,44,44,44,44,44,-5,44,-2,-93,-89,-95,-92,-94,44,44,-90,44,-91,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-7,-4,44,44,44,44,44,-6,44,44,44,44,]),'IMPOSSIBLE':([0,1,8,45,52,93,138,139,167,],[-1,35,-3,-5,-2,35,-7,-4,-6,]),'WHERE':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,53,54,55,66,67,68,73,77,80,85,88,89,90,91,92,95,99,102,103,104,111,112,114,115,116,119,121,122,123,124,125,126,127,128,129,130,131,136,141,143,144,147,152,156,157,159,160,165,170,176,182,184,187,],[-104,-75,-76,-71,-102,69,-82,-99,-80,-67,-96,-77,-72,-79,-70,-58,69,-56,69,-68,-69,-81,69,-47,-44,-73,-44,-47,69,69,69,69,69,-60,-97,-88,-98,-46,69,69,69,-47,-47,-103,-105,-74,-86,-87,-85,69,-101,-100,69,69,69,-59,69,69,-57,-48,69,-78,69,-45,-84,-61,69,-62,-83,-63,]),'GOAL':([0,1,8,45,52,93,138,139,167,],[-1,40,-3,-5,-2,40,-7,-4,-6,]),'FALSE':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,93,94,97,98,113,120,138,139,150,155,167,],[-1,39,39,-3,39,39,39,39,-5,-2,39,39,39,39,39,39,39,39,39,39,39,-7,-4,39,39,-6,]),'LBRAC':([0,1,4,8,21,23,24,26,35,40,45,52,56,57,58,59,60,61,62,63,64,65,69,71,72,74,75,78,82,83,84,86,87,93,94,97,98,100,113,120,138,139,150,155,167,],[-1,26,26,-3,26,76,26,26,26,26,-5,-2,-93,-89,-95,-92,-94,26,26,-90,26,-91,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,146,26,26,-7,-4,26,26,-6,]),'INT':([0,1,8,45,52,93,133,138,139,167,],[-1,41,-3,-5,-2,41,165,-7,-4,-6,]),'INERTIAL':([0,1,8,45,52,93,138,139,167,],[-1,48,-3,-5,-2,48,-7,-4,-6,]),'AFTER':([2,7,9,17,18,22,23,25,28,31,34,38,39,44,46,47,51,55,66,67,80,102,103,104,121,122,123,124,125,126,128,129,141,157,],[-104,-75,-76,-71,-102,71,-82,-99,-80,-67,-96,-77,-72,-79,-70,-58,97,-68,-69,-81,-73,-97,-88,-98,-103,-105,-74,-86,-87,-85,-101,-100,-59,-78,]),'MINUSEQ':([9,23,31,38,44,157,],[-76,-82,83,-77,-79,-78,]),'ROLE_END':([45,93,138,167,],[-5,139,-7,-6,]),'ASSIGN':([9,23,31,38,44,157,],[-76,-82,84,-77,-79,-78,]),'PLUSEQ':([9,23,31,38,44,157,],[-76,-82,82,-77,-79,-78,]),'NOT':([0,1,4,8,21,24,35,40,45,52,69,71,72,74,75,93,94,97,98,113,120,138,139,150,155,167,],[-1,13,13,-3,13,13,13,13,-5,-2,13,13,13,13,13,13,13,13,13,13,13,-7,-4,13,13,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term_numeric':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,76,78,82,83,84,86,87,93,94,97,98,100,113,120,133,146,150,155,158,173,180,181,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,118,2,2,2,2,2,2,2,2,2,2,147,2,2,164,171,2,2,118,147,184,118,]),'asp_brac_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,78,82,83,84,86,87,93,94,97,98,113,120,150,155,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,121,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'imposs_law':([1,93,],[3,3,]),'act_fact':([1,93,],[5,5,]),'flu_fact':([1,93,],[6,6,]),'number':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,76,78,82,83,84,86,87,93,94,97,98,100,113,120,133,146,150,155,158,173,180,181,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'term_number_list_two':([146,],[172,]),'if_part':([77,85,],[119,127,]),'fluent_formula':([11,33,37,41,43,48,145,186,],[54,85,89,91,92,95,170,187,]),'dynamic_law':([1,93,],[50,50,]),'asp_eqoperator':([14,],[62,]),'asp_pow_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,82,83,84,86,87,93,94,97,98,113,120,150,155,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,128,129,25,25,25,25,25,25,25,25,]),'query':([1,93,],[12,12,]),'binding':([69,150,],[109,175,]),'after_part':([22,],[73,]),'asp_term':([1,4,21,24,35,40,69,71,72,74,75,93,94,97,98,113,120,150,155,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'law':([1,93,],[15,15,]),'inertial_law':([1,93,],[16,16,]),'default_law':([1,93,],[20,20,]),'program':([0,],[1,]),'role':([45,],[93,]),'formula':([1,4,21,24,35,40,71,72,74,75,93,94,97,98,113,120,155,],[22,51,68,77,88,90,111,112,115,116,22,141,143,144,152,160,176,]),'int_domain':([89,92,],[131,136,]),'nonexe_law':([1,93,],[27,27,]),'visible_law':([1,93,],[29,29,]),'goal_query':([1,93,],[30,30,]),'static_law':([1,93,],[32,32,]),'asp_mult_operation':([1,4,21,24,26,35,40,61,62,64,69,71,72,74,75,82,83,84,93,94,97,98,113,120,150,155,],[34,34,34,34,34,34,34,102,34,104,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'variable':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,106,107,113,120,133,145,146,150,155,158,173,180,181,186,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'bindings':([69,],[108,]),'pred_fact':([1,93,],[36,36,]),'term_number_list':([76,158,181,],[117,178,185,]),'term':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,106,107,113,120,133,145,146,150,155,158,173,180,181,186,],[31,31,53,55,66,31,31,80,53,31,53,31,53,53,53,80,80,80,31,31,31,31,31,80,80,123,80,80,80,80,80,31,31,31,31,80,148,149,31,31,80,53,80,31,31,80,80,80,80,53,]),'identifier':([1,4,11,13,19,21,24,26,33,35,37,40,41,43,48,61,62,64,69,71,72,74,75,76,78,81,82,83,84,86,87,93,94,97,98,100,106,107,113,120,133,145,146,150,155,158,173,180,181,186,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'where_part':([22,51,54,68,89,90,91,92,95,112,114,115,127,130,131,136,143,144,156,159,176,],[70,96,101,105,132,134,135,137,142,151,153,154,161,162,163,166,168,169,177,179,183,]),'init_rule':([1,93,],[42,42,]),'asp_operation':([1,4,21,24,26,35,40,62,69,71,72,74,75,82,83,84,93,94,97,98,113,120,150,155,],[14,14,14,14,79,14,14,103,14,14,14,14,14,124,125,126,14,14,14,14,14,14,14,14,]),'rule':([1,93,],[10,140,]),'equalpart':([53,148,],[99,174,]),'term_boolean':([1,4,21,24,35,40,69,71,72,74,75,93,94,97,98,113,120,150,155,],[47,47,47,47,47,47,110,47,47,47,47,47,47,47,47,47,47,110,47,]),'fact':([1,93,],[49,49,]),'ifcons_part':([73,88,116,119,],[114,130,156,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser.py',52),
  ('program -> program rule DOT','program',3,'p_program','parser.py',53),
  ('program -> program ESCAPE_ASP','program',2,'p_program','parser.py',54),
  ('program -> program ROLE_BEGIN role ROLE_END','program',4,'p_program','parser.py',55),
  ('role -> <empty>','role',0,'p_role','parser.py',80),
  ('role -> role rule DOT','role',3,'p_role','parser.py',81),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',82),
  ('rule -> fact','rule',1,'p_rule','parser.py',109),
  ('rule -> law','rule',1,'p_rule','parser.py',110),
  ('rule -> query','rule',1,'p_rule','parser.py',111),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',115),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',116),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',117),
  ('law -> static_law','law',1,'p_law','parser.py',122),
  ('law -> dynamic_law','law',1,'p_law','parser.py',123),
  ('law -> inertial_law','law',1,'p_law','parser.py',124),
  ('law -> default_law','law',1,'p_law','parser.py',125),
  ('law -> imposs_law','law',1,'p_law','parser.py',126),
  ('law -> nonexe_law','law',1,'p_law','parser.py',127),
  ('law -> visible_law','law',1,'p_law','parser.py',128),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',132),
  ('query -> init_rule','query',1,'p_query','parser.py',140),
  ('query -> goal_query','query',1,'p_query','parser.py',141),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',145),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',151),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',161),
  ('flu_fact -> DFLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',162),
  ('flu_fact -> FLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',163),
  ('flu_fact -> DFLU fluent_formula int_domain where_part','flu_fact',4,'p_flu_fact','parser.py',164),
  ('flu_fact -> INT fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',165),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',225),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',226),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',238),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',239),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',240),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',259),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',264),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',265),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',266),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',277),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',291),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',307),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',313),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',321),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',322),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',330),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',336),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',337),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',345),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',346),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',351),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',352),
  ('binding -> ACT term','binding',2,'p_binding','parser.py',360),
  ('binding -> FLU term equalpart','binding',3,'p_binding','parser.py',361),
  ('binding -> term_boolean','binding',1,'p_binding','parser.py',362),
  ('equalpart -> <empty>','equalpart',0,'p_equalpart','parser.py',376),
  ('equalpart -> EQ term_numeric','equalpart',2,'p_equalpart','parser.py',377),
  ('formula -> term_boolean','formula',1,'p_formula','parser.py',386),
  ('formula -> term_boolean COMMA formula','formula',3,'p_formula','parser.py',387),
  ('fluent_formula -> term equalpart','fluent_formula',2,'p_fluent_formula','parser.py',416),
  ('fluent_formula -> term equalpart COMMA fluent_formula','fluent_formula',4,'p_fluent_formula','parser.py',417),
  ('fluent_formula -> term EQ LBRAC term_number_list_two RBRAC','fluent_formula',5,'p_fluent_formula','parser.py',418),
  ('fluent_formula -> term EQ LBRAC term_number_list_two RBRAC COMMA fluent_formula','fluent_formula',7,'p_fluent_formula','parser.py',419),
  ('term_number_list_two -> term_numeric COMMA term_number_list','term_number_list_two',3,'p_term_number_list_two','parser.py',439),
  ('term_number_list -> term_numeric','term_number_list',1,'p_term_number_list','parser.py',444),
  ('term_number_list -> term_numeric COMMA term_number_list','term_number_list',3,'p_term_number_list','parser.py',445),
  ('term_boolean -> term','term_boolean',1,'p_term_boolean','parser.py',453),
  ('term_boolean -> NOT term','term_boolean',2,'p_term_boolean','parser.py',454),
  ('term_boolean -> MINUS term','term_boolean',2,'p_term_boolean','parser.py',455),
  ('term_boolean -> asp_term','term_boolean',1,'p_term_boolean','parser.py',456),
  ('term_boolean -> TRUE','term_boolean',1,'p_term_boolean','parser.py',457),
  ('term_boolean -> FALSE','term_boolean',1,'p_term_boolean','parser.py',458),
  ('term_numeric -> term','term_numeric',1,'p_term_numeric','parser.py',487),
  ('term_numeric -> MINUS term','term_numeric',2,'p_term_numeric','parser.py',488),
  ('term_numeric -> number','term_numeric',1,'p_term_numeric','parser.py',489),
  ('term -> variable','term',1,'p_term','parser.py',496),
  ('term -> identifier','term',1,'p_term','parser.py',497),
  ('term -> IDENTIFIER LBRAC term_number_list RBRAC','term',4,'p_term','parser.py',498),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',505),
  ('number -> NUMBER','number',1,'p_number','parser.py',509),
  ('number -> MINUS NUMBER','number',2,'p_number','parser.py',510),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',516),
  ('int_domain -> COLON term_numeric DDOT term_numeric','int_domain',4,'p_int_domain','parser.py',520),
  ('int_domain -> COLON INT','int_domain',2,'p_int_domain','parser.py',521),
  ('asp_term -> term ASSIGN asp_operation','asp_term',3,'p_asp_term','parser.py',545),
  ('asp_term -> term PLUSEQ asp_operation','asp_term',3,'p_asp_term','parser.py',546),
  ('asp_term -> term MINUSEQ asp_operation','asp_term',3,'p_asp_term','parser.py',547),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',548),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',565),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',566),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',567),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',568),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',569),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',570),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',571),
  ('asp_operation -> asp_mult_operation','asp_operation',1,'p_asp_operation','parser.py',575),
  ('asp_operation -> asp_operation PLUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',576),
  ('asp_operation -> asp_operation MINUS asp_mult_operation','asp_operation',3,'p_asp_operation','parser.py',577),
  ('asp_mult_operation -> asp_pow_operation','asp_mult_operation',1,'p_asp_mult_operation','parser.py',584),
  ('asp_mult_operation -> asp_mult_operation TIMES asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',585),
  ('asp_mult_operation -> asp_mult_operation DIV asp_pow_operation','asp_mult_operation',3,'p_asp_mult_operation','parser.py',586),
  ('asp_pow_operation -> asp_brac_operation','asp_pow_operation',1,'p_asp_pow_operation','parser.py',593),
  ('asp_pow_operation -> asp_pow_operation POWER asp_brac_operation','asp_pow_operation',3,'p_asp_pow_operation','parser.py',594),
  ('asp_brac_operation -> term_numeric','asp_brac_operation',1,'p_asp_brac_operation','parser.py',601),
  ('asp_brac_operation -> LBRAC asp_operation RBRAC','asp_brac_operation',3,'p_asp_brac_operation','parser.py',602),
]
