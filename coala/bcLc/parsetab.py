
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D343E67F1CFD32849CAF1CC710A4D68'
    
_lr_action_items = {'RBRAC':([7,81,86,89,98,99,121,161,164,167,],[-79,-76,-75,-74,-72,146,-77,167,-73,-78,]),'DEFAULT':([0,1,6,39,43,68,111,112,153,],[-1,13,-3,-5,-2,13,-7,-4,-6,]),'FLU':([0,1,6,39,43,50,68,111,112,120,153,],[-1,31,-3,-5,-2,80,31,-7,-4,80,-6,]),'NUMBER':([50,58,66,83,90,100,108,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,145,166,],[81,81,81,121,81,121,81,81,-90,-95,-86,81,-92,-96,-89,-91,-93,81,-97,-87,-94,-88,81,81,81,]),'ESCAPE_ASP':([0,1,6,39,43,68,111,112,153,],[-1,6,-3,-5,-2,111,-7,-4,-6,]),'IFCONS':([7,15,19,20,25,28,32,37,38,46,48,55,59,61,67,73,77,81,86,89,91,93,97,101,110,121,146,148,167,],[-79,-60,53,-69,-57,-59,-61,-67,-70,-67,-67,94,-43,94,-62,-63,-64,-76,-75,-74,-45,-58,94,94,-68,-77,-71,-44,-78,]),'DDOT':([7,81,86,89,121,152,167,],[-79,-76,-75,-74,-77,166,-78,]),'ACT':([0,1,6,39,43,50,68,111,112,120,153,],[-1,9,-3,-5,-2,79,9,-7,-4,79,-6,]),'DIV':([7,81,84,86,88,89,121,159,160,167,],[-79,-76,133,-75,-84,-74,-77,-85,133,-78,]),'TRUE':([0,1,6,13,18,21,29,33,39,43,52,53,54,56,57,68,75,76,94,102,111,112,143,153,],[-1,15,-3,15,15,15,15,15,-5,-2,15,15,15,15,15,15,15,15,15,15,-7,-4,15,-6,]),'MINUS':([0,1,6,7,13,18,21,29,33,39,43,50,52,53,54,56,57,58,66,68,75,76,81,84,86,88,89,90,94,102,108,111,112,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,145,153,159,160,166,167,],[-1,16,-3,-79,16,16,16,16,16,-5,-2,83,16,16,16,16,16,100,100,16,16,16,-76,135,-75,-84,-74,100,16,16,100,-7,-4,83,-77,-90,-95,-86,100,-92,-96,-89,-91,-93,100,-97,-87,-94,-88,100,16,100,-6,-85,135,100,-78,]),'DOT':([2,3,4,5,7,8,10,12,14,15,17,19,20,22,23,24,25,26,28,30,32,35,37,38,41,42,44,45,46,47,48,49,51,55,59,60,61,62,63,64,65,67,69,70,71,73,74,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,101,103,104,105,106,107,109,110,113,114,115,116,117,118,119,121,122,138,139,140,141,142,144,146,147,148,149,150,151,154,155,156,157,158,159,160,162,163,165,167,168,169,],[-19,-13,-12,-14,-79,43,-10,-9,-17,-60,-18,-48,-69,-20,-21,-24,-57,-15,-59,-11,-61,-23,-67,-70,-8,-16,-67,-48,-67,-48,-67,-48,-25,-46,-43,-43,-46,-48,-48,-80,-48,-62,-48,-65,-26,-63,-36,-64,-41,-76,-49,-82,-55,-75,-50,-84,-74,-45,-48,-58,-48,-48,-46,-46,-48,-48,-28,-42,-48,-29,-68,153,-35,-67,-48,-48,-52,-67,-77,-56,-54,-31,-47,-32,-33,-48,-71,-48,-44,-22,-39,-27,-66,-38,-37,-53,-51,-85,-83,-48,-30,-40,-78,-34,-81,]),'NEQ':([7,81,84,86,88,89,121,159,167,],[-79,-76,136,-75,-84,-74,-77,-85,-78,]),'LE':([7,81,84,86,88,89,121,159,167,],[-79,-76,130,-75,-84,-74,-77,-85,-78,]),'POWER':([7,81,84,86,88,89,121,159,160,167,],[-79,-76,124,-75,-84,-74,-77,-85,124,-78,]),'DFLU':([0,1,6,39,43,68,111,112,153,],[-1,36,-3,-5,-2,36,-7,-4,-6,]),'EQ':([7,20,37,38,44,46,48,81,84,86,88,89,115,119,121,146,159,167,],[-79,-69,66,-70,66,66,66,-76,134,-75,-84,-74,66,66,-77,-71,-85,-78,]),'LT':([7,81,84,86,88,89,121,159,167,],[-79,-76,129,-75,-84,-74,-77,-85,-78,]),'VISIBLE':([0,1,6,39,43,68,111,112,153,],[-1,27,-3,-5,-2,27,-7,-4,-6,]),'INIT':([0,1,6,39,43,68,111,112,153,],[-1,18,-3,-5,-2,18,-7,-4,-6,]),'PLUS':([7,81,84,86,88,89,121,159,160,167,],[-79,-76,131,-75,-84,-74,-77,-85,131,-78,]),'CAUSES':([7,15,19,20,25,28,32,37,38,46,48,67,73,77,81,86,89,93,110,121,146,167,],[-79,-60,56,-69,-57,-59,-61,-67,-70,-67,-67,-62,-63,-64,-76,-75,-74,-58,-68,-77,-71,-78,]),'LBRAC':([20,86,],[58,137,]),'COLON':([7,20,38,44,64,70,81,86,89,110,115,121,146,154,167,],[-79,-69,-70,-67,108,-65,-76,-75,-74,-68,-67,-77,-71,-66,-78,]),'IDENTIFIER':([0,1,6,9,11,13,16,18,21,27,29,31,33,34,36,39,40,43,50,52,53,54,56,57,58,66,68,72,75,76,79,80,83,90,94,102,108,111,112,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,145,153,166,],[-1,20,-3,20,20,20,20,20,20,20,20,20,20,20,20,-5,20,-2,86,20,20,20,20,20,86,86,20,20,20,20,20,20,20,86,20,20,86,-7,-4,86,-90,-95,-86,86,-92,-96,-89,-91,-93,86,-97,-87,-94,-88,86,20,86,-6,86,]),'NONEXE':([0,1,6,39,43,68,111,112,153,],[-1,21,-3,-5,-2,21,-7,-4,-6,]),'$end':([0,1,6,43,112,],[-1,0,-3,-2,-4,]),'GT':([7,81,84,86,88,89,121,159,167,],[-79,-76,123,-75,-84,-74,-77,-85,-78,]),'EQQ':([7,81,84,86,88,89,121,159,167,],[-79,-76,125,-75,-84,-74,-77,-85,-78,]),'TIMES':([7,81,84,86,88,89,121,159,160,167,],[-79,-76,128,-75,-84,-74,-77,-85,128,-78,]),'ROLE_BEGIN':([0,1,6,43,112,],[-1,39,-3,-2,-4,]),'GE':([7,81,84,86,88,89,121,159,167,],[-79,-76,127,-75,-84,-74,-77,-85,-78,]),'VARIABLE':([0,1,6,9,11,13,16,18,21,27,29,31,33,34,36,39,40,43,50,52,53,54,56,57,58,66,68,72,75,76,79,80,83,90,94,102,108,111,112,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,145,153,166,],[-1,7,-3,7,7,7,7,7,7,7,7,7,7,7,7,-5,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-7,-4,7,-90,-95,-86,7,-92,-96,-89,-91,-93,7,-97,-87,-94,-88,7,7,7,-6,7,]),'IMPOSSIBLE':([0,1,6,39,43,68,111,112,153,],[-1,29,-3,-5,-2,29,-7,-4,-6,]),'WHERE':([7,15,19,20,25,28,32,37,38,44,45,46,47,48,49,55,59,60,61,62,63,64,65,67,69,70,73,77,81,86,89,91,92,93,95,96,97,101,103,104,107,110,115,116,117,121,140,144,146,147,148,154,162,167,169,],[-79,-60,50,-69,-57,-59,-61,-67,-70,-67,50,-67,50,-67,50,-46,-43,-43,-46,50,50,-80,50,-62,50,-65,-63,-64,-76,-75,-74,-45,50,-58,50,50,-46,-46,50,50,50,-68,-67,50,50,-77,-47,50,-71,50,-44,-66,50,-78,-81,]),'IF':([7,15,19,20,25,28,32,37,38,44,46,47,48,59,60,67,70,73,77,81,86,89,93,96,110,115,121,146,154,167,],[-79,-60,57,-69,-57,-59,-61,-67,-70,-67,-67,76,-67,102,102,-62,-65,-63,-64,-76,-75,-74,-58,143,-68,-67,-77,-71,-66,-78,]),'FALSE':([0,1,6,13,18,21,29,33,39,43,52,53,54,56,57,68,75,76,94,102,111,112,143,153,],[-1,32,-3,32,32,32,32,32,-5,-2,32,32,32,32,32,32,32,32,32,32,-7,-4,32,-6,]),'GOAL':([0,1,6,39,43,68,111,112,153,],[-1,33,-3,-5,-2,33,-7,-4,-6,]),'INT':([0,1,6,39,43,68,111,112,153,],[-1,34,-3,-5,-2,34,-7,-4,-6,]),'INERTIAL':([0,1,6,39,43,68,111,112,153,],[-1,40,-3,-5,-2,40,-7,-4,-6,]),'AFTER':([7,15,19,20,25,28,32,37,38,46,47,48,67,73,77,81,86,89,93,110,121,146,167,],[-79,-60,52,-69,-57,-59,-61,-67,-70,-67,75,-67,-62,-63,-64,-76,-75,-74,-58,-68,-77,-71,-78,]),'ROLE_END':([39,68,111,153,],[-5,112,-7,-6,]),'NOT':([0,1,6,13,18,21,29,33,39,43,50,52,53,54,56,57,68,75,76,94,102,111,112,120,143,153,],[-1,11,-3,11,11,11,11,11,-5,-2,90,11,11,11,11,11,11,11,11,11,11,-7,-4,90,11,-6,]),'COMMA':([7,15,19,20,25,28,32,37,38,44,45,46,47,48,49,59,60,61,62,63,64,65,67,69,70,73,77,81,82,84,85,86,87,88,89,91,92,93,96,97,98,110,115,116,117,118,119,121,122,138,140,146,148,154,157,158,159,160,162,167,],[-79,-60,54,-69,-57,-59,-61,-67,-70,-67,72,-67,54,-67,54,54,72,54,72,54,72,72,-62,72,-65,-63,-64,-76,120,-82,-55,-75,-50,-84,-74,54,54,-58,54,54,145,-68,-67,54,54,-52,-67,-77,-56,-54,54,-71,54,-66,-53,-51,-85,-83,54,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asp_operator':([84,160,],[126,126,]),'imposs_law':([1,68,],[2,2,]),'int_fact':([1,68,],[3,3,]),'act_fact':([1,68,],[4,4,]),'flu_fact':([1,68,],[5,5,]),'fluent_formula':([9,27,31,34,36,40,],[45,60,62,64,65,69,]),'dynamic_law':([1,68,],[42,42,]),'asp_eqoperator':([84,],[132,]),'query':([1,68,],[10,10,]),'binding':([50,120,],[87,158,]),'after_part':([19,],[55,]),'bindings':([50,],[82,]),'law':([1,68,],[12,12,]),'inertial_law':([1,68,],[14,14,]),'asp_term':([50,90,120,],[85,138,85,]),'default_law':([1,68,],[17,17,]),'program':([0,],[1,]),'role':([39,],[68,]),'formula':([1,13,18,21,29,33,52,53,56,57,68,75,76,94,102,143,],[19,47,49,59,61,63,91,92,96,97,19,116,117,140,148,162,]),'int_domain':([64,],[107,]),'nonexe_law':([1,68,],[22,22,]),'visible_law':([1,68,],[23,23,]),'goal_query':([1,68,],[24,24,]),'tfa':([1,13,18,21,29,33,52,53,54,56,57,68,75,76,94,102,143,],[25,25,25,25,25,25,25,25,93,25,25,25,25,25,25,25,25,]),'static_law':([1,68,],[26,26,]),'atom':([1,13,18,21,29,33,52,53,54,56,57,68,75,76,94,102,143,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'if_part':([59,60,],[101,103,]),'pred_fact':([1,68,],[30,30,]),'term_list':([58,137,145,],[99,161,164,]),'term':([50,58,66,90,108,120,126,132,137,145,166,],[88,98,110,88,152,88,159,88,98,98,169,]),'var_term':([1,9,11,13,16,18,21,27,29,31,33,34,36,40,50,52,53,54,56,57,58,66,68,72,75,76,79,80,83,90,94,102,108,120,126,132,137,143,145,166,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,89,38,38,38,38,38,89,89,38,38,38,38,38,38,38,89,38,38,89,89,89,89,89,38,89,89,]),'where_part':([19,45,47,49,62,63,65,69,92,95,96,103,104,107,116,117,144,147,162,],[51,71,74,78,105,106,109,114,139,141,142,149,150,151,155,156,163,165,168,]),'init_rule':([1,68,],[35,35,]),'asp_operation':([50,90,120,132,],[84,84,84,160,]),'rule':([1,68,],[8,113,]),'fluent':([1,9,11,13,16,18,21,27,29,31,33,34,36,40,52,53,54,56,57,68,72,75,76,79,80,83,94,102,143,],[37,44,46,37,48,37,37,44,37,44,37,44,44,44,37,37,37,37,37,37,115,37,37,118,119,122,37,37,37,]),'equalpart':([37,44,46,48,115,119,],[67,70,73,77,154,157,]),'fact':([1,68,],[41,41,]),'ifcons_part':([55,61,97,101,],[95,104,144,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser.py',67),
  ('program -> program rule DOT','program',3,'p_program','parser.py',68),
  ('program -> program ESCAPE_ASP','program',2,'p_program','parser.py',69),
  ('program -> program ROLE_BEGIN role ROLE_END','program',4,'p_program','parser.py',70),
  ('role -> <empty>','role',0,'p_role','parser.py',95),
  ('role -> role rule DOT','role',3,'p_role','parser.py',96),
  ('role -> role ESCAPE_ASP','role',2,'p_role','parser.py',97),
  ('rule -> fact','rule',1,'p_rule','parser.py',124),
  ('rule -> law','rule',1,'p_rule','parser.py',125),
  ('rule -> query','rule',1,'p_rule','parser.py',126),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',130),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',131),
  ('fact -> int_fact','fact',1,'p_fact','parser.py',132),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',133),
  ('law -> static_law','law',1,'p_law','parser.py',137),
  ('law -> dynamic_law','law',1,'p_law','parser.py',138),
  ('law -> inertial_law','law',1,'p_law','parser.py',139),
  ('law -> default_law','law',1,'p_law','parser.py',140),
  ('law -> imposs_law','law',1,'p_law','parser.py',141),
  ('law -> nonexe_law','law',1,'p_law','parser.py',142),
  ('law -> visible_law','law',1,'p_law','parser.py',143),
  ('visible_law -> VISIBLE fluent_formula if_part where_part','visible_law',4,'p_visible_law','parser.py',147),
  ('query -> init_rule','query',1,'p_query','parser.py',167),
  ('query -> goal_query','query',1,'p_query','parser.py',168),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',172),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',181),
  ('int_fact -> INT fluent_formula int_domain where_part','int_fact',4,'p_int_fact','parser.py',192),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',204),
  ('flu_fact -> DFLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',205),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',222),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',223),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',252),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',253),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',254),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',308),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',315),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',316),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',317),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',341),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',355),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',371),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',379),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',389),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',390),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',397),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',402),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',403),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',410),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',411),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',416),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',417),
  ('binding -> ACT fluent','binding',2,'p_binding','parser.py',427),
  ('binding -> FLU fluent equalpart','binding',3,'p_binding','parser.py',428),
  ('binding -> NOT asp_term','binding',2,'p_binding','parser.py',429),
  ('binding -> asp_term','binding',1,'p_binding','parser.py',430),
  ('binding -> MINUS fluent','binding',2,'p_binding','parser.py',431),
  ('formula -> tfa','formula',1,'p_formula','parser.py',454),
  ('formula -> formula COMMA tfa','formula',3,'p_formula','parser.py',455),
  ('tfa -> atom','tfa',1,'p_tfa','parser.py',464),
  ('tfa -> TRUE','tfa',1,'p_tfa','parser.py',465),
  ('tfa -> FALSE','tfa',1,'p_tfa','parser.py',466),
  ('atom -> fluent equalpart','atom',2,'p_atom','parser.py',474),
  ('atom -> NOT fluent equalpart','atom',3,'p_atom','parser.py',475),
  ('atom -> MINUS fluent equalpart','atom',3,'p_atom','parser.py',476),
  ('fluent_formula -> fluent equalpart','fluent_formula',2,'p_fluent_formula','parser.py',494),
  ('fluent_formula -> fluent_formula COMMA fluent equalpart','fluent_formula',4,'p_fluent_formula','parser.py',495),
  ('equalpart -> <empty>','equalpart',0,'p_equalpart','parser.py',512),
  ('equalpart -> EQ term','equalpart',2,'p_equalpart','parser.py',513),
  ('fluent -> IDENTIFIER','fluent',1,'p_fluent','parser.py',518),
  ('fluent -> var_term','fluent',1,'p_fluent','parser.py',519),
  ('fluent -> IDENTIFIER LBRAC term_list RBRAC','fluent',4,'p_fluent','parser.py',520),
  ('term_list -> term','term_list',1,'p_term_list','parser.py',529),
  ('term_list -> term COMMA term_list','term_list',3,'p_term_list','parser.py',530),
  ('term -> var_term','term',1,'p_term','parser.py',540),
  ('term -> IDENTIFIER','term',1,'p_term','parser.py',541),
  ('term -> NUMBER','term',1,'p_term','parser.py',542),
  ('term -> MINUS NUMBER','term',2,'p_term','parser.py',543),
  ('term -> IDENTIFIER LBRAC term_list RBRAC','term',4,'p_term','parser.py',544),
  ('var_term -> VARIABLE','var_term',1,'p_var_term','parser.py',555),
  ('int_domain -> <empty>','int_domain',0,'p_int_domain','parser.py',559),
  ('int_domain -> COLON term DDOT term','int_domain',4,'p_int_domain','parser.py',560),
  ('asp_term -> asp_operation','asp_term',1,'p_asp_term','parser.py',575),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',576),
  ('asp_operation -> term','asp_operation',1,'p_asp_operation','parser.py',586),
  ('asp_operation -> asp_operation asp_operator term','asp_operation',3,'p_asp_operation','parser.py',587),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',597),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',598),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',599),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',600),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',601),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',602),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',603),
  ('asp_operator -> PLUS','asp_operator',1,'p_asp_operator','parser.py',607),
  ('asp_operator -> MINUS','asp_operator',1,'p_asp_operator','parser.py',608),
  ('asp_operator -> POWER','asp_operator',1,'p_asp_operator','parser.py',609),
  ('asp_operator -> TIMES','asp_operator',1,'p_asp_operator','parser.py',610),
  ('asp_operator -> DIV','asp_operator',1,'p_asp_operator','parser.py',611),
]
