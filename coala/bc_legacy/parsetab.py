
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '002FEE0BB7E7C223D19497ABB2EF9214'
    
_lr_action_items = {'RBRAC':([7,72,77,80,89,90,107,142,145,147,],[-71,-68,-67,-66,-64,131,-69,147,-65,-70,]),'DEFAULT':([0,1,6,57,],[-1,3,-2,-3,]),'FLU':([0,1,6,43,57,106,],[-1,21,-2,71,-3,71,]),'NUMBER':([43,51,58,74,81,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,130,],[72,72,72,107,72,107,72,-80,-76,72,-82,-85,-79,-81,-83,72,-86,-77,-84,-78,72,72,]),'ESCAPE_ASP':([0,1,6,57,],[-1,6,-2,-3,]),'IFCONS':([7,14,17,18,23,25,28,30,34,41,48,52,54,59,60,68,72,77,80,82,84,88,92,98,99,107,131,133,147,],[-71,-52,46,-61,-49,-51,-53,-62,-59,-59,85,-35,85,-54,-59,-56,-68,-67,-66,-37,-50,85,85,-60,-55,-69,-63,-36,-70,]),'ACT':([0,1,6,43,57,106,],[-1,9,-2,70,-3,70,]),'DIV':([7,72,75,77,79,80,107,140,141,147,],[-71,-68,118,-67,-74,-66,-69,-75,118,-70,]),'TRUE':([0,1,3,6,16,19,26,29,45,46,47,49,50,57,63,64,85,93,128,],[-1,14,14,-2,14,14,14,14,14,14,14,14,14,-3,14,14,14,14,14,]),'MINUS':([0,1,3,6,7,16,19,26,29,43,45,46,47,49,50,51,57,58,63,64,72,75,77,79,80,81,85,93,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,128,130,140,141,147,],[-1,11,11,-2,-71,11,11,11,11,74,11,11,11,11,11,91,-3,91,11,11,-68,120,-67,-74,-66,91,11,11,74,-69,-80,-76,91,-82,-85,-79,-81,-83,91,-86,-77,-84,-78,91,11,91,-75,120,-70,]),'DOT':([2,4,5,7,8,10,12,13,14,15,17,18,20,22,23,24,25,27,28,30,31,33,34,37,38,39,40,41,42,44,48,52,53,54,55,56,59,60,61,62,65,66,68,69,72,73,75,76,77,78,79,80,82,83,84,86,87,88,92,94,95,96,97,98,99,100,101,102,103,104,105,107,108,123,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,141,143,144,146,147,148,],[-14,-8,-9,-71,-11,-6,-5,-12,-52,-13,-40,-61,-15,-17,-49,-10,-51,-7,-53,-62,-16,57,-59,-4,-40,-59,-40,-59,-40,-18,-38,-35,-40,-38,-40,-40,-54,-59,-40,-28,-57,-19,-56,-33,-68,-41,-72,-47,-67,-42,-74,-66,-37,-40,-50,-40,-40,-38,-38,-20,-40,-34,-21,-60,-55,-27,-40,-40,-59,-44,-59,-69,-48,-46,-23,-39,-24,-25,-40,-63,-40,-36,-31,-30,-29,-58,-45,-43,-75,-73,-40,-22,-32,-70,-26,]),'NEQ':([7,72,75,77,79,80,107,140,147,],[-71,-68,121,-67,-74,-66,-69,-75,-70,]),'LE':([7,72,75,77,79,80,107,140,147,],[-71,-68,115,-67,-74,-66,-69,-75,-70,]),'DFLU':([0,1,6,57,],[-1,32,-2,-3,]),'WHERE':([7,14,17,18,23,25,28,30,34,38,39,40,41,42,48,52,53,54,55,56,59,60,61,65,68,72,77,80,82,83,84,86,87,88,92,95,98,99,101,102,103,107,125,129,131,132,133,137,143,147,],[-71,-52,43,-61,-49,-51,-53,-62,-59,43,-59,43,-59,43,-38,-35,43,-38,43,43,-54,-59,43,-57,-56,-68,-67,-66,-37,43,-50,43,43,-38,-38,43,-60,-55,43,43,-59,-69,-39,43,-63,43,-36,-58,43,-70,]),'LT':([7,72,75,77,79,80,107,140,147,],[-71,-68,114,-67,-74,-66,-69,-75,-70,]),'INIT':([0,1,6,57,],[-1,16,-2,-3,]),'COMMA':([7,14,17,18,23,25,28,30,34,38,39,40,41,42,52,53,54,55,56,59,60,61,65,68,72,73,75,76,77,78,79,80,82,83,84,87,88,89,98,99,101,102,103,104,105,107,108,123,125,131,133,137,138,139,140,141,143,147,],[-71,-52,47,-61,-49,-51,-53,-62,-59,47,-59,67,-59,47,47,67,47,47,67,-54,-59,67,-57,-56,-68,106,-72,-47,-67,-42,-74,-66,47,47,-50,47,47,130,-60,-55,47,47,-59,-44,-59,-69,-48,-46,47,-63,47,-58,-45,-43,-75,-73,47,-70,]),'CAUSES':([7,14,17,18,23,25,28,30,34,41,59,60,68,72,77,80,84,98,99,107,131,147,],[-71,-52,49,-61,-49,-51,-53,-62,-59,-59,-54,-59,-56,-68,-67,-66,-50,-60,-55,-69,-63,-70,]),'LBRAC':([18,77,],[51,122,]),'PLUS':([7,72,75,77,79,80,107,140,141,147,],[-71,-68,116,-67,-74,-66,-69,-75,116,-70,]),'IDENTIFIER':([0,1,3,6,9,11,16,19,21,26,29,32,35,36,43,45,46,47,49,50,51,57,58,63,64,67,70,71,74,81,85,93,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,128,130,],[-1,18,18,-2,18,18,18,18,18,18,18,18,18,18,77,18,18,18,18,18,77,-3,77,18,18,18,18,18,18,77,18,18,77,-80,-76,77,-82,-85,-79,-81,-83,77,-86,-77,-84,-78,77,18,77,]),'NONEXE':([0,1,6,57,],[-1,19,-2,-3,]),'$end':([0,1,6,57,],[-1,0,-2,-3,]),'GT':([7,72,75,77,79,80,107,140,147,],[-71,-68,109,-67,-74,-66,-69,-75,-70,]),'EQQ':([7,72,75,77,79,80,107,140,147,],[-71,-68,110,-67,-74,-66,-69,-75,-70,]),'TIMES':([7,72,75,77,79,80,107,140,141,147,],[-71,-68,113,-67,-74,-66,-69,-75,113,-70,]),'GE':([7,72,75,77,79,80,107,140,147,],[-71,-68,112,-67,-74,-66,-69,-75,-70,]),'VARIABLE':([0,1,3,6,9,11,16,19,21,26,29,32,35,36,43,45,46,47,49,50,51,57,58,63,64,67,70,71,74,81,85,93,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,128,130,],[-1,7,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-3,7,7,7,7,7,7,7,7,7,7,7,-80,-76,7,-82,-85,-79,-81,-83,7,-86,-77,-84,-78,7,7,7,]),'IMPOSSIBLE':([0,1,6,57,],[-1,26,-2,-3,]),'EQ':([7,18,30,34,39,41,60,72,75,77,79,80,103,105,107,131,140,147,],[-71,-61,-62,58,58,58,58,-68,119,-67,-74,-66,58,58,-69,-63,-75,-70,]),'IF':([7,14,17,18,23,25,28,30,34,38,41,52,59,60,68,72,77,80,84,87,98,99,107,131,147,],[-71,-52,50,-61,-49,-51,-53,-62,-59,64,-59,93,-54,-59,-56,-68,-67,-66,-50,128,-60,-55,-69,-63,-70,]),'FALSE':([0,1,3,6,16,19,26,29,45,46,47,49,50,57,63,64,85,93,128,],[-1,28,28,-2,28,28,28,28,28,28,28,28,28,-3,28,28,28,28,28,]),'GOAL':([0,1,6,57,],[-1,29,-2,-3,]),'INERTIAL':([0,1,6,57,],[-1,36,-2,-3,]),'AFTER':([7,14,17,18,23,25,28,30,34,38,41,59,60,68,72,77,80,84,98,99,107,131,147,],[-71,-52,45,-61,-49,-51,-53,-62,-59,63,-59,-54,-59,-56,-68,-67,-66,-50,-60,-55,-69,-63,-70,]),'NOT':([0,1,3,6,16,19,26,29,43,45,46,47,49,50,57,63,64,85,93,106,128,],[-1,35,35,-2,35,35,35,35,81,35,35,35,35,35,-3,35,35,35,35,81,35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asp_operator':([75,141,],[111,111,]),'imposs_law':([1,],[2,]),'act_fact':([1,],[4,]),'flu_fact':([1,],[5,]),'fluent_formula':([9,21,32,36,],[40,53,56,61,]),'dynamic_law':([1,],[8,]),'asp_eqoperator':([75,],[117,]),'query':([1,],[10,]),'bindings':([43,],[73,]),'after_part':([17,],[48,]),'asp_term':([43,81,106,],[76,123,76,]),'law':([1,],[12,]),'inertial_law':([1,],[13,]),'default_law':([1,],[15,]),'program':([0,],[1,]),'formula':([1,3,16,19,26,29,45,46,49,50,63,64,85,93,128,],[17,38,42,52,54,55,82,83,87,88,101,102,125,133,143,]),'nonexe_law':([1,],[20,]),'binding':([43,106,],[78,139,]),'goal_query':([1,],[22,]),'tfa':([1,3,16,19,26,29,45,46,47,49,50,63,64,85,93,128,],[23,23,23,23,23,23,23,23,84,23,23,23,23,23,23,23,]),'static_law':([1,],[24,]),'atom':([1,3,16,19,26,29,45,46,47,49,50,63,64,85,93,128,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'if_part':([52,],[92,]),'pred_fact':([1,],[27,]),'term_list':([51,122,130,],[90,142,145,]),'term':([43,51,58,81,106,111,117,122,130,],[79,89,98,79,79,140,79,89,89,]),'var_term':([1,3,9,11,16,19,21,26,29,32,35,36,43,45,46,47,49,50,51,58,63,64,67,70,71,74,81,85,93,106,111,117,122,128,130,],[30,30,30,30,30,30,30,30,30,30,30,30,80,30,30,30,30,30,80,80,30,30,30,30,30,30,80,30,30,80,80,80,80,30,80,]),'where_part':([17,38,40,42,53,55,56,61,83,86,87,95,101,102,129,132,143,],[44,62,66,69,94,96,97,100,124,126,127,134,135,136,144,146,148,]),'init_rule':([1,],[31,]),'asp_operation':([43,81,106,117,],[75,75,75,141,]),'rule':([1,],[33,]),'fluent':([1,3,9,11,16,19,21,26,29,32,35,36,45,46,47,49,50,63,64,67,70,71,74,85,93,128,],[34,34,39,41,34,34,39,34,34,39,60,39,34,34,34,34,34,34,34,103,104,105,108,34,34,34,]),'equalpart':([34,39,41,60,103,105,],[59,65,68,99,137,138,]),'fact':([1,],[37,]),'ifcons_part':([48,54,88,92,],[86,95,129,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser.py',62),
  ('program -> program ESCAPE_ASP','program',2,'p_program','parser.py',63),
  ('program -> program rule DOT','program',3,'p_program','parser.py',64),
  ('rule -> fact','rule',1,'p_rule','parser.py',69),
  ('rule -> law','rule',1,'p_rule','parser.py',70),
  ('rule -> query','rule',1,'p_rule','parser.py',71),
  ('fact -> pred_fact','fact',1,'p_fact','parser.py',75),
  ('fact -> act_fact','fact',1,'p_fact','parser.py',76),
  ('fact -> flu_fact','fact',1,'p_fact','parser.py',77),
  ('law -> static_law','law',1,'p_law','parser.py',81),
  ('law -> dynamic_law','law',1,'p_law','parser.py',82),
  ('law -> inertial_law','law',1,'p_law','parser.py',83),
  ('law -> default_law','law',1,'p_law','parser.py',84),
  ('law -> imposs_law','law',1,'p_law','parser.py',85),
  ('law -> nonexe_law','law',1,'p_law','parser.py',86),
  ('query -> init_rule','query',1,'p_query','parser.py',90),
  ('query -> goal_query','query',1,'p_query','parser.py',91),
  ('pred_fact -> formula where_part','pred_fact',2,'p_pred_fact','parser.py',95),
  ('act_fact -> ACT fluent_formula where_part','act_fact',3,'p_act_fact','parser.py',103),
  ('flu_fact -> FLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',113),
  ('flu_fact -> DFLU fluent_formula where_part','flu_fact',3,'p_flu_fact','parser.py',114),
  ('static_law -> formula IF formula ifcons_part where_part','static_law',5,'p_static_law','parser.py',129),
  ('static_law -> formula IFCONS formula where_part','static_law',4,'p_static_law','parser.py',130),
  ('dynamic_law -> formula after_part ifcons_part where_part','dynamic_law',4,'p_dynamic_law','parser.py',157),
  ('dynamic_law -> formula CAUSES formula where_part','dynamic_law',4,'p_dynamic_law','parser.py',158),
  ('dynamic_law -> formula CAUSES formula IF formula where_part','dynamic_law',6,'p_dynamic_law','parser.py',159),
  ('inertial_law -> INERTIAL fluent_formula where_part','inertial_law',3,'p_inertial_law','parser.py',207),
  ('default_law -> DEFAULT formula where_part','default_law',3,'p_default_law','parser.py',213),
  ('default_law -> DEFAULT formula IF formula where_part','default_law',5,'p_default_law','parser.py',214),
  ('default_law -> DEFAULT formula AFTER formula where_part','default_law',5,'p_default_law','parser.py',215),
  ('imposs_law -> IMPOSSIBLE formula ifcons_part where_part','imposs_law',4,'p_imposs_law','parser.py',236),
  ('nonexe_law -> NONEXE formula if_part ifcons_part where_part','nonexe_law',5,'p_nonexe_law','parser.py',249),
  ('init_rule -> INIT formula where_part','init_rule',3,'p_init_rule','parser.py',264),
  ('goal_query -> GOAL formula where_part','goal_query',3,'p_goal_query','parser.py',271),
  ('if_part -> <empty>','if_part',0,'p_if_part','parser.py',280),
  ('if_part -> IF formula','if_part',2,'p_if_part','parser.py',281),
  ('after_part -> AFTER formula','after_part',2,'p_after_part','parser.py',288),
  ('ifcons_part -> <empty>','ifcons_part',0,'p_ifcons_part','parser.py',293),
  ('ifcons_part -> IFCONS formula','ifcons_part',2,'p_ifcons_part','parser.py',294),
  ('where_part -> <empty>','where_part',0,'p_where_part','parser.py',301),
  ('where_part -> WHERE bindings','where_part',2,'p_where_part','parser.py',302),
  ('bindings -> binding','bindings',1,'p_bindings','parser.py',307),
  ('bindings -> bindings COMMA binding','bindings',3,'p_bindings','parser.py',308),
  ('binding -> ACT fluent','binding',2,'p_binding','parser.py',318),
  ('binding -> FLU fluent equalpart','binding',3,'p_binding','parser.py',319),
  ('binding -> NOT asp_term','binding',2,'p_binding','parser.py',320),
  ('binding -> asp_term','binding',1,'p_binding','parser.py',321),
  ('binding -> MINUS fluent','binding',2,'p_binding','parser.py',322),
  ('formula -> tfa','formula',1,'p_formula','parser.py',345),
  ('formula -> formula COMMA tfa','formula',3,'p_formula','parser.py',346),
  ('tfa -> atom','tfa',1,'p_tfa','parser.py',355),
  ('tfa -> TRUE','tfa',1,'p_tfa','parser.py',356),
  ('tfa -> FALSE','tfa',1,'p_tfa','parser.py',357),
  ('atom -> fluent equalpart','atom',2,'p_atom','parser.py',365),
  ('atom -> NOT fluent equalpart','atom',3,'p_atom','parser.py',366),
  ('atom -> MINUS fluent equalpart','atom',3,'p_atom','parser.py',367),
  ('fluent_formula -> fluent equalpart','fluent_formula',2,'p_fluent_formula','parser.py',385),
  ('fluent_formula -> fluent_formula COMMA fluent equalpart','fluent_formula',4,'p_fluent_formula','parser.py',386),
  ('equalpart -> <empty>','equalpart',0,'p_equalpart','parser.py',403),
  ('equalpart -> EQ term','equalpart',2,'p_equalpart','parser.py',404),
  ('fluent -> IDENTIFIER','fluent',1,'p_fluent','parser.py',409),
  ('fluent -> var_term','fluent',1,'p_fluent','parser.py',410),
  ('fluent -> IDENTIFIER LBRAC term_list RBRAC','fluent',4,'p_fluent','parser.py',411),
  ('term_list -> term','term_list',1,'p_term_list','parser.py',420),
  ('term_list -> term COMMA term_list','term_list',3,'p_term_list','parser.py',421),
  ('term -> var_term','term',1,'p_term','parser.py',431),
  ('term -> IDENTIFIER','term',1,'p_term','parser.py',432),
  ('term -> NUMBER','term',1,'p_term','parser.py',433),
  ('term -> MINUS NUMBER','term',2,'p_term','parser.py',434),
  ('term -> IDENTIFIER LBRAC term_list RBRAC','term',4,'p_term','parser.py',435),
  ('var_term -> VARIABLE','var_term',1,'p_var_term','parser.py',446),
  ('asp_term -> asp_operation','asp_term',1,'p_asp_term','parser.py',452),
  ('asp_term -> asp_operation asp_eqoperator asp_operation','asp_term',3,'p_asp_term','parser.py',453),
  ('asp_operation -> term','asp_operation',1,'p_asp_operation','parser.py',463),
  ('asp_operation -> asp_operation asp_operator term','asp_operation',3,'p_asp_operation','parser.py',464),
  ('asp_eqoperator -> EQQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',474),
  ('asp_eqoperator -> EQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',475),
  ('asp_eqoperator -> NEQ','asp_eqoperator',1,'p_asp_eqoperator','parser.py',476),
  ('asp_eqoperator -> LT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',477),
  ('asp_eqoperator -> GT','asp_eqoperator',1,'p_asp_eqoperator','parser.py',478),
  ('asp_eqoperator -> LE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',479),
  ('asp_eqoperator -> GE','asp_eqoperator',1,'p_asp_eqoperator','parser.py',480),
  ('asp_operator -> PLUS','asp_operator',1,'p_asp_operator','parser.py',484),
  ('asp_operator -> MINUS','asp_operator',1,'p_asp_operator','parser.py',485),
  ('asp_operator -> TIMES','asp_operator',1,'p_asp_operator','parser.py',486),
  ('asp_operator -> DIV','asp_operator',1,'p_asp_operator','parser.py',487),
]
