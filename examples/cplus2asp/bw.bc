% Our Translation for a cplus2asp example

% Direct asp code is wrapped by <asp> </asp> tags. Note that the tanslater doesn't check anything inside it.
%:- objects
%	b1, b2, b3, b4 :: block;
%	table :: loc.
<asp>
location(table).
location(B) :- block(B).
block(b1).block(b2).block(b3).block(b4).
</asp>

% Declare all fluents
%:- constants
%	loc(block) 		:: inertialFluent(loc);
%	in_tower(block)	:: sdFluent;
%	move(block, loc):: action.
fluent loc(B) = L where block(B),location(L).
fluent in_tower(B) where block(B).

% Set loc inertial
%	loc(block) 		:: inertialFluent(loc);
inertial loc(B) where block(B).

% Declare actions
action move(B,L) where block(B), location(L), L!=B.



% location
%impossible loc(B1) = B, loc(B2) = B where B1\=B2.
impossible loc(B1) = B, loc(B2) = B where B1!=B2, block(B1), block(B2), block(B).

% Definition of a tower
%default -in_tower(B).
%in_tower(B) if loc(B) = table.
%in_tower(B) if loc(B) = B1, in_tower(B1).
default -in_tower(B) where block(B).
in_tower(B) if loc(B) = table where block(B).
in_tower(B) if loc(B) = B1, in_tower(B1) where block(B1), block(B2), block(B).

% Moving a block
%move(B,L) causes loc(B)=L.
move(B,L) causes loc(B)=L where location(L), block(B), B!=L.

% Blocks don't float in the air
%impossible -in_tower(B).
impossible -in_tower(B) where block(B).

%nonexecutable move(B,L) if loc(B1) = B.
nonexecutable move(B,L) if loc(B1) = B where block(B), block(B1), location(L).



%:- query
%	label :: stack;
%	0: loc(B)=table;
%	maxstep: loc(b4)=b3, loc(b3)=b2, loc(b2)=b1.
% Definition an initial state and the definition of a goal state.
initially loc(B)=table where block(B).
goal loc(b2)=b1, loc(b3)=b2, loc(b4)=b3. % These rules can also be separated, as all goals have to be fullfilled.

