%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% File: 'blocks.obc': The blocks world
%% Author: Joseph Babb
%% Date: 10/07/2012
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% The agent is tasked with creating a specific
%% arrangement of stacked blocks given a set of
%% blocks currently on the table. Meanwhile, an
%% external antagonist has the ability to 'rain'
%% more blocks on the table at any given time.
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Based on the example provided with:
%%             oClingo v. 3.0.92
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%:- sorts
%  location >> block;
%  block >> (nblock, rblock).
%
%:- objects
%  table                         :: location;
%  1..6       					:: nblock;
%  a,b,c,d						:: rblock.
<asp>
locationStar(X) :- location(X).
location(X) :- block(X).
block(B) :- nblock(B).
block(B) :- rblock(B).
locationStar(none).
location(table).
nblock(1..6).
rblock(a).rblock(b).rblock(c).rblock(d).
</asp>
  
%:- constants
%  loc(block)                    :: simpleFluent(location*);
%  move(block,location)          :: exogenousAction;
%  rained(block)					:: simpleFluent;
%  ext_rain(rblock,location*)	:: externalAction.
fluent loc(Block)=X where locationStar(X), block(Block).
fluent rained(Block) where block(Block). % should be rblock
action move(Block,Location) where location(Location), block(Block).
action ext_rain(Block,Location) where locationStar(Location), block(Block).

%:- variables
%  B,B1,B2                       :: block;
%  BR							:: rblock;
%  L,L1                          :: location.
%
%% Inertia
%inertial loc(B).
%inertial rained(B).
inertial loc(Block) where block(Block).
inertial rained(Block) where block(Block).

%% move one block each step
%nonexecutable move(B,L) & move(B1,L1) where B1 < B.
%nonexecutable move(B,L) & move(B1,L1) where L1 < L.
nonexecutable move(B,L), move(B1,L1) where B1 != B, block(B), block(B1), location(L), location(L1).
nonexecutable move(B,L), move(B1,L1) where L1 != L, block(B), block(B1), location(L), location(L1).

%% block is at new location if moved to it
%move(B,L) causes loc(B)=L.
move(B,L) causes loc(B)=L where block(B), location(L).

%% only move blocks that don't have blocks on top of them
%nonexecutable move(B,L) if loc(B1)=B.
nonexecutable move(B,L) if loc(B1)=B where block(B), location(L), block(B1).

%% only move blocks on blocks that don't have blocks on them
%nonexecutable move(B,B1) if loc(B2)=B1.
nonexecutable move(B,B1) if loc(B2)=B1 where block(B), block(B2), block(B1).

%% Don't move blocks to the same location
%nonexecutable move(B,L) if loc(B)=L.
nonexecutable move(B,L) if loc(B)=L where block(B), location(L).

%% A block shouldn't be on top of itself.
%impossible loc(B)=B.
impossible loc(B)=B where block(B).

%% Don't move blocks that did not rain yet
%nonexecutable move(BR,L) if ~rained(BR).
nonexecutable move(BR,L) if -rained(BR) where rblock(BR), location(L).

%% Don't move blocks onto blocks that haven't rained yet.
%nonexecutable move(B,BR) if ~rained(BR).
nonexecutable move(B,BR) if -rained(BR) where block(B), rblock(BR).

%% It's raining blocks
%ext_rain(BR,L) causes loc(BR)=L.
%ext_rain(BR,L) causes rained(BR).
ext_rain(BR,L) causes rained(BR), loc(BR)=L where rblock(BR), location(L).

%% Addition: If a block hasn't rained, its location is undefined.
%impossible ~rained(BR) & loc(BR)=L where L \= none.
impossible -rained(BR), loc(BR)=L where location(L), rblock(BR). % L != none is not required.

%:- hide all.
%:- show move(B,L), loc(B)=L, ext_rain(BR,L).
%
%
%:- query
%  0:       loc(1)=2 & loc(2)=table & loc(3)=4 &
%           loc(4)=table & loc(5)=6 & loc(6)=table &
%		   ~rained(a) & ~rained(b) & ~rained(c) & ~rained(d);
%  maxstep: loc(1)=table & loc(2)=1 & loc(3)=2 &
%           loc(4)=table & loc(5)=4 & loc(6)=5.
initially loc(1)=2, loc(2)=table, loc(3)=4,
    loc(4)=table, loc(5)=6, loc(6)=table.
initially -rained(A) where rblock(A).

goal loc(B)=table where nblock(B).

%can be run from this directory using
% coala blocks.obcp | clingo - ../../encodings/incremental_clingo.lp | outputformatclingocoala
